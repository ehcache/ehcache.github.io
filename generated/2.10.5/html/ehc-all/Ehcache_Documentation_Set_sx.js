//  Search index entries generated by WebWorks ePublisher // // Copyright (c) 2018 Software AG, Darmstadt, Germany and/or Software AG USA Inc., Reston, VA, USA //
var info =
{
"pages":
[
["Ehcache_Documentation_Set\u002Fto-ehcache_online_documentation_library.html","Welcome to the Ehcache 2.10 Online Documentation Library","This library contains the product documentation for Ehcache, an open source, standards-based cache for boosting performance, offloading your database, and simplifying scalability. Ehcache is the most widely-used Java-based cache because it\u0027s robust, proven, and full-featured. Ehcache scales from in-...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair1.js"]
,["Ehcache_Documentation_Set\u002Fco-ehcache_release_notes.html","Ehcache 2.10 Release Notes","For detailed information about what is new in Ehcache, see the Release Notes for Ehcache 2.10 on the Release Information page. About Ehcache Ehcache Overview What is Ehcache? Ehcache is an open-source, standards-based cache for boosting performance, offloading your database, and simplifying scalabil...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair2.js"]
,["Ehcache_Documentation_Set\u002Fto-title_about_ehcache.html","About Ehcache","Ehcache Overview What is Ehcache? Ehcache is an open-source, standards-based cache for boosting performance, offloading your database, and simplifying scalability. As a robust, proven, and full-featured solution, it is today\u2019s most widely used Java-based cache. You can use Ehcache as a general-purpo...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair3.js"]
,["Ehcache_Documentation_Set\u002Fto-over_ehcache_overview.html","Ehcache Overview","What is Ehcache? Ehcache is an open-source, standards-based cache for boosting performance, offloading your database, and simplifying scalability. As a robust, proven, and full-featured solution, it is today\u2019s most widely used Java-based cache. You can use Ehcache as a general-purpose cache or a sec...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair4.js"]
,["Ehcache_Documentation_Set\u002Fco-over_what_is_ehcache.html","What is Ehcache?","Ehcache is an open-source, standards-based cache for boosting performance, offloading your database, and simplifying scalability. As a robust, proven, and full-featured solution, it is today\u2019s most widely used Java-based cache. You can use Ehcache as a general-purpose cache or a second-level cache f...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair5.js"]
,["Ehcache_Documentation_Set\u002Fco-cache_basic_terms.html","Basic Terms","Cache Wiktionary defines a cache as \u0022a store of things that will be required in the future, and can be retrieved rapidly.\u0022 A cache is a collection of temporary data that either duplicates data located elsewhere or is the result of a computation. Data that is already in the cache can be repeatedly ac...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair6.js"]
,["Ehcache_Documentation_Set\u002Fto-basics_why_caching_works.html","Why Caching Works","Locality of Reference While Ehcache concerns itself with Java objects, caching is used throughout computing, from CPU caches to the Internet Domain Name System (DNS) system. Why? Because many computer systems exhibit \u0022locality of reference.\u0022 Data that is near other data or has recently been used is ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair7.js"]
,["Ehcache_Documentation_Set\u002Fco-basics_locality_of_reference.html","Locality of Reference","While Ehcache concerns itself with Java objects, caching is used throughout computing, from CPU caches to the Internet Domain Name System (DNS) system. Why? Because many computer systems exhibit \u0022locality of reference.\u0022 Data that is near other data or has recently been used is more likely to be used...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair8.js"]
,["Ehcache_Documentation_Set\u002Fco-basics_will_app_benefit.html","Will an Application Benefit from Caching?","Often the answer is yes, especially if the application is I\u002FO bound. If an application is I\u002FO bound, it depends on the rate at which data can be obtained. If it is CPU bound, then the time taken principally depends on the speed of the CPU and main memory. Caching can improve performance and also red...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair9.js"]
,["Ehcache_Documentation_Set\u002Fco-basics_how_much_speed_up.html","How Much Will an Application Speed up with Caching?","In applications that are I\u002FO bound, which is most business applications, most of the response time is getting data from a database. In a system where each piece of data is used only one time, there is no benefit. In a system where a high proportion of the data is reused, the speed up is significant....","Ehcache_Documentation_Set\u002Fpairs\u002Fpair10.js"]
,["Ehcache_Documentation_Set\u002Fto-top_caching_topologies.html","Caching Topologies","Topology Types Standalone \u2013 The data set is held in the application node. Any other application nodes are independent with no communication between them. If a standalone topology is used where there are multiple application nodes running the same application, then there is Weak Consistency between t...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair11.js"]
,["Ehcache_Documentation_Set\u002Fco-top_topology_types.html","Topology Types","Standalone \u2013 The data set is held in the application node. Any other application nodes are independent with no communication between them. If a standalone topology is used where there are multiple application nodes running the same application, then there is Weak Consistency between them. They conta...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair12.js"]
,["Ehcache_Documentation_Set\u002Fto-store_storage_options.html","Storage Options","Storage Tiers You can divide a cache or in-memory data set across the following storage areas, referred to as tiers: MemoryStore \u2013 On-heap memory used to hold cache elements. This tier is subject to Java garbage collection.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair13.js"]
,["Ehcache_Documentation_Set\u002Fco-store_storage_tiers.html","Storage Tiers","You can divide a cache or in-memory data set across the following storage areas, referred to as tiers: MemoryStore \u2013 On-heap memory used to hold cache elements. This tier is subject to Java garbage collection.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair14.js"]
,["Ehcache_Documentation_Set\u002Fto-arc_automatic_resource_control.html","Automatic Resource Control","Automatic Resource Control Automatic Resource Control (ARC) gives you fine-grained controls for tuning performance and enabling trade-offs between throughput, latency and data access. Independently adjustable configuration parameters include differentiated tier-based sizing and pinning hot or eterna...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair15.js"]
,["Ehcache_Documentation_Set\u002Fco-arc_automatic_resource_control.html","Automatic Resource Control","Automatic Resource Control (ARC) gives you fine-grained controls for tuning performance and enabling trade-offs between throughput, latency and data access. Independently adjustable configuration parameters include differentiated tier-based sizing and pinning hot or eternal data in the most effectiv...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair16.js"]
,["Ehcache_Documentation_Set\u002Fto-title_ehcache_installation_guide.html","Installation Guide","Installing Ehcache for General-Purpose Caching Download Ehcache from http:\u002F\u002Fehcache.org\u002Fdownloads. Beginning with Ehcache 1.7.1, Ehcache depends on SLF4J (http:\u002F\u002Fwww.slf4j.org) for logging. SLF4J is a logging framework with a choice of concrete logging implementations. For configuration details, see...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair17.js"]
,["Ehcache_Documentation_Set\u002Fco-installing_ehcache_for_general_purpose_caching.html","Installing Ehcache for General-Purpose Caching","Download Ehcache from http:\u002F\u002Fehcache.org\u002Fdownloads. Beginning with Ehcache 1.7.1, Ehcache depends on SLF4J (http:\u002F\u002Fwww.slf4j.org) for logging. SLF4J is a logging framework with a choice of concrete logging implementations. For configuration details, see \u0022Logging\u0022 in the Ehcache Operations Guide.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair18.js"]
,["Ehcache_Documentation_Set\u002Fco-installing_ehcache_for_specific_technologies.html","Installing Ehcache for Specific Technologies","Hibernate Perform the same steps as for general-purpose caching (see Installing Ehcache for General-Purpose Caching). Create caches in ehcache.xml. For more information, see \u0022Using Ehcache with Hibernate\u0022 in the Integrations book.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair19.js"]
,["Ehcache_Documentation_Set\u002Fto-title_product_documentation.html","Product Documentation","Ehcache Developer Guide Key Classes and Methods About the Key Classes Ehcache consists of a CacheManager, which manages logical data sets represented as Caches. A Cache object contains Elements, which are essentially name-value pairs. You can use Cache objects to hold any kind of data that you want ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair20.js"]
,["Ehcache_Documentation_Set\u002Fto-title_ehcache_developer_guide.html","Ehcache Developer Guide","Key Classes and Methods About the Key Classes Ehcache consists of a CacheManager, which manages logical data sets represented as Caches. A Cache object contains Elements, which are essentially name-value pairs. You can use Cache objects to hold any kind of data that you want to keep in memory, not j...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair21.js"]
,["Ehcache_Documentation_Set\u002Fto-key_classes_and_methods.html","Key Classes and Methods","About the Key Classes Ehcache consists of a CacheManager, which manages logical data sets represented as Caches. A Cache object contains Elements, which are essentially name-value pairs. You can use Cache objects to hold any kind of data that you want to keep in memory, not just data that you want t...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair22.js"]
,["Ehcache_Documentation_Set\u002Fco-key_about_key_classes.html","About the Key Classes","Ehcache consists of a CacheManager, which manages logical data sets represented as Caches. A Cache object contains Elements, which are essentially name-value pairs. You can use Cache objects to hold any kind of data that you want to keep in memory, not just data that you want to cache.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair23.js"]
,["Ehcache_Documentation_Set\u002Fco-key_cachemanager.html","CacheManager","The CacheManager class is used to manage caches. Creation of, access to, and removal of caches is controlled by a named CacheManager. CacheManager Creation Modes CacheManager supports two creation modes: singleton and instance. The two types can exist in the same JVM. However, multiple CacheManagers...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair24.js"]
,["Ehcache_Documentation_Set\u002Fco-key_cache.html","Cache","A Cache is a thread-safe logical representation of a set of data elements, analogous to a cache region in many caching systems. Once a reference to a cache is obtained (through a CacheManager), logical actions can be performed. The physical implementation of these actions is relegated to the stores....","Ehcache_Documentation_Set\u002Fpairs\u002Fpair25.js"]
,["Ehcache_Documentation_Set\u002Fco-key_element.html","Element","An element is an atomic entry in a cache. It has a key, a value, and a record of accesses. Elements are put into and removed from caches. They can also expire and be removed by the cache, depending on the cache settings.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair26.js"]
,["Ehcache_Documentation_Set\u002Fto-codebasics_basic_caching.html","Basic Caching","Creating a CacheManager All usages of the Ehcache API start with the creation of a CacheManager. The following code snippets illustrate various ways to create one. Singleton versus Instance The following creates a singleton CacheManager using defaults, then list caches.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair27.js"]
,["Ehcache_Documentation_Set\u002Fco-codebasics_creating_the_cachemanager.html","Creating a CacheManager","All usages of the Ehcache API start with the creation of a CacheManager. The following code snippets illustrate various ways to create one. Singleton versus Instance The following creates a singleton CacheManager using defaults, then list caches.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair28.js"]
,["Ehcache_Documentation_Set\u002Fco-codebasics_loading_a_configuration.html","Loading a Configuration","When a CacheManager is created, it creates caches found in a provided configuration. The following creates a CacheManager based on the configuration defined in the ehcache.xml file in the classpath. CacheManager manager = CacheManager.newInstance();","Ehcache_Documentation_Set\u002Fpairs\u002Fpair29.js"]
,["Ehcache_Documentation_Set\u002Fco-codebasics_adding_removing_caches.html","Adding and Removing Caches Programmatically","Adding Caches Programmatically You are not limited to using caches that are placed in the CacheManager configuration. A new cache based on the default configuration can be added to a CacheManager very simply:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair30.js"]
,["Ehcache_Documentation_Set\u002Fco-codebasics_performing_cache_operations.html","Performing Basic Cache Operations","The following examples refer to manager, which is a reference to a CacheManager that contains a cache called sampleCache1. Obtaining a reference to a Cache The following obtains a Cache called sampleCache1, which has been preconfigured in the configuration file","Ehcache_Documentation_Set\u002Fpairs\u002Fpair31.js"]
,["Ehcache_Documentation_Set\u002Fco-codebasics_shutting_down_cachemanager.html","Shut down the CacheManager","You should shut down a CacheManager after use. It does have a shut-down hook, but it is a best practice to shut it down in your code. The following shuts down the singleton CacheManager: CacheManager.getInstance().shutdown();","Ehcache_Documentation_Set\u002Fpairs\u002Fpair32.js"]
,["Ehcache_Documentation_Set\u002Fco-codebasics_the_junit_tests.html","JUnit Tests","Ehcache comes with a comprehensive JUnit test suite, which not only tests the code, but shows you how to use the Ehcache API. You can browse the available tests here: https:\u002F\u002Ffisheye.terracotta.org\u002Fbrowse\u002FEhcache\u002Fbranches\u002Fehcache-2.10.1\u002Fehcache-core\u002Fsrc\u002Ftest\u002Fjava\u002Fnet\u002Fsf\u002Fehcache\u002Fsearch. The unit test...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair33.js"]
,["Ehcache_Documentation_Set\u002Fto-pattrn_cache_usage_patterns.html","Cache Usage Patterns","Supported Usage Patterns There are several common access patterns when using a cache. Ehcache supports the following patterns: Cache-aside (or direct manipulation) Cache-as-sor (a combination of read-through and write-through or write-behind patterns)","Ehcache_Documentation_Set\u002Fpairs\u002Fpair34.js"]
,["Ehcache_Documentation_Set\u002Fco-pattrn_introduction_to_patterns.html","Supported Usage Patterns","There are several common access patterns when using a cache. Ehcache supports the following patterns: Cache-aside (or direct manipulation) Cache-as-sor (a combination of read-through and write-through or write-behind patterns)","Ehcache_Documentation_Set\u002Fpairs\u002Fpair35.js"]
,["Ehcache_Documentation_Set\u002Fco-pattrn_cache_aside.html","cache-aside","With the cache-aside pattern, application code uses the cache directly. This means that application code which accesses the system-of-record (SOR) should consult the cache first, and if the cache contains the data, then return the data directly from the cache, bypassing the SOR.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair36.js"]
,["Ehcache_Documentation_Set\u002Fco-pattrn_cache_as_sor.html","cache-as-sor","The cache-as-sor pattern implies using the cache as though it were the primary system-of-record (SOR). The pattern delegates SOR reading and writing activities to the cache, so that application code is absolved of this responsibility.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair37.js"]
,["Ehcache_Documentation_Set\u002Fco-pattrn_read_through.html","read-through","The read-through pattern mimics the structure of the cache-aside pattern when reading data. The difference is that you must implement the CacheEntryFactory interface to instruct the cache how to read objects on a cache miss, and you must wrap the Cache instance with an instance of SelfPopulatingCach...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair38.js"]
,["Ehcache_Documentation_Set\u002Fco-pattrn_write_though.html","write-through","The write-through pattern mimics the structure of the cache-aside pattern when writing data. The difference is that you must implement the CacheWriter interface and configure the cache for write-through mode.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair39.js"]
,["Ehcache_Documentation_Set\u002Fco-pattrn_write_behind.html","write-behind","The write-behind pattern changes the timing of the write to the system-of-record. Rather than writing to the system-of-record in the same thread of execution, write-behind queues the data for write at a later time.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair40.js"]
,["Ehcache_Documentation_Set\u002Fco-pattrn_copy_cache.html","Copy Cache","A copy cache can have two behaviors: it can copy Element instances it returns, when copyOnRead is true and copy elements it stores, when copyOnWrite to true. A copy-on-read cache can be useful when you can\u0027t let multiple threads access the same Element instance (and the value it holds) concurrently....","Ehcache_Documentation_Set\u002Fpairs\u002Fpair41.js"]
,["Ehcache_Documentation_Set\u002Fto-srch_searching_a_cache.html","Searching a Cache","About Searching The Search API allows you to execute arbitrarily complex queries against caches. The development of alternative indexes on values provides the ability for data to be looked up based on multiple criteria instead of just keys.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair42.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_about_searching.html","About Searching","The Search API allows you to execute arbitrarily complex queries against caches. The development of alternative indexes on values provides the ability for data to be looked up based on multiple criteria instead of just keys.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair43.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_making_cache_searchable.html","Making a Cache Searchable","Caches can be made searchable, on a per cache basis, either by configuration or programmatically. By Configuration Caches are made searchable by adding a <searchable\u002F> tag to the cache definition in the ehcache.xml file.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair44.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_defining_attributes.html","Defining Attributes","In addition to configuring a cache to be searchable, you must define the attributes to be used in searches. Attributes are extracted from keys or values during search by using AttributeExtractors. An extracted attribute must be one of the following types:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair45.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_creating_a_query.html","Creating a Query","Ehcache uses a fluent, object-oriented query API, following the principles of a Domain-Specific Language (DSL), which should be familiar to Java programmers. For example: Query query = cache.createQuery().addCriteria(age.eq(35)).includeKeys().end(); Results results = query.execute();","Ehcache_Documentation_Set\u002Fpairs\u002Fpair46.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_obtaining_and_organizing_query_results.html","Obtaining and Organizing Query Results","Queries return a Results object that contains a list of objects of class Result. Each element in the cache that a query finds is represented as a Result object. For example, if a query finds 350 elements, there will be 350 Result objects. However, if no keys or attributes are included but aggregator...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair47.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_best_practices_for_searches.html","Best Practices for Optimizing Searches","Construct searches by including only the data that is actually required. Only use includeKeys( ) and\u002For includeAttribute( ) if those values are required for your application logic. If you do not need values or attributes, be careful not to burden your queries with unnecessary work. For example, if r...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair48.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_concurrency_considerations.html","Concurrency Considerations","Unlike cache operations, which have selectable concurrency control or transactions, queries are asynchronous and search results are \u0022eventually consistent\u0022 with the caches. Index Updating Although indexes are updated synchronously, their state lags slightly behind that of the cache. The only excepti...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair49.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_working_with_nulls.html","Options for Working with Nulls","The Search API supports using the presence of a null as search criteria. myQuery.addCriteria(cache.getAttribute(\u0022middle_name\u0022).isNull()); It also supports using the absence of a null as search criteria:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair50.js"]
,["Ehcache_Documentation_Set\u002Fto-lock_using_explicit_locking.html","Using Explicit Locking","About Explicit Locking Ehcache contains an implementation which provides for explicit locking, using read and write locks. With explicit locking, it is possible to get more control over Ehcache \u0027s locking behavior to allow business logic to apply an atomic change with guaranteed ordering across one ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair51.js"]
,["Ehcache_Documentation_Set\u002Fco-lock_about_locking.html","About Explicit Locking","Ehcache contains an implementation which provides for explicit locking, using read and write locks. With explicit locking, it is possible to get more control over Ehcache \u0027s locking behavior to allow business logic to apply an atomic change with guaranteed ordering across one or more keys in one or ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair52.js"]
,["Ehcache_Documentation_Set\u002Fco-lock_example.html","Code Sample for Explicit Locking","The following is a simple example that shows how to use explicit locking. String key = \u0022123\u0022; Foo val = new Foo(); cache.acquireWriteLockOnKey(key); try { cache.put(new Element(key, val)); } finally { cache.releaseWriteLockOnKey(key); } ...sometime later String key = \u0022123\u0022; cache.acquireWriteLockOnK...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair53.js"]
,["Ehcache_Documentation_Set\u002Fco-lock_how_locking_works.html","How Locking Works","A READ lock does not prevent other READers from also acquiring a READ lock and reading. A READ lock cannot be obtained if there is an outstanding WRITE lock. It will queue. A WRITE lock cannot be obtained while there are outstanding READ locks. It will queue.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair54.js"]
,["Ehcache_Documentation_Set\u002Fco-lock_locking_methods.html","The Locking API","The following methods are available on Cache and Ehcache. \u002F** * Acquires the proper read lock for a given cache key * * @param key - The key that retrieves a value that you want to protect via * locking. *\u002F public void acquireReadLockOnKey(Object key) { this.acquireLockOnKey(key, LockType.READ); } \u002F...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair55.js"]
,["Ehcache_Documentation_Set\u002Fco-lock_supported_topologies.html","Supported Topologies","Except as noted in the The Locking API, the locking API supports the standalone and distributed cache topologies. It does not support the replicated topology. Blocking and Self Populating Caches About Blocking and Self-Populating Caches","Ehcache_Documentation_Set\u002Fpairs\u002Fpair56.js"]
,["Ehcache_Documentation_Set\u002Fto-bsp_blocking_and_self_populating_caches.html","Blocking and Self Populating Caches","About Blocking and Self-Populating Caches The net.sf.ehcache.constructs package contains some applied caching classes which use the core classes to solve everyday caching problems. Two of these are BlockingCache and SelfPopulatingCache.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair57.js"]
,["Ehcache_Documentation_Set\u002Fco-bsp_blocking_and_selfpopulating_classes.html","About Blocking and Self-Populating Caches","The net.sf.ehcache.constructs package contains some applied caching classes which use the core classes to solve everyday caching problems. Two of these are BlockingCache and SelfPopulatingCache. Blocking Cache","Ehcache_Documentation_Set\u002Fpairs\u002Fpair58.js"]
,["Ehcache_Documentation_Set\u002Fco-bsp_blocking_class.html","Blocking Cache","Imagine you have a very busy web site with thousands of concurrent users. Rather than being evenly distributed in what they do, they tend to gravitate to popular pages. These pages are not static, they have dynamic data which goes stale in a few minutes. Or imagine you have collections of data which...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair59.js"]
,["Ehcache_Documentation_Set\u002Fco-bsp_selfpopulating_class.html","SelfPopulatingCache","Sometimes, you want to use the BlockingCache, but the requirement to always release the lock results in complicated code. You also want to think about what you are doing without thinking about the caching. Enter the SelfPopulatingCache.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair60.js"]
,["Ehcache_Documentation_Set\u002Fto-tx_transaction_support.html","Transaction Support","About Transaction Support Transactions are supported in versions of Ehcache 2.0 and higher. The 2.3.x or lower releases only support XA. However since ehcache 2.4 support for both Global Transactions with xa_strict and xa modes, and Local Transactions with local mode has been added.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair61.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_about_transaction_support.html","About Transaction Support","Transactions are supported in versions of Ehcache 2.0 and higher. The 2.3.x or lower releases only support XA. However since ehcache 2.4 support for both Global Transactions with xa_strict and xa modes, and Local Transactions with local mode has been added.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair62.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_requirements_for_transactional_cache.html","Requirements for Transactional Caches","The objects you store in your transactional cache must: Implement java.io.Serializable\u2014This is required to store cached objects when the cache is distributed in a Terracotta cluster, and it is also required by the copy-on-read \u002F copy-on-write mechanism used to implement isolation.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair63.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_configuring_transactional_cache.html","Configuring Transactional Cache","Transactions are enabled on a cache-by-cache basis with the transactionalMode cache attribute. The allowed values are: xa_strict xa local off The default value is \u0022off.\u0022 In the following example, \u0022xa_strict\u0022 is enabled.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair64.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_global_transactions.html","Working with Global Transactions","Global Transactions are supported by Ehcache . Ehcache can act as an {XAResouce} to participate in JTA transactions under the control of a Transaction Manager. This is typically provided by your application server. However you can also use a third party transaction manager such as Bitronix.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair65.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_failure_recovery.html","Failure Recovery","In support of the JTA specification, only prepared transaction data is recoverable. Prepared data is persisted onto the cluster and locks on the memory are held. This means that non-clustered caches cannot persist transaction data. Therefore, recovery errors after a crash might be reported by the tr...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair66.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_sample_applications.html","Sample Applications","The following sample applications showing how to use XA with a variety of technologies. XA Sample Application This sample application uses the JBoss application server. It shows an example using User managed transactions. Although most people use JTA from within a Spring or EJB container rather than...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair67.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_transaction_managers.html","Transaction Managers","Automatically Detected Transaction Managers Ehcache automatically detects and uses the following transaction managers in the order shown below: GenericJNDI (e.g. GlassFish, JBoss, JTOM and any others that register themselves in JNDI at the standard location of java:\u002FTransactionManager","Ehcache_Documentation_Set\u002Fpairs\u002Fpair68.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_local_transactions.html","Working with Local Transactions","Local Transactions allow single-phase commit across multiple cache operations, across one or more caches, and in the same CacheManager.This lets you apply multiple changes to a CacheManager all in your own transaction. If you also want to apply changes to other resources, such as a database, open a ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair69.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_performance_considerations.html","Performance Considerations","Managing Contention If two transactions attempt to perform a cache operation on the same element, the following rules apply: The first transaction gets access The following transactions block on the cache operation until either the first transaction completes or the transaction timeout occurs.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair70.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_potential_timeouts.html","Potential Timeouts in a Transactional Cache","Why Do Some Threads Regularly Time Out and Throw an Exception? In transactional caches, write locks are in force whenever an element is updated, deleted, or added. With concurrent access, these locks cause some threads to block and appear to deadlock. Eventually the deadlocked threads time out (and ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair71.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_transactions_with_write-behind_through.html","Transactions in Write-Behind and Write-Through Caches","If your transaction-enabled cache is being used with a writer, write operations are queued until transaction commit time. A solely write-through approach would have its potential XAResource participate in the same transaction.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair72.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_support_for_third_party_prods.html","Support for Other Transaction Systems","Is IBM WebSphere Transaction Manager supported? Mostly. The \u0022xa_strict\u0022 mode is not supported due to each version of WebSphere being a custom implementation. That is, it has no stable interface to implement against. However, \u0022xa\u0022, which uses TransactionManager callbacks, and \u0022local\u0022 modes are suppor...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair73.js"]
,["Ehcache_Documentation_Set\u002Fto-writethrough_and_writebehind_caches.html","Write-Through and Write-Behind Caches","About Write-Through and Write-Behind Caches Write-through caching is a caching pattern where writes to the cache cause writes to an underlying resource. The cache acts as a facade to the underlying resource. With this pattern, it often makes sense to read through the cache too.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair74.js"]
,["Ehcache_Documentation_Set\u002Fco-write_about_write_through_behind.html","About Write-Through and Write-Behind Caches","Write-through caching is a caching pattern where writes to the cache cause writes to an underlying resource. The cache acts as a facade to the underlying resource. With this pattern, it often makes sense to read through the cache too.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair75.js"]
,["Ehcache_Documentation_Set\u002Fco-write_using_combined_read_through_write_behind.html","Using a Combined Read-Through and Write-Behind Cache","For applications that are not tolerant of inconsistency, the simplest solution is for the application to always read through the same cache that it writes through. Provided all database writes are through the cache, consistency is guaranteed.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair76.js"]
,["Ehcache_Documentation_Set\u002Fco-write_sample_application.html","Write-Behind Sample Application","A sample web application for a raffle is available, which fully demonstrates how to use write behind. You can also check out the Ehcache Raffle application, that demonstrates Cache Writers and Cache Loaders from github.com.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair77.js"]
,["Ehcache_Documentation_Set\u002Fco-write_configuring_cache_writer.html","Configuring a Cache Writer","There are many configuration options for a cache writer. For a full list of configuration properties, see the Javadoc at http:\u002F\u002Fwww.ehcache.org\u002Fapidocs\u002F2.10.1\u002F for the CacheWriterConfiguration class. Below is an example of how to configure the cache writer in XML:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair78.js"]
,["Ehcache_Documentation_Set\u002Fre-write_cache_writer_factory_attributes.html","CacheWriterFactory Attributes","The CacheWriterFactory supports the following attributes: All modes write-mode [write-through | write-behind] - Whether to run in write-behind or write-through mode. The default is write-through. write-through mode only","Ehcache_Documentation_Set\u002Fpairs\u002Fpair79.js"]
,["Ehcache_Documentation_Set\u002Fco-write_api.html","API","CacheLoaders are exposed for API use through the cache.getWithLoader(...) method. CacheWriters are exposed with cache.putWithWriter(...) and cache.removeWithWriter(...) methods. The code below show the method signature for the cache.putWithWriter(...) method. For the complete API, see the Cache Java...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair80.js"]
,["Ehcache_Documentation_Set\u002Fco-write_spi.html","SPI","The write-through SPI is the CacheWriter interface. Implementers perform writes to the underlying resource in their implementation. \u002F** * A CacheWriter is an interface used for write-through and write-behind caching * to an underlying resource. * <p\u002F> * If configured for a cache, CacheWriter\u0027s metho...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair81.js"]
,["Ehcache_Documentation_Set\u002Fco-write_monitoring_size_of_queue.html","Monitoring the Size of Write-Behind Queue","Use the method net.sf.ehcache.statistics.LiveCacheStatistics#getWriterQueueLength() to get the length of the queue. This method returns the number of elements on the local queue (in all local buckets) that are waiting to be processed, or -1 if no write-behind queue exists.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair82.js"]
,["Ehcache_Documentation_Set\u002Fco-write_handling_exceptions.html","Handling Exceptions that Occur After a Writer is Called","Once all retry attempts have been executed, on exception the element (or all elements of that batch) will be passed to the net.sf.ehcache.writer.CacheWriter#throwAway() method. The user can then act one last time on the element that failed to write.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair83.js"]
,["Ehcache_Documentation_Set\u002Fto-caload_cache_loaders.html","Cache Loaders","About Cache Loaders A CacheLoader is an interface that specifies load() and loadAll() methods with a variety of parameters. CacheLoaders are incorporated into the core Ehcache classes and can be configured in ehcache.xml. CacheLoaders are invoked in the following Cache methods:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair84.js"]
,["Ehcache_Documentation_Set\u002Fco-caload_about_cache_loaders.html","About Cache Loaders","A CacheLoader is an interface that specifies load() and loadAll() methods with a variety of parameters. CacheLoaders are incorporated into the core Ehcache classes and can be configured in ehcache.xml. CacheLoaders are invoked in the following Cache methods:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair85.js"]
,["Ehcache_Documentation_Set\u002Fco-caload_declarative_configuration.html","Declarative Configuration","The cacheLoaderFactory element specifies a CacheLoader, which can be used both asynchronously and synchronously to load objects into a cache. <cache ...> <cacheLoaderFactory class=\u0022com.example.ExampleCacheLoaderFactory\u0022 properties=\u0022type=int,startCounter=10\u0022\u002F> <\u002Fcache>","Ehcache_Documentation_Set\u002Fpairs\u002Fpair86.js"]
,["Ehcache_Documentation_Set\u002Fco-caload_implementing_a_cache_loader_factory.html","Implementing a CacheLoaderFactory and CacheLoader","CacheLoaderFactory is an abstract factory for creating CacheLoaders. Implementers should provide their own concrete factory, extending this abstract factory. It can then be configured in ehcache.xml. The factory class needs to be a concrete subclass of the abstract factory class CacheLoaderFactory, ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair87.js"]
,["Ehcache_Documentation_Set\u002Fco-caload_programmatic_configuration.html","Programmatic Configuration","The following methods on Cache allow runtime interrogation, registration and unregistration of loaders: \u002F** * Register a {@link CacheLoader} with the cache. It will then be tied into the * cache lifecycle. * * If the CacheLoader is not initialised, initialise it. * * @param cacheLoader A Cache Loade...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair88.js"]
,["Ehcache_Documentation_Set\u002Fto-cmlst_cache_manager_event_listeners.html","Cache Manager Event Listeners","About CacheManager Event Listeners CacheManager event listeners allow implementers to register callback methods that will be executed when a CacheManager event occurs. CacheManager listeners implement the CacheManagerEventListener interface. The events include:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair89.js"]
,["Ehcache_Documentation_Set\u002Fco-cmlst_about_cachemanager_listeners.html","About CacheManager Event Listeners","CacheManager event listeners allow implementers to register callback methods that will be executed when a CacheManager event occurs. CacheManager listeners implement the CacheManagerEventListener interface. The events include:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair90.js"]
,["Ehcache_Documentation_Set\u002Fco-cmlst_configuring_cachemanager_listener.html","Configuring a Cache Manager Event Listener","One CacheManagerEventListenerFactory and hence one CacheManagerEventListener can be specified per CacheManager instance. The factory is configured as below: <cacheManagerEventListenerFactory class=\u0022\u0022 properties=\u0022\u0022\u002F>","Ehcache_Documentation_Set\u002Fpairs\u002Fpair91.js"]
,["Ehcache_Documentation_Set\u002Fco-cmlst_implementing_cachemanager_listener.html","Implementing a CacheManager Event Listener Factory and CacheManager Event Listener","CacheManagerEventListenerFactory is an abstract factory for creating CacheManager listeners. Implementers should provide their own concrete factory extending this abstract factory. It can then be configured in ehcache.xml.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair92.js"]
,["Ehcache_Documentation_Set\u002Fto-clst_cache_event_listeners.html","Cache Event Listeners","About Cache Event Listeners Cache listeners allow implementers to register callback methods that will be executed when a cache event occurs. Cache listeners implement the CacheEventListener interface. The events include:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair93.js"]
,["Ehcache_Documentation_Set\u002Fco-clst_about_cache_listeners.html","About Cache Event Listeners","Cache listeners allow implementers to register callback methods that will be executed when a cache event occurs. Cache listeners implement the CacheEventListener interface. The events include: An Element has been put","Ehcache_Documentation_Set\u002Fpairs\u002Fpair94.js"]
,["Ehcache_Documentation_Set\u002Fco-clst_configuring_cache_listener.html","Configuring a Cache Event Listener","Cache event listeners are configured per cache. Each cache can have multiple listeners. Each listener is configured by adding a cacheEventListenerFactory element as follows: <cache ...> <cacheEventListenerFactory class=\u0022\u0022 properties=\u0022\u0022 listenFor=\u0022\u0022\u002F> ... <\u002Fcache>","Ehcache_Documentation_Set\u002Fpairs\u002Fpair95.js"]
,["Ehcache_Documentation_Set\u002Fco-clst_implementing_listener_factory.html","Implementing a Cache Event Listener Factory and Cache Event Listener","A CacheEventListenerFactory is an abstract factory for creating cache event listeners. Implementers should provide their own concrete factory, extending this abstract factory. It can then be configured in ehcache.xml. The following example demonstrates how to create an abstract CacheEventListenerFac...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair96.js"]
,["Ehcache_Documentation_Set\u002Fco-clst_adding_listener_programatically.html","Adding a Listener Programmatically","To add a listener programmatically, follow this example: cache.getCacheEventNotificationService().registerListener(myListener); Cache Exception Handlers About Exception Handlers By default, most cache operations will propagate a runtime CacheException on failure. An interceptor, using a dynamic prox...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair97.js"]
,["Ehcache_Documentation_Set\u002Fto-exhr_cache_exception_handlers.html","Cache Exception Handlers","About Exception Handlers By default, most cache operations will propagate a runtime CacheException on failure. An interceptor, using a dynamic proxy, may be configured so that a CacheExceptionHandler can be configured to intercept Exceptions. Errors are not intercepted.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair98.js"]
,["Ehcache_Documentation_Set\u002Fco-except_about_exception_handlers.html","About Exception Handlers","By default, most cache operations will propagate a runtime CacheException on failure. An interceptor, using a dynamic proxy, may be configured so that a CacheExceptionHandler can be configured to intercept Exceptions. Errors are not intercepted.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair99.js"]
,["Ehcache_Documentation_Set\u002Fco-except_declarative_configuration.html","Declarative Configuration","To configure an exception handler declaratively, add the cacheExceptionHandlerFactory element to ehcache.xml as shown in the following example: <cache ...> <cacheExceptionHandlerFactory class=\u0022net.sf.ehcache.exceptionhandler.CountingExceptionHandlerFactory\u0022 properties=\u0022logLevel=FINE\u0022\u002F> <\u002Fcache>","Ehcache_Documentation_Set\u002Fpairs\u002Fpair100.js"]
,["Ehcache_Documentation_Set\u002Fco-except_implementing_handler_factory.html","Implementing a Cache Exception Handler Factory and Cache Exception Handler","A CacheExceptionHandlerFactory is an abstract factory for creating cache exception handlers. Implementers should provide their own concrete factory, extending this abstract factory. It can then be configured in ehcache.xml.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair101.js"]
,["Ehcache_Documentation_Set\u002Fco-except_programmatic_configuration.html","Programmatic Configuration","The following example shows how to add exception handling to a cache, and then add the cache back into cache manager so that all clients obtain the cache handling decoration. CacheManager cacheManager = ... Ehcache cache = cacheManger.getCache(\u0022exampleCache\u0022); ExceptionHandler handler = new ExampleE...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair102.js"]
,["Ehcache_Documentation_Set\u002Fto-dec_cache_decorators.html","Cache Decorators","About Cache Decorators Ehcache uses the Ehcache interface, of which Cache is an implementation. It is possible and encouraged to create Ehcache decorators that are backed by a Cache instance, implement Ehcache and provide extra functionality.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair103.js"]
,["Ehcache_Documentation_Set\u002Fco-dec_about_cache_decorators.html","About Cache Decorators","Ehcache uses the Ehcache interface, of which Cache is an implementation. It is possible and encouraged to create Ehcache decorators that are backed by a Cache instance, implement Ehcache and provide extra functionality.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair104.js"]
,["Ehcache_Documentation_Set\u002Fco-dec_builtin_decorators.html","Built-in Decorators","BlockingCache This is a Blocking decorator for Ehcache that allows concurrent read access to elements already in the cache. If the element is null, other reads will block until an element with the same key is put into the cache. This decorator is useful for constructing read-through or self-populati...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair105.js"]
,["Ehcache_Documentation_Set\u002Fco-dec_creating_a_decorator.html","Creating a Decorator","You can add decorators to a cache either declaratively in the ehcache.xml configuration file, or programmatically. Declarative Creation You can configure decorators directly in ehcache.xml. The decorators will be created and added to the CacheManager.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair106.js"]
,["Ehcache_Documentation_Set\u002Fco-dec_creating_a_decorator_2.html","Declarative Creation","You can configure decorators directly in ehcache.xml. The decorators will be created and added to the CacheManager. It accepts the name of a concrete class that extends net.sf.ehcache.constructs.CacheDecoratorFactory","Ehcache_Documentation_Set\u002Fpairs\u002Fpair107.js"]
,["Ehcache_Documentation_Set\u002Fco-dec_creating_a_decorator_3.html","Programmatic Creation","Cache decorators are created as follows: BlockingCache newBlockingCache = new BlockingCache(cache); The class must implement Ehcache. Adding Decorated Caches to a CacheManager Having created a decorator programmatically, it is generally useful to put it in a place where multiple threads can access i...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair108.js"]
,["Ehcache_Documentation_Set\u002Fco-dec_adding_cache_to_cache_manager.html","Adding Decorated Caches to a CacheManager","Having created a decorator programmatically, it is generally useful to put it in a place where multiple threads can access it. Note that decorators created via configuration in ehcache.xml have already been added to the CacheManager.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair109.js"]
,["Ehcache_Documentation_Set\u002Fto-ext_cache_extensions.html","Cache Extensions","About Cache Extensions Cache extensions are a general-purpose mechanism to allow generic extensions to a cache. Cache extensions are tied into the cache lifecycle. For that reason, this interface has the lifecycle methods.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair110.js"]
,["Ehcache_Documentation_Set\u002Fco-ext_about_cache_extensions.html","About Cache Extensions","Cache extensions are a general-purpose mechanism to allow generic extensions to a cache. Cache extensions are tied into the cache lifecycle. For that reason, this interface has the lifecycle methods. Cache extensions are created using the CacheExtensionFactory, which has a createCacheCacheExtension(...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair111.js"]
,["Ehcache_Documentation_Set\u002Fco-ext_declarative_configuration.html","Declarative Configuration","Cache extensions are configured per cache. Each cache can have zero or more. You configure a cache extension by adding a cacheExceptionHandlerFactory element as shown in the following example: <cache ...> <cacheExtensionFactory \u2002\u2002\u2002\u2002\u2002class=\u0022com.example.FileWatchingCacheRefresherExtensionFactory\u0022 prop...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair112.js"]
,["Ehcache_Documentation_Set\u002Fco-ext_implementing_extension_factory.html","Implementing a Cache Extension Factory and Cache Extension","A CacheExtensionFactory is an abstract factory for creating cache extension. Implementers should provide their own concrete factory, extending this abstract factory. It can then be configured in ehcache.xml. The factory class needs to be a concrete subclass of the abstract factory class CacheExtensi...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair113.js"]
,["Ehcache_Documentation_Set\u002Fco-ext_programmatic_configuration.html","Programmatic Configuration","Cache extensions can also be programmatically added to a Cache as shown below: TestCacheExtension testCacheExtension = new TestCacheExtension(cache, ...); testCacheExtension.init(); cache.registerCacheExtension(testCacheExtension);","Ehcache_Documentation_Set\u002Fpairs\u002Fpair114.js"]
,["Ehcache_Documentation_Set\u002Fto-evict_cache_eviction_algorithms.html","Cache Eviction Algorithms","About Cache Eviction Algorithms A cache eviction algorithm is a way of deciding which element to evict when the cache is full. In Ehcache , the memory store and the off-heap store might be limited in size. When these stores get full, elements are evicted. The eviction algorithms determine which elem...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair115.js"]
,["Ehcache_Documentation_Set\u002Fco-evict_about_eviction_algorithms.html","About Cache Eviction Algorithms","A cache eviction algorithm is a way of deciding which element to evict when the cache is full. In Ehcache , the memory store and the off-heap store might be limited in size. When these stores get full, elements are evicted. The eviction algorithms determine which elements are evicted. The default al...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair116.js"]
,["Ehcache_Documentation_Set\u002Fco-evict_builtin_algorithms.html","Built-in Memory Store Eviction Algorithms","The idea here is, given a limit on the number of items to cache, how to choose the thing to evict that gives the best result. In 1966 Laszlo Belady showed that the most efficient caching algorithm would be to always discard the information that will not be needed for the longest time in the future. ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair117.js"]
,["Ehcache_Documentation_Set\u002Fco-evict_plugging_in_your_own_eviction_algorighms.html","Plugging in Your own Eviction Algorithm","Ehcache allows you to plug in your own eviction algorithm using Cache.setMemoryStoreEvictionPolicy(Policy policy). You can utilize any Element metadata, which makes possible some very interesting approaches. For example, you might evict an element if it has been hit more than ten times.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair118.js"]
,["Ehcache_Documentation_Set\u002Fco-evict_diskstore_eviction_algorighms.html","Disk Store Eviction Algorithm","The disk store uses the Least Frequently Used algorithm to evict an element when the store it is full. Class Loading About Class Loading Class loading, within the plethora of environments that Ehcache can be running, could be complex. But with Ehcache, all class loading is done in a standard way in ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair119.js"]
,["Ehcache_Documentation_Set\u002Fto-class_loading.html","Class Loading","About Class Loading Class loading, within the plethora of environments that Ehcache can be running, could be complex. But with Ehcache, all class loading is done in a standard way in one utility class: ClassLoaderUtil.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair120.js"]
,["Ehcache_Documentation_Set\u002Fco-class_about_class_loading.html","About Class Loading","Class loading, within the plethora of environments that Ehcache can be running, could be complex. But with Ehcache, all class loading is done in a standard way in one utility class: ClassLoaderUtil. Plugin Class Loading","Ehcache_Documentation_Set\u002Fpairs\u002Fpair121.js"]
,["Ehcache_Documentation_Set\u002Fco-class_plugin_class_loading.html","Plugin Class Loading","Ehcache allows plugins for events and distribution. These are loaded and created as follows: \u002F** * Creates a new class instance. Logs errors along the way. Classes are loaded * using the Ehcache standard classloader. * * @param className a fully qualified class name * @return null if the instance ca...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair122.js"]
,["Ehcache_Documentation_Set\u002Fco-class_loading_ehcache_xml.html","Loading of ehcache.xml Resources","If the configuration is otherwise unspecified, Ehcache looks for a configuration in the following order: Thread.currentThread().getContextClassLoader().getResource(\u0022\u002Fehcache.xml\u0022) ConfigurationFactory.class.getResource(\u0022\u002Fehcache.xml\u0022)","Ehcache_Documentation_Set\u002Fpairs\u002Fpair123.js"]
,["Ehcache_Documentation_Set\u002Fto-title_ehcache_configuration_guide.html","Ehcache Configuration Guide","Configuring Cache About Ehcache Configuration Ehcache supports declarative configuration via an XML configuration file, as well as programmatic configuration via class-constructor APIs. Choosing one approach over the other can be a matter of preference or a requirement, such as when an application r...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair124.js"]
,["Ehcache_Documentation_Set\u002Fto-cfgbasics_configuring_cache.html","Configuring Cache","About Ehcache Configuration Ehcache supports declarative configuration via an XML configuration file, as well as programmatic configuration via class-constructor APIs. Choosing one approach over the other can be a matter of preference or a requirement, such as when an application requires a certain ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair125.js"]
,["Ehcache_Documentation_Set\u002Fco-cfgbasics_about_cache_configuration.html","About Ehcache Configuration","Ehcache supports declarative configuration via an XML configuration file, as well as programmatic configuration via class-constructor APIs. Choosing one approach over the other can be a matter of preference or a requirement, such as when an application requires a certain run-time context to determin...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair126.js"]
,["Ehcache_Documentation_Set\u002Fco-cfgbasics_xml_configuration.html","XML Configuration","By default, Ehcache looks for an ASCII or UTF8 encoded XML configuration file called ehcache.xml at the top level of the Java classpath. You may specify alternate paths and filenames for the XML configuration file by using the various CacheManager constructors as described in the CacheManager Javado...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair127.js"]
,["Ehcache_Documentation_Set\u002Fco-cfgbasics_dynamically_changing_cache_config.html","Dynamically Changing Cache Configuration","While most of the Ehcache configuration is not changeable after startup, since Ehcache 2.0, certain cache configuration parameters can be modified dynamically at runtime. These include the following: Expiration settings","Ehcache_Documentation_Set\u002Fpairs\u002Fpair128.js"]
,["Ehcache_Documentation_Set\u002Fco-cfgbasics_passing_copies.html","Passing Copies Instead of References","By default, a get() operation on a store returns a reference to the requested data, and any changes to that data are immediately reflected in the memory store. In cases where an application requires a copy of data rather than a reference to it, you can configure the store to return a copy. This allo...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair129.js"]
,["Ehcache_Documentation_Set\u002Fto-tiers_configuring_storage_tiers.html","Configuring Storage Tiers","About Storage Tiers Ehcache has three storage tiers, summarized here: Memory store \u2013 Heap memory that holds a copy of the hottest subset of data from the off-heap store. Subject to Java GC. Off-heap store \u2013 Limited in size only by available RAM. Not subject to Java GC. Can store serialized data only...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair130.js"]
,["Ehcache_Documentation_Set\u002Fco-tiers_about_storage_tiers.html","About Storage Tiers","Ehcache has three storage tiers, summarized here: Memory store \u2013 Heap memory that holds a copy of the hottest subset of data from the off-heap store. Subject to Java GC. Off-heap store \u2013 Limited in size only by available RAM. Not subject to Java GC. Can store serialized data only. Provides overflow ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair131.js"]
,["Ehcache_Documentation_Set\u002Fco-tiers_configuring_memory_store.html","Configuring Memory Store","The memory store is always enabled and exists in heap memory. For the best performance, allot as much heap memory as possible without triggering garbage collection (GC) pauses, and use the off-heap store to hold the data that cannot fit in heap (without causing GC pauses).","Ehcache_Documentation_Set\u002Fpairs\u002Fpair132.js"]
,["Ehcache_Documentation_Set\u002Fco-tiers_configuring_disk_store.html","Configuring Disk Store","The disk store provides a thread-safe disk-spooling facility that can be used for either additional storage or persisting data through system restarts. This section describes local disk usage. You can find additional information about configuring the disk store in Configuring Restartability and Pers...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair133.js"]
,["Ehcache_Documentation_Set\u002Fto-size_sizing_storage_tiers.html","Sizing Storage Tiers","The Sizing Attributes Tuning Ehcache often involves sizing the data storage tiers appropriately. You can size the different data tiers in a number of ways using simple sizing attributes. These sizing attributes affect memory and disk resources.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair134.js"]
,["Ehcache_Documentation_Set\u002Fco-size_sizing_attributes.html","The Sizing Attributes","Tuning Ehcache often involves sizing the data storage tiers appropriately. You can size the different data tiers in a number of ways using simple sizing attributes. These sizing attributes affect memory and disk resources.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair135.js"]
,["Ehcache_Documentation_Set\u002Fco-size_pooling_resources.html","Pooling Resources Versus Sizing Individual Caches","You can constrain the size of any cache on a specific tier in that cache\u0027s configuration. You can also constrain the size of all of a CacheManager\u0027s caches in a specific tier by configuring an overall size at the CacheManager level.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair136.js"]
,["Ehcache_Documentation_Set\u002Fco-size_sizing_examples.html","Sizing Examples","The following examples illustrate both pooled and individual cache-sizing configurations. Some of the following examples include allocations for off-heap storage. Off-heap data storage (i.e., the off-heap tier) is only available with the Terracotta BigMemory products.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair137.js"]
,["Ehcache_Documentation_Set\u002Fco-size_pinning_and_size_limits.html","Pinning and Size Limitations","Pinned caches can override the limits set by cache-configuration sizing attributes, potentially causing OutOfMemory errors. This is because pinning prevents flushing of cache entries to lower tiers. For more information on pinning, see Pinning Data.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair138.js"]
,["Ehcache_Documentation_Set\u002Fco-size_builtin_resizing_computations.html","Built-In Sizing Computation and Enforcement","Internal Ehcache mechanisms track data-element sizes and enforce the limits set by CacheManager sizing pools. Sizing of Elements Elements put in a memory-limited cache will have their memory sizes measured. The entire Element instance added to the cache is measured, including key and value, as well ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair139.js"]
,["Ehcache_Documentation_Set\u002Fco-size_eviction_on_cache_manager_level_store.html","Eviction When Using CacheManager-Level Storage","When a CacheManager-level storage pool is exhausted, a cache is selected on which to perform eviction to recover pool space. The eviction from the selected cache is performed using the cache\u0027s configured eviction algorithm (LRU, LFU, etc...). The cache from which eviction is performed is selected us...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair140.js"]
,["Ehcache_Documentation_Set\u002Fto-life_managing_data_life.html","Managing Data Life","Configuration Options that Affect Data Life This topic covers managing the life of the data in each of the data-storage tiers, including the pinning features of Automatic Resource Control (ARC). You use the options to manage data life within the data-storage tiers:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair141.js"]
,["Ehcache_Documentation_Set\u002Fco-life_options_affecting_data_life.html","Configuration Options that Affect Data Life","This topic covers managing the life of the data in each of the data-storage tiers, including the pinning features of Automatic Resource Control (ARC). You use the options to manage data life within the data-storage tiers:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair142.js"]
,["Ehcache_Documentation_Set\u002Fco-life_setting_expiration.html","Setting Expiration","Data entries expire based on parameters with configurable values. When eviction occurs, expired elements are the first to be removed. Having an effective expiration configuration is critical to optimizing the use of resources such as heap and maintaining overall performance.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair143.js"]
,["Ehcache_Documentation_Set\u002Fco-life_pinning_data.html","Pinning Data","Without pinning, expired cache entries can be flushed and eventually evicted, and even most non-expired elements can also be flushed and evicted as well, if resource limitations are reached. Pinning gives per-cache control over whether data can be evicted from Ehcache .","Ehcache_Documentation_Set\u002Fpairs\u002Fpair144.js"]
,["Ehcache_Documentation_Set\u002Fco-life_affect_on_flushing_and_eviction.html","How Configuration Affects Element Flushing and Eviction","The following example shows a cache with certain expiration settings: <cache name=\u0022myCache\u0022 eternal=\u0022false\u0022 timeToIdleSeconds=\u00223600\u0022 timeToLiveSeconds=\u00220\u0022 memoryStoreEvictionPolicy=\u0022LFU\u0022> <\u002Fcache> Note the following about the myCache configuration:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair145.js"]
,["Ehcache_Documentation_Set\u002Fco-life_data_freshness_and_expiration.html","Data Freshness and Expiration","Databases and other systems of record (SORs) that were not built to accommodate caching outside of the database do not normally come with any default mechanism for notifying external processes when data has been updated or modified.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair146.js"]
,["Ehcache_Documentation_Set\u002Fto-persist_configuring_persistance_and_restart.html","Configuring Restartability and Persistence","About Restartability and Persistence Ehcache offers persistence using the local disk as a cache storage tier. While Ehcache offers various disk usage choices, as of version 2.6, the recommended option for persistence is the Fast Restart store, which is available in BigMemory Go and BigMemory Max. Op...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair147.js"]
,["Ehcache_Documentation_Set\u002Fco-persist_about_persistence_and_restart.html","About Restartability and Persistence","Ehcache offers persistence using the local disk as a cache storage tier. While Ehcache offers various disk usage choices, as of version 2.6, the recommended option for persistence is the Fast Restart store, which is available in BigMemory Go and BigMemory Max. Open-source Ehcache offers a limited ve...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair148.js"]
,["Ehcache_Documentation_Set\u002Fco-persist_cache_persistence_implementation.html","Cache Persistence Implementation","Ehcache has a RestartStore which provides fast restartability and options for cache persistence. The RestartStore implements an on-disk mirror of the in-memory cache. After any restart, data that was last in the cache will automatically load from disk into the RestartStore, and from there the data w...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair149.js"]
,["Ehcache_Documentation_Set\u002Fco-persist_config_examples.html","Configuration Examples","This section presents possible disk usage configurations for open-source Ehcache 2.6 and higher. Temporary Disk Storage The \u0022localTempSwap\u0022 persistence strategy allows the cache to use the local disk during cache operation. The disk storage is temporary and is cleared after a restart.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair150.js"]
,["Ehcache_Documentation_Set\u002Fco-persist_compatibility_with_prev_versions.html","Compatibility with Previous Versions","Comparison of Disk Usage Options The following table summarizes the configuration options for disk usage in Ehcache 2.6 and higher as compared with previous versions. *It is recommended to use one of the fault-tolerant options, however non-fault-tolerant persistence is still available. If <persisten...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair151.js"]
,["Ehcache_Documentation_Set\u002Fto-updt_configuring_the_update_checker.html","Configuring the Update Checker","Configuring the Update Checker The update checker is used to see whether you have the latest version of Ehcache. It is also used to get non-identifying feedback on the operating system architectures using Ehcache. To disable the check, do one of the following.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair152.js"]
,["Ehcache_Documentation_Set\u002Fco-updt_configuring_the_update_checker.html","Configuring the Update Checker","The update checker is used to see whether you have the latest version of Ehcache. It is also used to get non-identifying feedback on the operating system architectures using Ehcache. To disable the check, do one of the following.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair153.js"]
,["Ehcache_Documentation_Set\u002Fto-jprop_system_properties.html","System Properties","Special System Properties net.sf.ehcache.disabled Setting this system property to true (using java -Dnet.sf.ehcache.disabled=true in the Java command line) disables caching in ehcache. If disabled, no elements can be added to a cache (puts are silently discarded).","Ehcache_Documentation_Set\u002Fpairs\u002Fpair154.js"]
,["Ehcache_Documentation_Set\u002Fre-jprops_system_properties.html","Special System Properties","net.sf.ehcache.disabled Setting this system property to true (using java -Dnet.sf.ehcache.disabled=true in the Java command line) disables caching in ehcache. If disabled, no elements can be added to a cache (puts are silently discarded).","Ehcache_Documentation_Set\u002Fpairs\u002Fpair155.js"]
,["Ehcache_Documentation_Set\u002Fto-title_ehcache_operations_guide.html","Ehcache Operations Guide","Tuning Garbage Collection About Garbage Collection and Ehcache Applications that use Ehcache can be expected to use large heaps. Some Ehcache applications have heap sizes greater than 6 GB. Ehcache works well at this scale. However, large heaps or long held objects, which is what a cache is composed...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair156.js"]
,["Ehcache_Documentation_Set\u002Fto-tuning_garbage_collection.html","Tuning Garbage Collection","About Garbage Collection and Ehcache Applications that use Ehcache can be expected to use large heaps. Some Ehcache applications have heap sizes greater than 6 GB. Ehcache works well at this scale. However, large heaps or long held objects, which is what a cache is composed of, can place strain on t...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair157.js"]
,["Ehcache_Documentation_Set\u002Fco-gc_about_garbage_collection.html","About Garbage Collection and Ehcache","Applications that use Ehcache can be expected to use large heaps. Some Ehcache applications have heap sizes greater than 6 GB. Ehcache works well at this scale. However, large heaps or long held objects, which is what a cache is composed of, can place strain on the default Garbage Collector (GC). Wi...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair158.js"]
,["Ehcache_Documentation_Set\u002Fco-gc_tuning_garbage_collection.html","Tuning the Garbage Collector","Tuning suggestion for virtual machines with large heaps using caching: java ... -XX:+DisableExplicitGC -XX:+UseConcMarkSweepGC -XX:NewSize=<1\u002F4 of total heap size> -XX:SurvivorRatio=16 Note that it is better to use -XX:+DisableExplicitGC, instead of calling System.gc(). It also helps to use the low ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair159.js"]
,["Ehcache_Documentation_Set\u002Fto-jmx_management_and_monitoring.html","Monitoring and Management Using JMX","About Using JMX JMX creates a standard way of instrumenting classes and making them available to a management and monitoring infrastructure. The net.sf.ehcache.management package contains MBeans and a ManagementService for JMX management of Ehcache . It is in a separate package so that JMX libraries...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair160.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_about_using_jmx.html","About Using JMX","JMX creates a standard way of instrumenting classes and making them available to a management and monitoring infrastructure. The net.sf.ehcache.management package contains MBeans and a ManagementService for JMX management of Ehcache . It is in a separate package so that JMX libraries are only requir...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair161.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_mbeans.html","MBeans","Ehcache supports Standard MBeans. MBeans are available for the following: CacheManager Cache CacheConfiguration CacheStatistics All MBean attributes are available to a local MBeanServer. The CacheManager MBean allows traversal to its collection of Cache MBeans. Each Cache MBean likewise allows trave...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair162.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_remoting.html","JMX Remoting","The Remote API allows connection from a remote JMX Agent to an MBeanServer via an MBeanServerConnection. Only Serializable attributes are available remotely. The following Ehcache MBean attributes are available remotely:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair163.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_objectname_scheme.html","ObjectName Naming Scheme","CacheManager \u0022net.sf.ehcache:type=CacheManager,name=<CacheManager>\u0022 Cache \u0022net.sf.ehcache:type=Cache,CacheManager=<cacheManagerName>,name=<cacheName>\u0022 CacheConfiguration \u0022net.sf.ehcache:type=CacheConfiguration,CacheManager=<cacheManagerName>, \u00A0\u00A0\u00A0name=<cacheName>\u0022","Ehcache_Documentation_Set\u002Fpairs\u002Fpair164.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_management_service.html","The Management Service","The ManagementService class is the API entry point.  There is only one method, ManagementService.registerMBeans, which is used to initiate JMX registration of a CacheManager\u0027s instrumented MBeans. The ManagementService is a CacheManagerEventListener and is therefore notified of any new Caches added ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair165.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_jconsole_example.html","JConsole Example","This example shows how to register CacheStatistics in the JDK platform MBeanServer, which works with the JConsole management agent. CacheManager manager = new CacheManager(); MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer(); ManagementService.registerMBeans(manager, mBeanServer, ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair166.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_performance_considerations.html","Performance Considerations","Collection of cache statistics is not entirely free of overhead, however, the statistics API switches on\u002Foff automatically according to usage. If you need few statistics, you incur little overhead; on the other hand, as you use more statistics, you can incur more. Statistics are off by default.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair167.js"]
,["Ehcache_Documentation_Set\u002Fto-log_logging.html","Logging","SLFJ Logging As of 1.7.1, Ehcache uses the slf4j logging facade, so you can plug in your own logging framework. The following information pertains to Ehcache logging. For information about SLF4J in general, refer to the SLF4J website.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair168.js"]
,["Ehcache_Documentation_Set\u002Fco-log_slf4j_logging.html","SLFJ Logging","As of 1.7.1, Ehcache uses the slf4j logging facade, so you can plug in your own logging framework. The following information pertains to Ehcache logging. For information about SLF4J in general, refer to the SLF4J website.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair169.js"]
,["Ehcache_Documentation_Set\u002Fco-log_recommended_logging_levels.html","Recommended Logging Levels","Ehcache seeks to trade off informing production-support developers of important messages and cluttering the log. ERROR messages should not occur in normal production and indicate that action should be taken.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair170.js"]
,["Ehcache_Documentation_Set\u002Fto-shut_shutting_down_ehcache.html","Shutting Down Ehcache","About Shutdown Ehcache is shut down through the Ehcache API. Note that Hibernate automatically shuts down its Ehcache CacheManager. The recommended way to shutdown Ehcache is: To call CacheManager.shutdown()","Ehcache_Documentation_Set\u002Fpairs\u002Fpair171.js"]
,["Ehcache_Documentation_Set\u002Fco-shut_about_shutdown.html","About Shutdown","Ehcache is shut down through the Ehcache API. Note that Hibernate automatically shuts down its Ehcache CacheManager. The recommended way to shutdown Ehcache is: To call CacheManager.shutdown() In a web app, register the Ehcache ShutdownListener","Ehcache_Documentation_Set\u002Fpairs\u002Fpair172.js"]
,["Ehcache_Documentation_Set\u002Fco-shut_servlet_context_listener.html","ServletContextListener","Ehcache provides a ServletContextListener that shuts down the CacheManager. Use this to shut down Ehcache automatically, when the web application is shut down. To receive notification events, this class must be configured in the deployment descriptor for the web application. To do so, add the follow...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair173.js"]
,["Ehcache_Documentation_Set\u002Fco-shut_the_shutdown_hook.html","The Shutdown Hook","The CacheManager can optionally register a shutdown hook. To do so, set the system property net.sf.ehcache.enableShutdownHook=true. This will shut down the CacheManager when it detects the Virtual Machine shutting down and it is not already shut down.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair174.js"]
,["Ehcache_Documentation_Set\u002Fco-shut_dirty_shutdown.html","Dirty Shutdown","If Ehcache is shutdown dirty, all in-memory data will be retained if Ehcache is configured for restartability. For more information, see \u0022Configuring Restartability and Persistence\u0022 in the Configuration Guide for Ehcache.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair175.js"]
,["Ehcache_Documentation_Set\u002Fto-rmi_debugging_replicated_caches.html","Debugging and Monitoring Replicated Caches","About the Remote Debugger The ehcache-1.x-remote-debugger.jar can be used to debug replicated cache operations. When started with the same configuration as the cluster, it will join the cluster and then report cluster events for the cache of interest. By providing a window into the cluster it can he...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair176.js"]
,["Ehcache_Documentation_Set\u002Fco-rmi_about_the_remote_debugger.html","About the Remote Debugger","The ehcache-1.x-remote-debugger.jar can be used to debug replicated cache operations. When started with the same configuration as the cluster, it will join the cluster and then report cluster events for the cache of interest. By providing a window into the cluster it can help to identify the cause o...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair177.js"]
,["Ehcache_Documentation_Set\u002Fco-rmi_using_the_debugger.html","Using the Debugger","It is invoked as follows: java -jar ehcache-debugger-1.5.0.jar ehcache.xml sampleCache1 path_to_ehcache.xml [cacheToMonitor] It takes one or two arguments: the first argument, which is mandatory, is the Ehcache configuration file e.g. app\u002Fconfig\u002Fehcache.xml. This file should be configured to allow E...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair178.js"]
,["Ehcache_Documentation_Set\u002Fto-pubhead_ehcache_recipes.html","Ehcache Recipes","About the Recipes The recipes are a collection of concise examples for specific use cases that will help you get started with Ehcache. If you have suggestions or ideas for more recipes, please tell us about them using the forums and mailing lists.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair179.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_about_the_recipes.html","About the Recipes","The recipes are a collection of concise examples for specific use cases that will help you get started with Ehcache. If you have suggestions or ideas for more recipes, please tell us about them using the forums and mailing lists.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair180.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_web_page_and_fragment_caching.html","Web Page and Web Page Fragment Caching","This recipe provides an example of how to use the included filters to cache web pages and web page fragments. Problem You\u0027d like to improve the time it takes to return a page from your web application. Many of the pages in your application are not time or user specific and can be cached for a period...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair181.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_configure_grails_app_for_clustering.html","Using Grails and Ehcache","Grails 1.2RC1 and higher use Ehcache as the default Hibernate second level cache. However earlier versions of Grails ship with the Ehcache library and are very simple to enable. The following steps show how to configure Grails to use Ehcache. For 1.2RC1 and higher, some of these steps are already do...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair182.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_data_freshness_and_expiration.html","Data Freshness and Expiration","This recipe addresses how to maintain cache \u0022freshness\u0022 by configuring TTL and data expiration properly. Problem Data in the cache is out of sync with the SOR (the database). Solution Databases (and other SORs) weren\u0027t built with caching outside of the database in mind, and therefore don\u0027t normally ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair183.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_empty_cache_values.html","Caching Empty Values","This recipe discusses why caching empty values can be desirable to deflect load from the database. Problem Your application is querying the database excessively only to find that there is no result. Since there is no result, there is nothing to cache.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair184.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_database_read_overload.html","Database Read Overload","When many readers simultaneously request the same data element, there can be a database read overload, sometimes called the \u0022Thundering Herd\u0022 problem. This recipe addresses how to prevent it in a single JVM or a clustered configuration.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair185.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_database_write_overload.html","Database Write Overload","This recipe addresses the problem of database write overload and explains how the Ehcache Write-behind feature can be the solution. Problem It\u0027s easy to understand how a cache can help reduce database loads and improve application performance in a read-mostly scenario. In read-mostly use-cases, ever...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair186.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_caching_methods_with_spring_annotations.html","Caching Methods with Spring 3 Annotations","This recipe explains adding caching to methods using the Ehcache Annotations for Spring project. Problem You\u0027d like to cache methods of your application with minimal code changes and use configuration to control the cache settings.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair187.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_cache_wrapper.html","Cache Wrapper","This recipe provides an example of a simple class to make accessing Ehcache easier for simple use cases. Problem Using the full Ehcache API can be more tedious than using just a simple, value-based cache (like a HashMap) because of the Element class that holds values.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair188.js"]
,["Ehcache_Documentation_Set\u002Fre-ehcache_reference_documentation.html","Reference Documentation","Ehcache 2.10.1 Javadoc ehcache.xml ehcache.xsd Release and Platform Compatibility Tables Related Documentation Web Cache User Guide About the Web Cache Module Introduction Ehcache provides a set of general purpose web caching filters in the ehcache-web module. Using these can make an amazing differe...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair189.js"]
,["Ehcache_Documentation_Set\u002Fto-title_related_documentation.html","Related Documentation","Web Cache User Guide About the Web Cache Module Introduction Ehcache provides a set of general purpose web caching filters in the ehcache-web module. Using these can make an amazing difference to web application performance. A typical server can deliver 5000+ pages per second from the page cache. Wi...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair190.js"]
,["Ehcache_Documentation_Set\u002Fto-title_web_cache_user_guide.html","Web Cache User Guide","About the Web Cache Module Introduction Ehcache provides a set of general purpose web caching filters in the ehcache-web module. Using these can make an amazing difference to web application performance. A typical server can deliver 5000+ pages per second from the page cache. With built-in gzipping,...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair191.js"]
,["Ehcache_Documentation_Set\u002Fto-abt_about_the_web_cache_module.html","About the Web Cache Module","Introduction Ehcache provides a set of general purpose web caching filters in the ehcache-web module. Using these can make an amazing difference to web application performance. A typical server can deliver 5000+ pages per second from the page cache. With built-in gzipping, storage and network transm...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair192.js"]
,["Ehcache_Documentation_Set\u002Fco-abt_what_is_the_web_caching_module.html","Introduction","Ehcache provides a set of general purpose web caching filters in the ehcache-web module. Using these can make an amazing difference to web application performance. A typical server can deliver 5000+ pages per second from the page cache. With built-in gzipping, storage and network transmission is hig...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair193.js"]
,["Ehcache_Documentation_Set\u002Fco-abt_components_and_concepts.html","Components and Concepts","SimplePageCachingFilter The SimplePageCachingFilter is a simple caching filter suitable for caching compressible HTTP responses such as HTML, XML or JSON. It uses a singleton CacheManager created with the default factory method. Override to use a different CacheManager.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair194.js"]
,["Ehcache_Documentation_Set\u002Fto-use_using_web_cache_module.html","Caching Web Pages and Page Fragments","Sample Use Case The following describes an example of how to use the included filters to cache web pages and web page fragments. Problem You\u0027d like to improve the time it takes to return a page from your web application. Many of the pages in your application are not time- or user-specific and can be...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair195.js"]
,["Ehcache_Documentation_Set\u002Fco-use_sample_use_case_for_caching_web_pages.html","Sample Use Case","The following describes an example of how to use the included filters to cache web pages and web page fragments. Problem You\u0027d like to improve the time it takes to return a page from your web application. Many of the pages in your application are not time- or user-specific and can be cached for a pe...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair196.js"]
,["Ehcache_Documentation_Set\u002Fco-use_steps_for_caching_web_pages.html","Steps for Caching Web Pages","Caching web pages does not require any code changes. Your application server should support servlet filtering already. Simply update your web.xml file, re-deploy. and you should see the speedup right away.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair197.js"]
,["Ehcache_Documentation_Set\u002Fto-sam_sample_webxml_configuration.html","Sample web.xml Configuration","Example web.xml Configuration Following is a sample web.xml configuration file. <web-app xmlns=\u0022http:\u002F\u002Fjava.sun.com\u002Fxml\u002Fns\u002Fjavaee\u0022 xmlns:xsi=\u0022http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\u0022 xsi:schemaLocation=\u0022http:\u002F\u002Fjava.sun.com\u002Fxml\u002Fns\u002Fjavaee version=\u00222.5\u0022> <filter> <filter-name>CachePage1CachingFilter<...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair198.js"]
,["Ehcache_Documentation_Set\u002Fre-sam_webxml_configuration_example.html","Example web.xml Configuration","Following is a sample web.xml configuration file. <web-app xmlns=\u0022http:\u002F\u002Fjava.sun.com\u002Fxml\u002Fns\u002Fjavaee\u0022 xmlns:xsi=\u0022http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\u0022 xsi:schemaLocation=\u0022http:\u002F\u002Fjava.sun.com\u002Fxml\u002Fns\u002Fjavaee version=\u00222.5\u0022> <filter> <filter-name>CachePage1CachingFilter<\u002Ffilter-name> <filter-class>ne...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair199.js"]
,["Ehcache_Documentation_Set\u002Fto-exc_cachingfilter_exceptions.html","CachingFilter Exceptions","CachingFilter Exceptions Additional exception types have been added to the Caching Filter. FilterNonReentrantException Thrown when it is detected that a caching filter\u0027s doFilter method is reentered by the same thread. Reentrant calls will block indefinitely because the first request has not yet unb...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair200.js"]
,["Ehcache_Documentation_Set\u002Fre-exc_additional_exceptions_from_cachingfilter.html","CachingFilter Exceptions","Additional exception types have been added to the Caching Filter. FilterNonReentrantException Thrown when it is detected that a caching filter\u0027s doFilter method is reentered by the same thread. Reentrant calls will block indefinitely because the first request has not yet unblocked the cache.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair201.js"]
,["Ehcache_Documentation_Set\u002Fto-title_ehcache_integrations.html","Integrations","Using Ehcache with Hibernate About Using Ehcache with Hibernate Accelerating Hibernate applications typically involves reducing their reliance on the database when fetching data. Terracotta offers powerful in-memory solutions for maximizing the performance of Hibernate applications:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair202.js"]
,["Ehcache_Documentation_Set\u002Fto-hib_using_ehcache_with_hibernate.html","Using Ehcache with Hibernate","About Using Ehcache with Hibernate Accelerating Hibernate applications typically involves reducing their reliance on the database when fetching data. Terracotta offers powerful in-memory solutions for maximizing the performance of Hibernate applications:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair203.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_about_using_ehcache_with_hibernate.html","About Using Ehcache with Hibernate","Accelerating Hibernate applications typically involves reducing their reliance on the database when fetching data. Terracotta offers powerful in-memory solutions for maximizing the performance of Hibernate applications:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair204.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_downloading_and_installing.html","Downloading and Installing Ehcache for Hibernate","The Hibernate provider is in the ehcache-core module. You can download the latest version of this module from here: http:\u002F\u002Fsourceforge.net\u002Fprojects\u002Fehcache\u002Ffiles\u002Fehcache-core\u002F. Building with Maven Dependency versions vary with the specific kit you intend to use. Since kits are guaranteed to contain ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair205.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_building_with_maven.html","Building with Maven","Dependency versions vary with the specific kit you intend to use. Since kits are guaranteed to contain compatible artifacts, find the artifact versions you need by downloading a kit. Configure or add the following repository to your build (pom.xml):","Ehcache_Documentation_Set\u002Fpairs\u002Fpair206.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_configure_as_second_level_cache_provider.html","Configuring Ehcache as the Second-Level Cache Provider","To configure Ehcache as a Hibernate second-level cache, set the region factory property to one of the following in the Hibernate configuration. The Hibernate configuration is specified either via hibernate.cfg.xml, hibernate.properties or Spring. The format shown below is for hibernate.cfg.xml.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair207.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_enable_second_level_cache_settings.html","Enabling Second-Level Cache and Query Cache Settings","In addition to configuring the second-level cache provider setting, you will need to turn on the second-level cache (by default it is configured to off - \u0027false\u0027 - by Hibernate). To do this, set the following property in your Hibernate config:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair208.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_configuring_entities_to_use_second_level_caching.html","Configuring Hibernate Entities to use Second-Level Caching","In addition to configuring the Hibernate second-level cache provider, Hibernate must also be told to enable caching for entities, collections, and queries. For example, the mapping entry for a domain object called, com.somecompany.someproject.domain.Country, looks something like this:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair209.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_configuring_ehcache_settings.html","Configuring ehcache.xml Settings","Because the ehcache.xml file has a defaultCache, caches will always be created when required by Hibernate. However you can gain more control over Hibernate caches by configuring each cache based on its name. Doing this is particularly important, because Hibernate caches are populated from databases,...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair210.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_configuring_ehcache_settings_for_domain_objects.html","Ehcache Settings for Domain Objects","Hibernate bases the names of Domain Object caches on the fully qualified name of Domain Objects. So, for example, a cache for com.somecompany.someproject.domain.Country would be represented by a cache configuration entry in ehcache.xml similar to the following:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair211.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_configuring_ehcache_settings_for_collections.html","Ehcache Settings for Collections","Hibernate creates collection cache names based on the fully qualified name of the Domain Object followed by \u0022.\u0022 and the collection field name. For example, a Country domain object has a set of advancedSearchFacilities. The Hibernate doclet for the accessor looks like this:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair212.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_configuring_ehcache_settings_for_queries.html","Ehcache Settings for Queries","Hibernate allows the caching of query results. StandardQueryCache This cache is used if you use a query cache without setting a name. A typical ehcache.xml configuration is: <cache name=\u0022org.hibernate.cache.StandardQueryCache\u0022 maxEntriesLocalHeap=\u00225\u0022 eternal=\u0022false\u0022 timeToLiveSeconds=\u0022120\u0022 <persiste...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair213.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_the_demo_app.html","The Demo Application and Tutorial","A demo application is available that shows you how to use the Hibernate CacheRegionFactory. You can download the application from here: http:\u002F\u002Fsvn.terracotta.org\u002Fsvn\u002Fforge\u002Fprojects\u002Fhibernate-tutorial-web\u002Ftrunk.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair214.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_performance_tips.html","Performance Tips","Session.load Session.load will always try to use the cache. Session.find and Query.find Session.find does not use the cache for the primary object. Hibernate will try to use the cache for any associated objects. Session.find does, however, cause the cache to be populated. Query.find works in exactly...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair215.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_viewing_hibernate_statistics.html","Viewing Hibernate Statistics","It is possible to access the Hibernate statistics and Ehcache statistics using the Java Management Extensions (JMX). The EhcacheHibernateMBean is the main interface that exposes all the APIs via JMX. It basically extends two interfaces: EhcacheStats and HibernateStats. As the names imply, EhcacheSta...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair216.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_upgrading_from_versions_prior_to_2.html","Upgrading from Ehcache Versions Prior to 2.0","This topic contains notes about upgrading from versions of Ehcache prior to 2.0. Support for Hibernate 3.3 SPI Beginning with Ehcache 2.0, there is support for the Hibernate 3.3 SPI implementation. This is important because Hibernate 3.3 has an updated caching SPI. Although still present in 3.3, the...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair217.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_faq.html","FAQ","If I use BigMemory Go with my application and with Hibernate for second-level caching, should I try to use the CacheManager created by Hibernate for my app\u0027s caches? While you could share the resource file between the two CacheManagers, a clear separation between the two is recommended. Your applica...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair218.js"]
,["Ehcache_Documentation_Set\u002Fto-cold_using_ehcache_with_coldfusion.html","Using Ehcache with ColdFusion","About ColdFusion and Ehcache ColdFusion ships with Ehcache. The ColdFusion community has actively engaged with Ehcache and have put out lots of great blogs. Here are two to get you started. For a short introduction, see Raymond Camden\u0027s blog. For more in-depth analysis, see 14 days of ColdFusion cac...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair219.js"]
,["Ehcache_Documentation_Set\u002Fco-cold_about_coldfusion_and_ehcache.html","About ColdFusion and Ehcache","ColdFusion ships with Ehcache. The ColdFusion community has actively engaged with Ehcache and have put out lots of great blogs. Here are two to get you started. For a short introduction, see Raymond Camden\u0027s blog. For more in-depth analysis, see 14 days of ColdFusion caching, by Aaron West, covering...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair220.js"]
,["Ehcache_Documentation_Set\u002Fco-cold_example_integration.html","Example Integration","To integrate Ehcache with ColdFusion, first add the Ehcache jars to your web application lib directory. The following code demonstrates how to call Ehcache from ColdFusion. It will cache a ColdFusion object in Ehcache and set the expiration time to 30 seconds. If you refresh the page many times with...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair221.js"]
,["Ehcache_Documentation_Set\u002Fto-spr_using_ehcache_with_spring.html","Using Ehcache with Spring","Using Spring 3.1 Ehcache has had excellent Spring integration for years. Spring 3.1 includes an Ehcache implementation. See the Spring 3.1 JavaDoc. Spring Framework 3.1 has a generic cache abstraction for transparently applying caching to Spring applications. It has caching support for classes and m...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair222.js"]
,["Ehcache_Documentation_Set\u002Fco-spr_using_spring_3_1.html","Using Spring 3.1","Ehcache has had excellent Spring integration for years. Spring 3.1 includes an Ehcache implementation. See the Spring 3.1 JavaDoc. Spring Framework 3.1 has a generic cache abstraction for transparently applying caching to Spring applications. It has caching support for classes and methods using two ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair223.js"]
,["Ehcache_Documentation_Set\u002Fco-spr_using_spring_2_5_to_3_1.html","Spring 2.5 to 3.1","This open source, led by Eric Dalquist, predates the Spring 3.1 project. You can use it with earlier versions of Spring, or you can use it with 3.1. @Cacheable As with Spring 3.1 it uses an @Cacheable annotation to cache a method. In this example calls to findMessage are stored in a cache named \u0022mes...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair224.js"]
,["Ehcache_Documentation_Set\u002Fco-spr_annotations_for_spring.html","Annotations for Spring Project","To dynamically configure caching of method return values, use the Ehcache Annotations for Spring project at code.google.com at Ehcache Annotations for Spring project at code.google.com. This project will allow you to configure caching of method calls dynamically using just configuration. The way it ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair225.js"]
,["Ehcache_Documentation_Set\u002Fto-jruby_using_ehcache_with_jruby_and_rails.html","Using Ehcache with JRuby and Rails","About Using Ehcache with JRuby ruby-ehcache is a JRuby Ehcache library which makes a commonly used subset of Ehcache\u0027s API available to JRuby. All of the strength of Ehcache is there, including BigMemory and the ability to cluster with Terracotta. It can be used directly via its own API, or as a Rai...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair226.js"]
,["Ehcache_Documentation_Set\u002Fco-jruby_about_jruby_and_ehcache.html","About Using Ehcache with JRuby","ruby-ehcache is a JRuby Ehcache library which makes a commonly used subset of Ehcache\u0027s API available to JRuby. All of the strength of Ehcache is there, including BigMemory and the ability to cluster with Terracotta. It can be used directly via its own API, or as a Rails caching provider.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair227.js"]
,["Ehcache_Documentation_Set\u002Fco-jruby_installation.html","Installation","Ehcache JRuby integration is provided by the jruby-ehcache gem. To install it, simply execute: jgem install jruby-ehcache Note that you may need to use \u0022sudo\u0022 to install gems on your system. Installation for Rails","Ehcache_Documentation_Set\u002Fpairs\u002Fpair228.js"]
,["Ehcache_Documentation_Set\u002Fco-jruby_configuring_ehcache_for_jruby.html","Configuring Ehcache for JRuby","Configuring Ehcache for JRuby is done using the same ehcache.xml file as used for native Java Ehcache. The ehcache.xml file can be placed either in your Classpath or, alternatively, can be placed in the same directory as the Ruby file in which you create the CacheManager object from your Ruby code. ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair229.js"]
,["Ehcache_Documentation_Set\u002Fco-jruby_using_the_jruby_ehcache_api.html","Using the jruby-ehcache API directly","To make Ehcache available to JRuby: require \u0027ehcache\u0027 Note that, because jruby-ehcache is provided as a Ruby Gem, you must make your Ruby interpreter aware of Ruby Gems in order to load it. You can do this by either including -rubygems on your jruby command line, or you can make Ruby Gems available ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair230.js"]
,["Ehcache_Documentation_Set\u002Fco-jruby_using_ehcache_from_within_rails.html","Using Ehcache from within Rails","Configuration of Ehcache is still done with the ehcache.xml file, but for Rails applications you must place this file in the config directory of your Rails app. Also note that you must use JRuby to execute your Rails application, as these gems utilize Ruby\u0027s Java integration to call the Ehcache API....","Ehcache_Documentation_Set\u002Fpairs\u002Fpair231.js"]
,["Ehcache_Documentation_Set\u002Fco-jruby_adding_bigmemory_under_rails.html","Adding Off-Heap Storage under Rails","Terracotta BigMemory products provide in-memory data management with a large additional cache located right at the node where your application runs. To use the off-heap storage provided by the Terracotta BigMemory products with your Rails application, follow these steps.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair232.js"]
,["Ehcache_Documentation_Set\u002Fto-gae_using_ehcache_with_the_google_app_engine.html","Using Ehcache with the Google App Engine","About Google App Engine (GAE) and Ehcache The ehcache-googleappengine module combines the speed of Ehcache with the scale of Google\u0027s memcache and provides the best of both worlds: Speed - Ehcache cache operations take a few microseconds, versus around 60ms for Google\u0027s provided client-server cache,...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair233.js"]
,["Ehcache_Documentation_Set\u002Fco-gae_about_google_app_and_ehcache.html","About Google App Engine (GAE) and Ehcache","The ehcache-googleappengine module combines the speed of Ehcache with the scale of Google\u0027s memcache and provides the best of both worlds: Speed - Ehcache cache operations take a few microseconds, versus around 60ms for Google\u0027s provided client-server cache, memcacheg.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair234.js"]
,["Ehcache_Documentation_Set\u002Fco-gae_configuring_ehcache_xml.html","Configuring ehcache.xml for Google App Engine","Make sure the following elements are commented out: <diskStore path=\u0022\u002Fpath\u002Fto\u002Fstore\u002Fdata\u0022\u002F> <cacheManagerPeerProviderFactory class= ..\u002F> <cacheManagerPeerListenerFactory class= ..\u002F> Within each cache element, ensure that:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair235.js"]
,["Ehcache_Documentation_Set\u002Fco-gae_typical_use_cases.html","Use Cases","Setting up Ehcache as a local cache in front of memcacheg The idea here is that your caches are set up in a cache hierarchy. Ehcache sits in front and memcacheg behind. Combining the two lets you elegantly work around limitations imposed by Google App Engine. You get the benefits of the speed of Ehc...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair236.js"]
,["Ehcache_Documentation_Set\u002Fco-gae_troubleshooting.html","Troubleshooting","NoClassDefFoundError If you get the error java.lang.NoClassDefFoundError: java.rmi.server.UID is a restricted class then you are using a version of Ehcache prior to 1.6. Sample Application The easiest way to get started is to play with a simple sample app. We provide a simple Rails application which...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair237.js"]
,["Ehcache_Documentation_Set\u002Fco-gae_sample_application.html","Sample Application","The easiest way to get started is to play with a simple sample app. We provide a simple Rails application which stores an integer value in a cache along with increment and decrement operations. The sample app shows you how to use ehcache as a caching plugin and how to use it directly from the Rails ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair238.js"]
,["Ehcache_Documentation_Set\u002Fto-tcat_using_ehcache_with_tomcat.html","Using Ehcache with Tomcat","About Using Ehcache with Tomcat Ehcache is probably used most commonly with Tomcat. This page documents some known issues with Tomcat and recommended practices. Ehcache\u0027s own caching and gzip filter integration tests run against Tomcat 5.5 and Tomcat 6. Tomcat will continue to be tested against Ehca...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair239.js"]
,["Ehcache_Documentation_Set\u002Fco-tcat_about_using_ehcache_with_tomcat.html","About Using Ehcache with Tomcat","Ehcache is probably used most commonly with Tomcat. This page documents some known issues with Tomcat and recommended practices. Ehcache\u0027s own caching and gzip filter integration tests run against Tomcat 5.5 and Tomcat 6. Tomcat will continue to be tested against Ehcache. Accordingly, Tomcat is tier...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair240.js"]
,["Ehcache_Documentation_Set\u002Fco-tcat_tomcat_issues_and_practices.html","Tomcat Issues and Best Practices","Problem rejoining a cluster after a reload If I restart\u002Freload a web application in Tomcat that has a CacheManager that is part of a cluster, the CacheManager is unable to rejoin the cluster. If I set logging for net.sf.ehcache.distribution to FINE I see the following exception:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair241.js"]
,["Ehcache_Documentation_Set\u002Fto-jdbc_using_ehcache_with_jdbc.html","Using Ehcache with JDBC","About JDBC Caching Ehcache can easily be combined with your existing JDBC code. Whether you access JDBC directly, or use a Data Access Object\u002FData Access Layer (DAO\u002FDAL), Ehcache can be combined with your existing data access pattern to speed up frequently accessed data to reduce page load times, im...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair242.js"]
,["Ehcache_Documentation_Set\u002Fco-jdbc_about_jdbc_caching.html","About JDBC Caching","Ehcache can easily be combined with your existing JDBC code. Whether you access JDBC directly, or use a Data Access Object\u002FData Access Layer (DAO\u002FDAL), Ehcache can be combined with your existing data access pattern to speed up frequently accessed data to reduce page load times, improve performance, ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair243.js"]
,["Ehcache_Documentation_Set\u002Fco-jdbc_adding_jdbc_to_dao_dal.html","Adding JDBC caching to DAO\u002FDAL","If your application already has a Data Access Object\u002FData Access Layer (DAO\u002FDAL), this is a natural place to add caching. To add caching, follow these steps: Identify methods which can be cached. Instantiate a cache and add a member variable to your DAO to hold a reference to it.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair244.js"]
,["Ehcache_Documentation_Set\u002Fco-jdbc_sample_code.html","Sample Code","Here is some example code that demonstrates a DAO-based cache using a cache-aside methodology wiring it together with Spring. This code implements a PetDao modeled after the Spring Framework PetClinic sample application.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair245.js"]
,["Ehcache_Documentation_Set\u002Fto-opj_using_ehcache_with_openjpa.html","Using Ehcache with OpenJPA","Installation and Configuration Installation Ehcache easily integrates with the OpenJPCA persistence framework from Apache. To use OpenJPA, add a Maven dependency for ehcache-openjpa. <groupId>net.sf.ehcache<\u002FgroupId> <artifactId>ehcache-openjpa<\u002FartifactId> <version>0.1<\u002Fversion>","Ehcache_Documentation_Set\u002Fpairs\u002Fpair246.js"]
,["Ehcache_Documentation_Set\u002Fco-opj_installation_and_configuration.html","Installation and Configuration","Installation Ehcache easily integrates with the OpenJPCA persistence framework from Apache. To use OpenJPA, add a Maven dependency for ehcache-openjpa. <groupId>net.sf.ehcache<\u002FgroupId> <artifactId>ehcache-openjpa<\u002FartifactId> <version>0.1<\u002Fversion>","Ehcache_Documentation_Set\u002Fpairs\u002Fpair247.js"]
,["Ehcache_Documentation_Set\u002Fco-opj_the_default_cache.html","The Default Cache","As with Hibernate, Ehcache\u2019s OpenJPA module (from 0.2) uses the defaultCache configured in ehcache.xml to create caches. For production, we recommend configuring a cache configuration in ehcache.xml for each cache, so that it may be correctly tuned.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair248.js"]
,["Ehcache_Documentation_Set\u002Fco-opj_troubleshooting.html","Troubleshooting","To verify that OpenJPA is using Ehcache, view the SQL Trace to find out whether it queries the database. If there are still problems, verify in the logs and that your ehcache.xml file is being used. (It could be that if the ehcache.xml file is not found, ehcache-failsafe.xml is used by default.)","Ehcache_Documentation_Set\u002Fpairs\u002Fpair249.js"]
,["Ehcache_Documentation_Set\u002Fco-opj_further_information.html","For Further Information","For more on caching in OpenJPA, see the Apache OpenJPA project at http:\u002F\u002Fopenjpa.apache.org\u002Fbuilds\u002F1.0.2\u002Fapache-openjpa-1.0.2\u002Fdocs\u002Fmanual\u002Fref_guide_caching.html. Using Ehcache with Grails About Using Ehcache with Grails","Ehcache_Documentation_Set\u002Fpairs\u002Fpair250.js"]
,["Ehcache_Documentation_Set\u002Fto-grail_using_ehcache_with_grails.html","Using Ehcache with Grails","About Using Ehcache with Grails Grails 1.2RC1 and higher use Ehcache as the default Hibernate second-level cache. However earlier versions of Grails ship with the Ehcache library and are very simple to enable. The following steps show how to configure Grails to use Ehcache. For 1.2RC1 and higher som...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair251.js"]
,["Ehcache_Documentation_Set\u002Fco-grail_about_grails_and_ehcache.html","About Using Ehcache with Grails","Grails 1.2RC1 and higher use Ehcache as the default Hibernate second-level cache. However earlier versions of Grails ship with the Ehcache library and are very simple to enable. The following steps show how to configure Grails to use Ehcache. For 1.2RC1 and higher some of these steps are already don...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair252.js"]
,["Ehcache_Documentation_Set\u002Fco-grail_using_the_springcache_plugin.html","Using the Springcache Plugin","The Springcache plugin allows you to easily add the following functionality to your Grails project: Caching of Spring bean methods (typically Grails service methods). Caching of page fragments generated by Grails controllers.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair253.js"]
,["Ehcache_Documentation_Set\u002Fco-grail_using_web_sessions_with_grails.html","Using Web Sessions with Grails","Clustering is handled by the Terracotta Web Sessions product. See the article, \u0022Clustering A Grails App with Terracotta\u0022 at http:\u002F\u002Fgquick.blogspot.com\u002F2010\u002F03\u002Fclustering-grails-app-with-terracotta.html, for information about how to use Web Sessions with Grails and Tomcat.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair254.js"]
,["Ehcache_Documentation_Set\u002Fto-glass_using_ehcache_with_glassfish.html","Using Ehcache with GlassFish","Tested Versions of GlassFish Ehcache has been tested with and is used in production with GlassFish V1, V2 and V3. In particular: Ehcache 1.4 - 1.7 has been tested with GlassFish 1 and 2. Ehcache 2.0 has been tested with GlassFish 3.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair255.js"]
,["Ehcache_Documentation_Set\u002Fco-glass_tested_versions.html","Tested Versions of GlassFish","Ehcache has been tested with and is used in production with GlassFish V1, V2 and V3. In particular: Ehcache 1.4 - 1.7 has been tested with GlassFish 1 and 2. Ehcache 2.0 has been tested with GlassFish 3.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair256.js"]
,["Ehcache_Documentation_Set\u002Fco-glass_deploying_sample_app.html","Deploying the Sample Application","Ehcache comes with a sample web application which is used to test the page caching. The page caching is the only area that is sensitive to the Application Server. For Hibernate and general caching, it is only dependent on your Java version.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair257.js"]
,["Ehcache_Documentation_Set\u002Fco-glass_troubleshooting.html","Troubleshooting","How to get around the EJB Container restrictions on thread creation When Ehcache is running in the EJB Container, for example for Hibernate caching, it is in technical breach of the EJB rules. Some app servers let you override this restriction. I am not exactly sure how this in done in Glassfish. Fo...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair258.js"]
,["Ehcache_Documentation_Set\u002Fto-jsr_using_ehcache_with_jsr107.html","Using Ehcache with JSR107","About Ehcache Support for JSR107 Information on Ehcache support of JSR107 is available on github at https:\u002F\u002Fgithub.com\u002Fjsr107\u002Fehcache-jcache. FAQ Questions about Configuration General Ehcache Where is the source code?","Ehcache_Documentation_Set\u002Fpairs\u002Fpair259.js"]
,["Ehcache_Documentation_Set\u002Fco-jsr_about_support_for_jsr107.html","About Ehcache Support for JSR107","Information on Ehcache support of JSR107 is available on github at https:\u002F\u002Fgithub.com\u002Fjsr107\u002Fehcache-jcache. FAQ Questions about Configuration General Ehcache Where is the source code? The source code is distributed in the root directory of the download. It is also available through SVN.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair260.js"]
,["Ehcache_Documentation_Set\u002Fto-title_ehcache_faq.html","FAQ","Questions about Configuration General Ehcache Where is the source code? The source code is distributed in the root directory of the download. It is also available through SVN. Can you use more than one instance of Ehcache in a single VM?","Ehcache_Documentation_Set\u002Fpairs\u002Fpair261.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_configuration.html","Questions about Configuration","General Ehcache Where is the source code? The source code is distributed in the root directory of the download. It is also available through SVN. Can you use more than one instance of Ehcache in a single VM?","Ehcache_Documentation_Set\u002Fpairs\u002Fpair262.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_configuration_2.html","General Ehcache","Where is the source code? The source code is distributed in the root directory of the download. It is also available through SVN. Can you use more than one instance of Ehcache in a single VM? Yes. Create your CacheManager using new CacheManager(...) and keep hold of the reference. The singleton appr...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair263.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_configuration_3.html","Replicated Cache","What is the minimum configuration to get replicated caching going? The minimum configuration you need to get replicated caching going is: <cacheManagerPeerProviderFactory class=\u0022net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory\u0022 properties=\u0022peerDiscovery=automatic, multicastGroupAddress...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair264.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_development.html","Questions about Development","General Ehcache Can I use Ehcache as a memory cache only? Yes. Just set the persistence strategy of cache to \u0022none.\u0022 Can I use Ehcache as a disk cache only? As of Ehcache 2.0, this is not possible. You can set the maxEntriesLocalHeap to 1, but setting the maxSize to 0 now gives an infinite capacity....","Ehcache_Documentation_Set\u002Fpairs\u002Fpair265.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_development_2.html","General Ehcache","Can I use Ehcache as a memory cache only? Yes. Just set the persistence strategy of cache to \u0022none.\u0022 Can I use Ehcache as a disk cache only? As of Ehcache 2.0, this is not possible. You can set the maxEntriesLocalHeap to 1, but setting the maxSize to 0 now gives an infinite capacity.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair266.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_development_3.html","Replicated Cache","How many threads does Ehcache use and how much memory does that consume? The amount of memory consumed per thread is determined by the stack size. This is set using -Xss. The amount varies by OS. The default is 512KB (for Linux), but 100kb is also recommended. The threads are created per cache as fo...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair267.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_environ_and_interop.html","Questions about Environment and Interoperability","General Ehcache What version of JDK does Ehcache run with? JDK 1.6 or higher. Can you use Ehcache with Hibernate and outside of Hibernate at the same time? Yes. You use 1 instance of Ehcache and 1 ehcache.xml. You configure your caches with Hibernate names for use by Hibernate. You can have other ca...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair268.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_environ_and_interop_2.html","General Ehcache","What version of JDK does Ehcache run with? JDK 1.6 or higher. Can you use Ehcache with Hibernate and outside of Hibernate at the same time? Yes. You use 1 instance of Ehcache and 1 ehcache.xml. You configure your caches with Hibernate names for use by Hibernate. You can have other caches that you in...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair269.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_environ_and_interop_3.html","Replicated Cache","With replicated caching on Ubuntu or Debian, why am I see the warning below? WARN [Replication Thread] RMIAsynchronousCacheReplicator.flushReplicationQueue(324) | Unable to send message to remote peer. Message was: Connection refused to host: 127.0.0.1; nested exception is: java.net.ConnectException...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair270.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_operations.html","Questions about Operations","General Ehcache How do you get an element without affecting statistics? Use the Cache.getQuiet() method. It returns an element without updating statistics. Is there a simple way to disable Ehcache when testing?","Ehcache_Documentation_Set\u002Fpairs\u002Fpair271.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_operations_2.html","General Ehcache","How do you get an element without affecting statistics? Use the Cache.getQuiet() method. It returns an element without updating statistics. Is there a simple way to disable Ehcache when testing? Set the system property net.sf.ehcache.disabled=true to disable Ehcache. This can easily be done using -D...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair272.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_operations_3.html","Replicated Cache","How can I see if replicated caching is working? You should see the listener port open on each server. You can use the replicated cache debug tool to see what is going on. For information, see Debugging and Monitoring Replicated Caches.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair273.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_troubleshooting.html","Questions about Troubleshooting","General Ehcache I have created a new cache and its status is STATUS_UNINITIALISED. How do I initialize it? You need to add a newly created cache to a CacheManager before it gets initialized. Use code like the following:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair274.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_troubleshooting_2.html","General Ehcache","I have created a new cache and its status is STATUS_UNINITIALISED. How do I initialize it? You need to add a newly created cache to a CacheManager before it gets initialized. Use code like the following:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair275.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_troubleshooting_3.html","Replicated Cache","I see log messages about SoftReferences. What are these about and how do I stop getting the messages? Ehcache uses SoftReferences with asynchronous RMI-based replication, so that replicating caches do not run out of memory if the network is interrupted. Elements scheduled for replication will be col...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair276.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_errors_and_warnings.html","Questions about Errors and Warnings","General Ehcache I am using Java 6 and getting a java.lang.VerifyError on the Backport Concurrent classes. Why? The backport-concurrent library is used in Ehcache to provide java.util.concurrency facilities for Java 4 - Java 6. Use either the Java 4 version which is compatible with Java 4-6, or use t...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair277.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_errors_and_warnings_2.html","General Ehcache","I am using Java 6 and getting a java.lang.VerifyError on the Backport Concurrent classes. Why? The backport-concurrent library is used in Ehcache to provide java.util.concurrency facilities for Java 4 - Java 6. Use either the Java 4 version which is compatible with Java 4-6, or use the version for y...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair278.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_errors_and_warnings_3.html","Replicated Cache","Why do I get a RemoteCacheException in a replicated cache topology? The error is: net.sf.ehcache.distribution.RemoteCacheException: Error doing put to remote peer. Message was: Error unmarshaling return header; nested exception is: java.net.SocketTimeoutException: Read timed out.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair279.js"]
],
"words":
{
"welcome":[0,1]
,"ehcache":[0,6,1,3,2,1,3,1,4,4,5,1,7,1,8,1,9,2,13,2,15,3,17,9,18,9,20,1,22,2,23,2,24,1,27,1,30,1,32,3,34,1,35,1,36,1,40,1,42,1,43,2,44,2,45,1,46,1,47,1,51,2,54,1,59,1,61,4,63,3,64,2,66,1,67,1,69,1,72,4,75,1,76,1,84,2,86,6,91,2,95,7,98,1,100,4,101,2,103,4,104,2,107,1,108,4,112,1,115,1,116,3,117,1,120,2,121,5,122,2,123,1,125,2,126,14,127,2,130,1,131,1,132,2,134,1,138,1,141,2,142,2,143,2,145,4,147,3,148,2,149,2,150,10,152,3,154,1,155,1,157,5,160,5,161,1,162,1,168,3,169,1,170,1,171,5,172,2,173,1,174,3,176,1,177,3,178,1,179,5,180,4,181,6,182,2,183,1,184,3,185,4,186,5,187,5,188,1,192,1,193,1,196,3,202,1,203,14,204,1,205,2,206,4,207,2,210,1,211,1,212,1,215,3,216,8,217,9,218,1,219,3,220,5,221,1,222,2,224,5,225,1,226,3,227,5,228,3,229,2,230,18,232,1,233,5,234,1,235,5,236,1,237,1,238,1,239,4,240,2,241,1,242,2,243,1,244,2,245,1,246,4,248,1,250,1,251,5,252,1,254,1,255,3,256,3,257,9,258,1,259,2,262,5,265,7,266,3,268,9,271,10,272,1,274,5,275,1,277,5]
,"2.10":[0,1,1,2]
,"online":[0,1]
,"documentation":[0,2,4,1,19,1,80,1,148,1,150,1,157,1,188,1,189,1,203,1,262,1,269,1]
,"library":[0,2,181,1,226,1,251,1,277,1]
,"contains":[0,1,18,1,22,1,30,1,35,1,46,1,51,1,57,1,61,1,117,1,126,2,147,1,160,1,181,1,215,2,216,1,217,1,235,1,251,1]
,"product":[0,1,4,1,13,1,19,1,157,2,203,1,231,2,253,1]
,"open":[0,1,68,1,174,1,223,1,230,2,268,1,269,1,272,1]
,"source":[0,1,5,1,66,2,141,1,147,1,150,1,169,1,174,1,185,2,203,4,223,1,262,2]
,"standards-based":[0,1,4,1]
,"cache":[0,2,4,5,5,11,8,2,9,28,11,9,13,8,15,1,18,8,22,5,24,10,25,3,29,18,30,31,33,1,34,2,35,11,36,8,37,3,38,2,40,8,41,1,42,3,43,6,44,14,46,2,48,12,54,3,55,1,58,6,59,1,61,4,62,2,63,3,64,4,65,6,66,1,68,5,69,3,70,1,71,2,72,3,74,17,75,14,76,2,77,9,78,3,79,6,80,14,82,2,83,1,84,4,85,1,86,13,87,7,88,1,89,2,90,1,91,7,92,1,93,6,94,4,95,28,97,1,98,4,100,7,101,5,102,1,103,4,104,8,105,1,106,2,107,1,108,20,109,1,110,13,111,4,112,17,113,2,114,1,115,4,116,4,117,1,124,1,125,1,126,2,127,13,128,3,131,6,132,3,134,1,135,9,136,5,137,1,138,8,139,12,142,4,143,20,144,1,145,7,147,6,148,11,149,6,150,4,154,1,157,1,160,1,161,3,162,1,163,1,164,3,166,1,173,3,176,2,177,12,179,4,180,5,181,4,182,9,183,9,184,12,185,24,186,8,187,4,190,1,191,1,192,2,193,10,195,3,196,2,200,1,203,8,206,2,207,7,208,5,209,2,210,2,211,2,212,12,214,7,215,1,216,2,217,8,220,9,222,3,223,3,224,6,229,11,230,8,231,5,233,3,234,1,235,4,237,1,240,1,243,13,244,8,246,1,247,3,251,3,252,1,262,2,263,6,265,16,266,4,268,1,269,1,271,13,272,7,274,13,275,1,277,7,278,2]
,"boosting":[0,1,4,1]
,"performance":[0,1,4,1,7,1,8,3,11,1,13,2,15,1,61,1,69,3,89,1,90,1,93,1,94,1,95,2,104,1,131,2,132,1,141,1,142,2,147,1,166,1,169,1,185,3,192,1,193,1,203,1,214,1,216,2,231,2,242,1,265,2,271,1]
,"offloading":[0,1,4,1]
,"database":[0,1,4,1,5,2,8,5,9,7,11,4,38,2,58,1,66,1,68,1,74,14,75,4,77,1,145,10,179,5,182,10,183,2,184,10,185,17,203,1,208,2,217,6,230,1,242,1,244,1,248,1]
,"simplifying":[0,1,4,1,139,1]
,"scalability":[0,1,4,1,8,2,11,2]
,"widely-used":[0,1]
,"java-based":[0,1,4,1]
,"it\u0027s":[0,1,185,1]
,"robust":[0,1,4,1]
,"proven":[0,1,4,1]
,"full-featured":[0,1,4,1]
,"scales":[0,1]
,"in-process":[0,1,4,1,233,1]
,"nodes":[0,1,4,1,11,3,74,3,93,1,94,1,147,1,177,1]
,"mixed":[0,1,4,1,43,1,44,1,136,1]
,"in-process\u002Fout-of-process":[0,1,4,1]
,"configurations":[0,1,4,1,126,1,127,1,136,2,138,1,149,1,185,1,246,1,262,1]
,"terabyte-sized":[0,1]
,"caches":[0,1,4,1,7,1,9,2,11,2,13,3,15,2,18,2,22,2,23,4,24,1,25,1,27,3,28,1,29,4,38,1,39,1,40,1,42,1,43,2,48,2,51,1,56,1,57,1,61,3,62,1,63,1,65,1,66,1,68,3,70,1,71,1,73,1,74,4,90,1,98,1,103,1,104,3,106,1,108,2,116,1,126,1,131,1,132,2,135,12,136,10,137,1,138,1,139,2,142,1,143,3,150,1,164,3,175,1,177,3,181,1,198,1,209,3,210,1,212,4,215,1,217,2,231,1,235,1,244,1,247,1,251,1,262,6,265,1,268,9,271,2,272,2,274,3,275,1,277,1]
,"started":[0,1,17,1,126,1,176,1,179,1,185,1,219,1,224,1,230,1,234,1,237,1,240,1]
,"installing":[0,1,17,1,18,3,203,2,204,1]
,"general-purpose":[0,1,4,1,17,1,18,4,110,1]
,"caching":[0,1,4,1,6,1,7,1,8,7,9,8,10,1,17,1,18,5,24,1,26,1,57,2,59,2,74,3,75,1,80,1,116,1,145,2,148,1,154,1,158,1,179,5,180,7,181,2,182,1,183,3,184,1,185,1,186,6,192,1,193,7,194,1,196,7,200,2,203,5,207,2,208,4,212,1,216,5,217,1,219,1,222,2,224,5,226,1,227,1,229,1,230,16,235,4,237,2,239,1,240,1,242,1,243,3,249,1,252,2,256,3,257,2,263,2,269,1,272,1]
,"instructions":[0,1,203,1]
,"downloading":[0,1,203,1,204,1,205,1]
,"adding":[0,1,29,2,43,1,45,2,46,2,89,1,94,1,96,1,104,1,108,1,110,1,111,1,112,1,115,1,138,2,148,1,179,1,186,1,207,1,230,1,231,2,240,1,243,1,271,1]
,"application":[0,1,8,4,9,1,11,12,18,1,35,3,36,3,47,1,63,1,64,1,66,10,74,5,75,1,76,3,84,1,116,1,125,1,128,1,131,1,145,4,147,2,157,1,164,1,169,1,172,3,173,1,179,1,180,9,182,4,183,1,184,8,185,2,186,6,192,1,195,4,196,5,203,1,213,3,217,2,220,1,224,5,228,2,229,2,230,11,231,4,237,2,240,2,243,2,244,1,256,3,271,1,274,1,275,1,277,1]
,"release":[1,3,53,1,59,1,188,1]
,"notes":[1,2,216,1]
,"detailed":[1,1,121,1,177,1]
,"information":[1,2,4,1,13,3,15,2,17,1,18,2,23,1,24,3,40,1,42,2,43,1,44,1,46,1,58,1,59,1,63,1,80,1,100,1,104,1,108,1,116,1,130,1,131,1,132,1,135,2,137,1,138,1,142,1,148,1,150,1,157,1,160,1,168,2,169,1,174,1,181,1,185,1,193,2,203,1,205,1,215,1,217,1,231,1,235,1,249,1,252,1,253,1,256,1,259,1,265,1,271,1,272,2,277,1]
,"new":[1,1,23,5,29,5,36,1,39,1,44,2,45,1,48,1,69,1,71,1,108,3,116,2,117,2,121,4,131,2,132,1,164,1,181,1,185,1,200,1,216,7,217,1,220,1,229,1,230,3,251,1,262,1,265,1,271,5,274,2,277,2]
,"page":[1,1,8,1,9,13,18,2,58,1,176,1,179,3,180,15,181,1,184,2,192,1,193,6,194,1,195,6,196,4,198,1,200,1,203,1,220,1,224,1,239,1,242,1,252,1,256,2,257,1,268,1]
,"overview":[3,1]
,"open-source":[4,2,42,1,126,2,147,1,149,1]
,"solution":[4,1,75,2,180,1,182,1,183,1,184,1,185,2,186,1,187,1,195,1,203,1]
,"today\u2019s":[4,1]
,"widely":[4,1]
,"used":[4,1,7,4,9,4,11,2,13,3,18,1,23,2,24,1,25,1,30,1,40,1,44,2,45,5,46,6,51,1,59,2,62,1,67,1,69,1,71,2,72,1,74,2,78,1,80,4,84,1,85,1,86,1,90,1,100,1,104,1,112,1,115,1,116,10,118,1,121,1,126,1,128,2,131,5,132,6,134,1,135,2,136,1,138,2,139,1,141,1,143,2,148,2,152,2,164,1,176,1,177,1,184,1,185,1,186,1,193,1,200,1,207,1,212,1,217,1,224,1,226,2,228,1,233,1,235,1,239,1,248,2,255,1,256,1,265,4,266,2,272,1,277,2]
,"second-level":[4,1,203,5,206,2,207,4,208,2,217,2,246,1,251,2]
,"hibernate":[4,1,8,1,9,3,18,2,72,3,106,1,171,1,179,1,181,4,202,1,203,25,204,2,205,1,206,7,207,12,208,3,209,4,210,2,211,3,212,3,213,1,214,1,215,3,216,15,217,21,247,1,251,4,256,1,257,1,262,1,268,8,277,2]
,"additionally":[4,1,74,1]
,"integrate":[4,1,220,1]
,"third-party":[4,1]
,"products":[4,2,13,3,42,1,126,2,136,1,231,2]
,"coldfusion":[4,1,218,1,219,4,220,3]
,"google":[4,1,232,1,233,6,234,1,235,2,268,2]
,"app":[4,1,168,1,171,1,181,1,230,1,232,1,233,6,234,1,235,2,237,2,251,1,253,1,257,1,268,2,269,3]
,"engine":[4,1,138,6,193,1,232,1,233,6,234,1,235,2,268,2]
,"spring":[4,1,18,1,63,4,66,2,72,1,179,2,181,2,186,8,206,1,207,1,221,1,222,6,223,4,224,9,243,3,244,5,252,2]
,"provides":[4,1,11,1,13,3,42,1,44,1,46,1,51,1,67,1,116,1,126,1,130,2,132,1,147,3,148,4,157,1,172,1,180,1,187,1,192,1,230,1,233,2,235,1,274,1]
,"replicate":[4,1,265,1]
,"across":[4,1,8,1,11,1,13,1,51,1,61,2,68,4,74,1,78,1,184,1,185,1]
,"multiple":[4,1,8,2,11,4,13,1,23,3,40,1,42,1,61,1,68,4,78,2,94,1,104,1,108,2,126,1,131,1,132,2,185,1,193,1,207,3,240,3,265,1,266,2]
,"core":[4,1,22,1,57,1,84,1,160,1,205,1,217,2,256,2,265,1]
,"bigmemory":[4,7,9,1,11,1,13,5,42,2,94,1,126,2,135,1,136,1,143,1,147,3,148,2,157,2,203,2,217,3,226,1,231,4,262,3,268,1]
,"max":[4,4,9,1,11,1,42,1,94,1,116,2,131,2,138,1,147,1,262,2,268,1]
,"terracotta\u2019s":[4,2]
,"commercial":[4,1]
,"in-memory":[4,1,13,3,15,1,22,2,130,1,131,1,132,3,147,1,148,1,149,1,150,1,157,1,174,1,185,1,203,2,231,1]
,"data-storage":[4,1,141,2]
,"terracotta":[4,2,9,1,13,3,42,1,62,1,66,2,80,1,126,2,136,1,143,1,148,1,160,4,181,1,184,1,185,1,203,1,216,4,226,1,229,1,231,2,234,1,253,2,262,2,274,2]
,"server":[4,2,8,1,9,7,11,1,13,1,18,4,64,1,66,1,74,1,80,1,147,1,160,2,180,4,184,3,185,1,192,1,193,2,196,3,216,1,230,1,231,1,256,1,263,1,269,2,272,1,274,1]
,"array":[4,2,11,1,13,1,80,1,185,1,216,1,274,1]
,"provided":[4,1,9,1,22,1,24,1,28,1,44,1,64,2,75,1,95,2,117,1,125,1,135,1,154,1,160,1,164,1,176,1,177,2,185,1,216,1,227,1,229,1,231,1,233,1]
,"enables":[4,1,117,1,148,2,164,1,231,1]
,"terabyte-size":[4,1]
,"offerings":[4,1]
,"http:\u002F\u002Fterracotta.org\u002Fdocumentation":[4,1]
,"available":[4,1,11,1,13,5,32,2,36,1,44,2,45,2,46,1,54,1,76,1,80,1,95,1,116,1,130,1,132,1,134,6,136,1,143,1,147,2,148,2,150,4,160,2,161,2,162,2,177,2,208,1,213,1,226,1,229,2,230,1,231,2,244,2,259,1,262,2]
,"trial":[4,1]
,"full":[4,1,29,1,61,2,69,1,77,1,78,1,115,3,118,1,126,1,132,1,143,1,145,1,147,1,148,1,157,2,182,1,187,2,244,1,271,1]
,"versions":[4,1,61,1,150,4,181,1,203,1,205,3,216,2,223,1,233,1,251,1,255,1,257,1,266,1]
,"version":[4,1,9,1,72,1,74,1,126,2,147,2,150,1,152,1,176,2,204,1,205,1,208,1,216,1,227,3,229,2,233,1,236,1,256,1,268,2,274,1,277,2]
,"found":[4,1,7,1,28,1,44,1,46,1,67,1,95,2,108,1,121,1,122,1,126,2,132,1,150,1,186,1,220,1,224,1,248,1]
,"http:\u002F\u002Fwww.terracotta.org\u002Fdownloads\u002Fopen-source\u002Fcatalog":[4,1]
,"basic":[5,1,26,1,30,1,65,1,180,1,196,1,203,1,230,1]
,"terms":[5,2,13,1,131,1]
,"wiktionary":[5,1]
,"defines":[5,1,130,1]
,"store":[5,1,8,1,13,7,22,1,23,2,35,1,62,2,64,2,78,4,80,4,82,1,95,1,108,1,115,6,116,3,117,1,118,3,128,4,130,7,131,11,132,29,134,3,135,4,143,2,147,6,157,1,203,2,230,2,231,3,274,2]
,"things":[5,1,9,1,80,1,86,1,110,1,112,2,173,1,215,1,275,1]
,"required":[5,1,46,1,47,2,62,2,63,1,67,1,69,1,74,1,108,3,126,2,132,2,134,1,136,2,138,1,141,1,143,1,148,1,160,1,180,1,181,1,209,1,216,2,251,1,277,1]
,"future":[5,1,116,2,127,1]
,"retrieved":[5,2,116,1,131,1,193,1]
,"rapidly":[5,1]
,"collection":[5,1,9,1,13,4,45,1,80,2,86,1,131,1,156,1,157,5,161,1,166,1,179,1,203,3,211,2,215,1,231,1,243,1,268,1]
,"temporary":[5,1,132,2,134,1,135,3,148,1,149,2,268,3,274,1]
,"data":[5,7,7,2,8,3,9,12,11,7,13,10,15,6,22,4,24,1,35,7,36,3,37,1,38,2,39,3,42,1,44,4,47,1,58,6,61,8,65,6,74,5,75,2,80,1,104,1,117,2,128,5,130,5,131,3,132,8,134,8,135,2,136,4,137,1,138,1,140,1,141,6,142,1,143,11,145,13,147,6,148,13,150,3,157,1,174,1,179,3,182,14,184,5,185,20,193,1,203,3,208,3,217,1,220,1,229,1,231,1,235,1,242,3,243,2,265,1,271,1,274,1]
,"either":[5,1,8,1,11,1,13,2,18,2,22,1,23,1,43,1,58,1,64,1,65,1,69,2,84,1,93,1,95,1,98,1,105,1,131,1,132,2,135,3,143,1,149,1,150,1,193,1,200,1,206,1,228,1,229,1,230,2,262,1,277,1]
,"duplicates":[5,1]
,"located":[5,1,231,1]
,"elsewhere":[5,1]
,"result":[5,1,9,1,44,1,46,9,47,2,74,1,80,1,91,1,95,2,116,2,138,1,183,2,184,1,271,1]
,"computation":[5,1,9,1,138,1]
,"already":[5,1,23,2,44,1,104,1,108,3,168,1,173,2,180,2,181,1,192,1,196,2,200,2,216,1,243,2,251,1,263,1,266,1,277,2]
,"repeatedly":[5,1]
,"accessed":[5,1,103,1,127,1,139,1,142,1,144,2,242,1,265,3]
,"minimal":[5,1,139,1,186,1]
,"costs":[5,1]
,"time":[5,1,7,1,8,3,9,7,13,3,39,1,40,1,44,1,47,2,58,1,61,1,65,1,69,2,70,2,71,1,74,10,82,1,86,1,95,1,100,2,116,4,117,1,125,2,131,2,132,2,139,1,145,1,147,1,157,3,164,1,168,1,180,4,182,1,183,2,184,4,185,6,186,3,193,4,195,3,220,2,224,3,229,3,268,1,278,1]
,"resources":[5,1,46,1,61,2,65,2,66,1,68,1,77,1,78,1,95,1,122,1,134,1,135,1,136,6,141,2,142,1,233,1]
,"hit":[5,3,9,6,75,2,117,1,139,4,180,1,193,1,195,1,214,2,220,1]
,"element":[5,4,9,1,11,2,13,2,22,1,25,3,30,19,35,3,36,3,40,3,42,3,44,7,46,4,48,3,52,2,62,1,64,1,68,2,69,4,70,1,78,1,79,8,80,7,82,5,85,2,90,1,93,6,94,1,95,28,99,1,104,3,111,1,115,4,116,13,117,11,118,1,126,1,127,4,128,1,130,1,131,11,132,6,138,3,142,5,143,2,144,2,152,1,160,1,177,3,179,1,183,4,184,4,187,4,193,1,208,1,215,1,217,4,229,3,234,1,244,2,262,1,265,13,268,1,271,4,274,2]
,"requested":[5,2,9,1,46,1,79,1,84,1,128,1,139,2]
,"exists":[5,1,13,1,23,2,48,1,79,1,81,1,93,1,104,1,108,2,131,2,136,1,173,1,186,1,224,1,263,1]
,"given":[5,2,44,1,45,3,54,4,59,1,78,2,80,1,108,1,116,1,164,1,177,1,207,2,212,2,223,1]
,"key":[5,2,21,1,22,1,25,1,30,3,35,1,36,2,43,1,44,6,46,2,47,1,48,3,52,2,54,26,58,1,59,1,69,1,78,2,80,2,84,1,86,6,93,1,95,1,100,5,104,1,117,1,138,2,145,1,182,1,183,4,186,3,187,2,193,5,217,1,222,1,224,3,229,3,231,1,235,1,244,3,274,2]
,"referred":[5,2,13,1]
,"(or":[5,2,7,1,11,1,23,2,34,2,40,1,78,1,82,1,180,1,183,1,196,1]
,"simply":[5,2,13,1,29,1,36,1,42,1,58,1,82,1,104,1,131,1,145,1,173,1,180,1,182,1,183,1,196,1,227,2,243,1]
,"miss":[5,3,37,1,75,1,184,2,193,2,220,2,235,1]
,"exist":[5,1,23,4,127,2,142,2,183,1,186,1,224,1,265,3,277,1]
,"system-of-record":[5,2,35,3,36,1,38,1,39,3]
,"authoritative":[5,1]
,"truth":[5,1]
,"acts":[5,1,74,1]
,"local":[5,1,9,1,13,2,51,1,61,4,63,1,68,11,69,3,72,1,77,1,81,2,94,2,127,1,132,1,134,2,135,2,136,9,145,1,147,4,148,1,149,1,161,1,182,1,185,1,193,1,235,3]
,"copy":[5,1,13,1,34,1,40,9,61,1,64,1,126,1,128,7,130,1,141,1,145,1,147,3,182,1,193,1]
,"stored":[5,1,13,1,25,1,69,1,143,1,150,1,185,2,193,1,217,1,223,1,265,2]
,"(sor)":[5,1,35,1,36,1]
,"sor":[5,2,35,3,36,4,139,1,182,1,184,2]
,"often":[5,1,8,3,9,4,15,1,35,1,43,1,74,2,95,1,116,1,134,1,145,1,181,1,182,1,251,1]
,"traditional":[5,1]
,"although":[5,1,48,1,66,1,74,1,216,1,217,1,227,1]
,"specialized":[5,1]
,"file":[5,1,17,1,28,3,30,1,43,1,66,2,74,1,77,1,84,1,98,1,105,1,108,1,125,2,126,9,131,1,132,3,138,3,152,1,160,1,177,6,180,2,181,1,183,1,185,1,186,1,196,2,198,2,203,1,207,3,209,1,217,1,224,1,228,4,230,7,231,2,233,1,244,2,246,2,248,2,251,1,265,1]
,"system":[5,1,7,3,9,19,13,1,58,1,74,2,132,5,138,2,145,1,152,2,153,1,154,3,157,1,173,1,217,1,227,1,231,1,233,1,262,1,269,1,271,1]
,"reliable":[5,1]
,"long-term":[5,1]
,"storage":[5,1,12,1,13,4,15,2,24,1,75,1,115,1,129,1,130,5,131,2,132,1,133,1,134,1,135,1,136,2,138,1,139,2,143,1,144,1,147,2,148,3,149,2,150,1,192,2,231,6,233,1,262,1]
,"purposes":[5,1,72,1,138,1,217,1]
,"using":[5,1,9,1,13,1,15,2,18,2,23,2,24,2,27,2,29,3,34,1,36,3,38,2,39,2,40,1,42,3,43,1,44,2,45,2,46,2,47,3,49,2,50,1,51,2,58,1,61,1,63,1,64,2,66,2,68,1,71,1,72,1,74,4,75,1,78,1,80,2,82,1,86,4,93,1,98,2,100,1,103,1,108,3,110,1,112,1,116,3,117,1,126,1,128,2,134,3,135,2,136,1,138,1,139,4,143,2,145,3,147,1,152,1,158,1,159,1,160,2,173,1,174,1,177,2,179,3,181,1,182,2,184,4,185,1,186,5,187,3,192,1,193,1,202,1,203,1,207,1,208,1,212,2,215,3,216,3,217,1,218,1,221,1,222,3,224,4,225,1,226,1,228,1,229,3,230,7,231,1,232,1,235,4,236,1,238,1,239,1,241,1,243,3,244,2,245,1,248,1,250,1,251,1,252,1,253,1,254,1,257,1,258,1,262,1,265,2,266,2,268,7,271,3,272,1,274,1,277,5]
,"assumed":[5,1]
,"works":[6,1,53,1,116,1,157,1,165,1,181,1,186,1,214,2,224,1,233,2,251,1,262,1,263,1,277,1]
,"locality":[7,2,116,1]
,"reference":[7,2,9,1,24,1,30,2,31,1,48,2,68,1,82,1,86,1,106,1,108,1,110,1,112,2,116,1,128,2,138,2,143,1,188,1,203,1,243,2,244,1,262,1,271,1,274,1]
,"concerns":[7,1]
,"itself":[7,1,9,1,65,1,69,1,80,1,86,1,143,1,164,1]
,"java":[7,1,9,2,13,6,17,1,18,2,40,1,45,3,61,1,77,2,108,1,116,1,126,1,130,2,131,2,132,3,134,1,154,4,158,1,177,1,203,1,215,1,216,1,220,2,224,1,228,1,230,1,231,2,256,1,269,1,277,4]
,"objects":[7,2,13,1,22,1,25,2,37,1,40,1,44,2,46,2,62,2,85,1,86,2,132,1,138,1,157,1,210,4,212,1,214,2,230,1,233,1,265,1]
,"throughout":[7,1]
,"computing":[7,1]
,"cpu":[7,1,8,4,131,1,132,1,265,1]
,"internet":[7,1]
,"domain":[7,1,72,1,116,1,208,2,210,5,211,3,212,2,268,2]
,"name":[7,1,23,3,44,11,45,4,86,4,90,1,91,3,94,1,100,1,106,1,108,7,112,1,117,1,121,1,126,1,138,1,177,2,186,4,193,5,209,1,210,1,211,2,212,7,224,4,230,2,244,2,277,5]
,"(dns)":[7,1]
,"computer":[7,1]
,"systems":[7,2,9,2,24,1,58,1,72,1,74,1,104,1,145,2,169,1,173,3,182,1]
,"exhibit":[7,1,11,1,108,1]
,"near":[7,1]
,"recently":[7,1,11,1,115,1,116,4,131,1,217,1,265,1]
,"likely":[7,1,8,1,108,1,116,1,184,1]
,"again":[7,1,186,1,193,1,220,1,224,1]
,"long":[7,4,30,2,44,1,46,1,54,2,150,1,157,1,229,1,268,1,278,1]
,"tail":[7,4]
,"chris":[7,1]
,"anderson":[7,1]
,"wired":[7,1]
,"magazine":[7,1]
,"coined":[7,1]
,"term":[7,1,59,1]
,"refer":[7,1,30,1,77,1,130,1,131,1,150,1,168,1,231,2]
,"cases":[7,1,128,1,179,2,187,2,200,1,233,1,235,1]
,"e-commerce":[7,1]
,"small":[7,2,139,1,217,1]
,"number":[7,2,8,1,9,3,11,1,13,1,15,1,30,3,46,2,74,1,78,7,81,1,116,3,127,2,131,3,134,5,139,2,142,3,143,1,184,2,193,1,230,1,257,1,265,6,266,1,274,1]
,"items":[7,2,47,1,74,2,116,1,217,1,230,1,265,1]
,"bulk":[7,1,95,2]
,"sales":[7,1]
,"blogs":[7,1,219,1]
,"hits)":[7,1]
,"less":[7,1,9,1,36,2,45,3,78,1,116,2,131,1,233,1,265,1]
,"popular":[7,1,58,1,184,1]
,"example":[7,1,8,1,9,2,13,1,24,4,29,2,36,1,40,3,42,1,43,2,44,7,45,3,46,6,47,3,52,1,63,2,66,1,67,1,68,1,74,4,77,1,78,2,95,2,96,1,99,1,101,1,106,1,108,2,110,1,111,1,112,1,116,1,117,1,126,1,127,1,132,3,134,2,135,1,136,7,138,2,143,2,144,1,145,1,149,2,160,1,162,1,165,2,173,1,177,1,180,1,182,1,185,2,186,1,187,1,193,2,195,1,198,1,203,1,205,1,207,1,208,2,210,1,211,1,212,1,220,1,222,1,223,2,224,1,229,2,230,8,235,1,243,1,244,2,246,1,257,1,263,1,268,2]
,"power":[7,1,51,1]
,"-law":[7,1]
,"probability":[7,1]
,"distribution":[7,2,9,2,116,1,121,1,126,2,139,3,176,1,217,2]
,"pareto":[7,1,9,1,116,1]
,"80:20":[7,1]
,"rule":[7,1,23,1]
,"reduce":[7,1,8,2,78,2,131,1,185,1,242,2,274,1]
,"cost":[7,1,8,1,139,2,169,1,233,1]
,"obtaining":[7,1,30,2,46,1,71,1]
,"improve":[7,1,8,1,180,1,185,1,195,1,231,1,242,1]
,"benefit":[8,1,9,2,74,1,235,1]
,"answer":[8,1,193,1,229,4,230,2]
,"especially":[8,1,184,1]
,"i\u002Fo":[8,4,9,1]
,"bound":[8,7,9,1,86,2,112,1]
,"depends":[8,2,17,1,115,1,143,1,181,1,193,1,252,1,278,1]
,"rate":[8,1,74,2,139,5,185,1]
,"obtained":[8,1,24,1,53,2,68,1]
,"taken":[8,1,13,1,91,1,131,1,135,1,169,1,193,1]
,"principally":[8,1]
,"speed":[8,2,9,3,13,1,132,1,147,1,233,2,235,1,242,1]
,"main":[8,1,39,1,215,1]
,"memory":[8,1,13,8,15,1,22,1,23,1,65,1,115,1,116,3,128,2,130,3,131,16,132,2,134,5,135,1,138,3,141,1,143,3,147,1,148,1,149,1,185,1,203,3,231,5,240,3,265,5,266,2,271,2,274,5,275,1]
,"load":[8,1,9,3,11,1,24,1,78,2,84,3,85,1,86,5,91,1,110,1,112,1,121,3,145,4,148,1,179,1,182,4,183,1,184,2,193,1,217,1,229,1,242,2]
,"web":[8,3,9,8,11,1,18,4,58,1,66,2,76,1,108,1,171,1,172,3,179,4,180,13,181,2,190,1,191,1,192,2,193,2,194,1,195,5,196,4,200,2,220,1,235,2,240,2,253,3,256,3]
,"speeding":[8,2]
,"cpu-bound":[8,1]
,"applications":[8,5,9,2,11,1,40,1,66,2,74,2,75,1,147,1,157,2,164,1,203,2,222,1,230,1,266,1,268,1]
,"sped":[8,1,9,6]
,"improving":[8,1]
,"algorithm":[8,1,115,3,116,9,117,2,118,2,132,1,139,3]
,"parallelizing":[8,1]
,"computations":[8,2]
,"cpus":[8,1]
,"(smp)":[8,1]
,"machines":[8,1,158,1,240,1]
,"(clusters)":[8,1]
,"upgrading":[8,1,150,3,203,1,216,2]
,"temporarily":[8,1]
,"reuse":[8,1]
,"including":[8,1,15,1,23,1,47,2,61,1,95,2,110,1,112,1,138,1,141,1,193,1,226,1,229,1,230,1,262,1]
,"limited":[8,2,13,2,29,1,46,1,74,1,115,1,130,1,131,1,132,1,138,1,143,1,147,1,162,2,233,1,266,2]
,"large":[8,1,9,2,13,2,46,1,74,1,132,1,157,2,158,1,177,1,209,1,231,1,265,1,272,1]
,"pages":[8,2,9,1,58,2,108,1,179,1,180,5,192,2,193,1,194,1,195,4,196,3,230,1]
,"high":[8,1,9,2,132,1,185,1,193,1,214,1,216,1,265,2,275,2]
,"rendering":[8,1]
,"authentication":[8,2,116,1]
,"status":[8,1,80,1,86,3,91,2,112,3,141,1,173,2,274,1]
,"requires":[8,1,23,1,108,1,122,1,125,1,128,1,131,1,132,1,164,1,230,1,262,1]
,"cryptographic":[8,1]
,"transforms":[8,1]
,"i\u002Fo-bound":[8,1]
,"disk":[8,1,13,5,22,1,23,1,74,1,115,5,118,2,130,1,132,34,134,5,135,7,136,6,138,1,142,2,143,1,147,9,148,15,149,7,150,11,173,1,174,2,209,1,262,1,265,2,274,2,277,1]
,"network":[8,2,74,2,192,1,193,1,269,4,275,1,278,1]
,"operations":[8,2,17,2,24,1,30,1,40,1,48,1,61,2,68,2,71,4,78,8,80,2,82,1,86,2,98,1,100,1,110,1,112,3,128,1,148,1,155,1,164,1,173,2,176,1,177,2,200,1,215,1,233,1,237,1,270,1,272,1]
,"case":[8,2,43,1,44,1,45,1,47,1,53,1,58,1,61,3,78,1,79,1,84,1,85,1,132,2,134,1,135,4,148,1,187,1,195,1,208,1,217,1,230,1,265,1,275,1]
,"databases":[8,2,66,1,78,1,145,1,182,1,209,1]
,"factors":[8,1,9,1]
,"tear":[8,1]
,"down":[8,1,31,5,74,1,164,1,170,1,171,2,172,3,173,4,174,1,185,1,229,2,271,2,274,1]
,"connections":[8,2,77,1,193,1]
,"latency":[8,1,15,1,203,1]
,"minimum":[8,1,139,1,263,2]
,"round":[8,1,9,1]
,"trip":[8,1,9,1]
,"throughput":[8,1,15,1]
,"limits":[8,1,9,1,46,1,137,1,138,1]
,"overhead":[8,1,11,3,61,1,69,3,166,2,216,1,274,1]
,"marshalling":[8,1]
,"unmarshalling":[8,1,240,2]
,"help":[8,1,145,1,176,1,179,1,180,1,185,1,196,1,265,1]
,"significantly":[8,1,61,1]
,"access":[8,1,15,1,22,1,23,1,34,1,40,1,46,1,63,2,69,1,70,1,79,1,91,1,95,2,104,2,108,2,117,1,127,1,139,4,148,2,162,1,184,1,185,1,187,1,193,1,203,2,208,1,215,1,229,1,233,1,242,4,243,3]
,"object":[8,1,9,3,13,1,22,1,25,1,30,1,36,1,40,1,44,2,45,1,46,3,79,1,86,4,95,1,100,1,121,2,132,2,138,5,183,1,186,4,192,1,208,2,210,1,211,3,214,2,217,2,220,3,224,4,228,1,229,2,230,2,233,1,268,2]
,"generated":[8,1,126,1,181,1,252,1]
,"increased":[8,3]
,"corollary":[8,1]
,"suppose":[8,1,186,1,224,1]
,"perform":[8,1,18,2,24,1,40,1,61,1,69,3,78,2,80,2,110,1,112,1,139,1,185,1,230,1]
,"100":[8,2,9,2,46,1,74,1,78,2,135,1,138,1,231,1,263,2]
,"expensive":[8,1,58,1,265,1]
,"queries":[8,2,11,1,42,4,43,2,45,2,46,1,47,4,48,1,203,1,208,1,212,2,243,1,248,1]
,"per":[8,1,43,1,78,5,90,1,94,1,98,1,106,1,108,1,111,1,128,1,132,2,139,1,144,1,180,1,192,1,193,1,195,1,265,1,266,5,274,1,277,1]
,"second":[8,1,46,1,78,3,117,1,177,2,180,2,181,2,192,1,193,2,195,1,196,1,274,1]
,"beyond":[8,1,13,1,131,1,177,1,209,1,265,1]
,"threshold":[8,1]
,"backs":[8,1,13,1,130,1]
,"addition":[8,1,25,1,44,1,59,1,80,1,86,1,207,1,208,1,212,1]
,"occur":[8,1,39,1,48,1,65,1,74,2,78,1,80,2,82,1,100,1,169,1,193,1]
,"slowly":[8,1]
,"dies":[8,1,185,1]
,"workload":[8,1]
,"cause":[8,1,45,1,46,1,70,1,71,1,74,1,80,2,91,5,108,1,121,3,132,1,142,1,143,1,150,1,176,1,193,2,200,1,214,1,217,2,230,1,240,1]
,"hits":[8,1,9,3,116,2,131,2,184,1]
,"impact":[8,1,142,1]
,"scale":[8,1,58,1,157,1,233,1]
,"times":[8,1,9,9,13,1,58,1,69,4,74,1,78,1,95,1,117,1,132,1,147,1,148,2,185,1,220,1,242,1,271,1]
,"higher":[8,1,61,1,141,2,149,1,150,2,157,1,181,2,203,1,206,1,212,1,216,1,227,1,233,1,251,2,265,1,266,1,268,1]
,"business":[9,1,51,2,147,1]
,"response":[9,1,193,5,200,1]
,"getting":[9,1,13,1,18,1,30,1,47,1,54,2,181,1,193,1,200,1,214,2,217,1,224,1,231,1,275,1,277,1]
,"piece":[9,1,184,1]
,"proportion":[9,8]
,"reused":[9,1]
,"significant":[9,1,69,1,145,1,180,1,182,1,193,2,195,1]
,"applying":[9,3,222,1]
,"amdahl\u0027s":[9,3]
,"law":[9,6]
,"amdahl\u2019s":[9,3]
,"finds":[9,1,46,2]
,"total":[9,1,136,2,139,1,142,1,157,1,158,1,177,1,231,1]
,"speedup":[9,14,180,2,195,1,196,1]
,"part":[9,1,47,2,71,1,74,1,181,1,192,1,193,1,240,1]
,"\u002F((1":[9,8]
,"-proportion":[9,2]
,"up)":[9,3]
,"\u002Fspeed":[9,1]
,"following":[9,2,13,2,22,1,27,4,28,4,29,2,30,10,31,2,34,1,35,1,36,1,43,2,44,2,45,1,46,2,47,1,48,1,52,1,54,1,63,2,66,3,67,1,68,1,69,2,72,1,74,1,75,1,78,1,84,1,87,1,95,3,99,1,101,1,106,1,108,1,111,1,117,1,122,1,127,1,128,1,131,1,132,1,134,2,136,5,138,4,142,1,143,5,144,2,145,1,149,1,150,1,152,2,157,1,160,1,161,1,162,1,165,1,168,1,172,1,177,1,180,3,181,2,182,1,186,1,193,2,195,1,196,3,198,1,203,1,205,3,206,1,207,3,208,1,210,1,220,1,222,1,224,1,229,1,230,10,231,2,234,2,240,2,243,1,244,1,246,1,251,1,252,1,256,1,257,1,271,1,274,1,277,1]
,"examples":[9,2,23,1,30,1,31,1,44,1,74,2,77,1,117,1,125,1,136,3,149,1,179,1]
,"show":[9,1,79,1,181,1,230,1,251,1]
,"apply":[9,1,46,1,51,1,68,2,69,1,134,2,138,1,203,1,210,1,211,1,212,1]
,"common":[9,1,34,1,38,1,59,1,74,1,100,1,138,1,139,1,185,1,193,1,203,1,212,1,230,2,268,1]
,"situations":[9,1,44,1,74,1,121,1,193,2]
,"interests":[9,1]
,"simplicity":[9,1]
,"assume":[9,2,44,1,180,1,186,3,196,1,224,3]
,"single":[9,3,44,1,128,1,135,1,179,1,184,1,230,1,240,2,262,1]
,"thing":[9,1,58,2,116,1,121,1,157,1,180,1,196,1]
,"cached":[9,4,11,1,61,3,62,1,66,1,138,1,147,2,150,1,180,2,184,2,185,1,186,1,193,1,195,1,196,1,217,2,224,1,243,2]
,"gets":[9,1,30,5,69,1,74,1,136,5,265,1,271,1,274,1,275,1]
,"lives":[9,1]
,"forever":[9,2,82,1,144,1]
,"persistent":[9,1,132,1,147,3,173,1,174,1]
,"relational":[9,1]
,"session.load":[9,1,214,2]
,"1000":[9,3,136,1,180,1,196,1,234,1]
,"faster":[9,1,13,1,47,1,132,1,148,1,185,2]
,"typical":[9,1,43,1,192,1,212,2]
,"query":[9,4,42,2,44,2,45,9,46,27,47,6,48,2,183,1,184,1,193,2,203,4,207,3,212,14,268,1]
,"return":[9,1,23,4,25,1,35,3,42,1,44,2,46,3,54,4,58,1,61,1,68,1,80,1,104,1,108,1,121,1,128,1,148,1,180,1,184,1,186,2,187,1,193,1,195,1,212,1,222,1,224,2,240,1,244,2,278,1]
,"list":[9,1,27,3,29,1,45,2,46,3,65,1,67,1,77,1,87,2,177,4,212,1,240,1,271,1,272,1]
,"ids":[9,2,193,1]
,"attempt":[9,1,25,1,69,1,78,2,80,1,91,4,100,1,108,1,126,1,265,1]
,"session.iterate":[9,1,214,2]
,"back":[9,1,61,1,65,2,66,2,68,1,71,1,79,1,95,1,101,1,110,1,112,1,271,1,274,1]
,"imagine":[9,1,58,3,184,1]
,"scenario":[9,1,38,1,66,1,185,1,193,3]
,"execute":[9,1,42,1,43,1,66,1,80,1,82,1,145,2,182,2,184,2,227,1,230,1]
,"against":[9,1,42,2,44,1,72,1,74,2,106,1,117,1,173,1,184,1,212,1,235,1,239,2]
,"returns":[9,1,23,1,40,1,44,3,46,1,48,1,81,1,84,1,85,1,91,2,95,4,98,1,103,1,128,1,131,1,138,1,193,1,229,2,269,3,271,1]
,"hundred":[9,1]
,"loads":[9,1,75,1,185,1]
,"takes":[9,4,44,1,46,2,58,1,69,1,110,1,112,1,116,3,117,1,127,2,136,1,138,1,142,4,143,2,157,1,177,1,180,1,193,1,195,1,216,1,278,1]
,"loading":[9,1,11,2,28,1,44,1,75,1,84,1,86,2,95,2,100,2,112,2,119,1,120,3,121,1,122,1,139,1,193,1,268,1]
,"rest":[9,1]
,"(80":[9,1]
,"operation":[9,1,30,1,40,2,68,1,69,2,74,3,78,2,79,1,80,8,82,1,91,2,95,1,100,2,128,1,135,1,138,1,147,1,148,1,149,1,177,1]
,"thus":[9,4,95,1,110,1,112,1,145,1,182,1,185,2,217,1,274,1]
,"(75":[9,1]
,"*80":[9,1]
,"expected":[9,3,117,1,136,1,157,1,266,1,274,1,277,1]
,"-.6)":[9,1]
,"\u002F1000)":[9,6]
,"\u002F(.4":[9,1]
,".0006)":[9,1]
,"=2.5":[9,1]
,"observed":[9,1,93,1]
,"retrieve":[9,1,46,1,265,1]
,"simplepagecachingfilter":[9,1,18,1,180,3,193,5,196,3,277,2]
,"few":[9,1,58,2,157,2,166,1,233,1]
,"milliseconds":[9,1,193,1]
,"-1)":[9,4]
,"\u002F(0":[9,1]
,".0001)":[9,1]
,"=1000":[9,1]
,"fragment":[9,2,179,1,180,3,195,1,198,1,230,1]
,"entire":[9,1,18,1,75,3,135,1,138,1,143,2,193,1,265,1]
,"big":[9,1]
,"win":[9,1]
,"sometimes":[9,1,47,1,59,1,108,1,173,1,184,1,208,2,217,1]
,"liveness":[9,1]
,"requirements":[9,1,62,1,147,1]
,"vary":[9,1,205,1]
,"different":[9,1,15,1,27,1,45,1,67,1,74,1,108,2,134,1,147,2,193,2,208,1,216,1,217,2,219,1,227,1,262,1,266,1]
,"parts":[9,1,44,1]
,"simplepagefragmentcachingfilter":[9,1,18,1,193,3,198,5]
,"let\u0027s":[9,1,212,1,224,1]
,"say":[9,2,74,1,212,1]
,"fold":[9,1]
,"improvement":[9,1]
,"render":[9,1]
,"-.4)":[9,1]
,"\u002F(.6":[9,1]
,".0004)":[9,1]
,"=1.6":[9,1]
,"efficiency":[9,19,143,1]
,"entries":[9,4,15,1,78,1,80,4,104,1,134,3,137,1,138,1,141,2,142,2,143,11,144,2,148,1,173,1,183,1,240,2,268,1,274,1]
,"live":[9,4,61,1,87,1,144,1,145,1,182,1,183,2,229,2]
,"close":[9,1,203,1,244,1]
,"static":[9,1,23,1,58,1,121,3,160,1,164,1,235,1]
,"fragments":[9,1,179,1,180,1,181,1,192,1,193,2,194,1,195,1,252,1]
,"footers":[9,1]
,"currencies":[9,1]
,"world":[9,1]
,"affect":[9,2,134,1,141,1]
,"liveliness":[9,3]
,"needs":[9,1,11,1,86,2,91,1,100,1,112,1,147,1,185,2,200,1,230,1]
,"means":[9,2,35,1,39,1,45,1,46,1,65,1,74,1,78,2,93,1,127,2,139,1,142,4,147,1,265,1,277,1]
,"change":[9,2,39,1,48,2,51,1,61,1,67,1,68,1,91,1,117,1,128,1,139,1,169,2,180,2,185,2,195,1,196,1,198,1,215,1,263,1,269,1,271,1]
,"frequently":[9,2,116,3,118,1,131,2,180,1,195,1,235,1,242,1]
,"value":[9,3,25,1,30,4,35,1,40,3,43,1,44,7,45,2,46,3,47,1,48,5,54,6,62,1,63,1,74,3,78,2,80,2,81,1,86,2,91,1,95,2,100,1,112,1,117,1,127,2,132,2,136,2,138,2,139,1,142,3,177,2,183,7,184,4,186,1,200,1,212,1,217,1,222,1,224,1,229,3,230,1,235,1,237,1,244,2,265,5,275,1]
,"soon":[9,1]
,"date":[9,1,230,1,243,1]
,"low":[9,1,132,1,158,1,214,1]
,"changes":[9,1,39,1,40,1,46,1,61,4,68,5,78,1,127,1,128,1,148,1,180,1,185,1,186,1,196,1,216,1,256,1,274,1]
,"rarely":[9,1]
,"match":[9,1,139,1]
,"current":[9,1,54,4,68,3,94,1,132,1,230,1,263,1]
,"real":[9,1,183,1]
,"non-cached":[9,1]
,"general":[9,1,68,1,112,1,116,1,168,1,185,1,192,1,256,1,262,1,265,1,268,3,271,1,274,1,277,1]
,"item":[9,1,74,1,131,1,145,1,164,1,182,1,208,2,217,1]
,"fit":[9,1,13,1,75,2,131,1]
,"resource":[9,1,14,1,15,2,24,1,28,1,71,1,74,8,78,1,80,5,126,1,136,2,141,1,143,2,144,1,203,1,207,2,217,2,265,1,277,1]
,"machine":[9,1,173,4,266,3,269,1]
,"32-bit":[9,1,265,1]
,"hard":[9,1]
,"limit":[9,1,46,2,47,1,116,3,127,2,131,2,132,1,139,1,142,2,231,1,265,1]
,"address":[9,1,230,4,257,1,269,4]
,"space":[9,1,132,1,136,2,139,2,142,1]
,"64-bit":[9,1]
,"constraint":[9,1]
,"garbage":[9,1,13,4,131,1,156,1,157,6,158,1,203,1,231,1]
,"issues":[9,1,89,1,90,1,91,1,93,1,94,1,95,1,239,1,240,1,257,1,268,2]
,"impractical":[9,1]
,"heap":[9,1,13,4,25,1,130,1,131,5,134,1,135,7,136,13,142,1,143,2,157,2,158,1,233,1,275,1]
,"various":[9,1,27,1,126,1,147,1,215,1]
,"eviction":[9,1,15,1,75,4,95,1,114,1,115,5,116,5,117,6,118,1,127,3,131,3,132,1,139,10,141,1,142,8,143,1,144,2,145,2,154,1,182,2,229,1,265,1,274,1]
,"algorithms":[9,1,114,1,115,2,116,2,143,1,145,2,182,2]
,"evict":[9,1,115,1,116,1,117,1,118,1,217,1]
,"excess":[9,1]
,"shape":[9,1]
,"usage":[9,1,18,1,33,1,34,1,116,1,117,1,132,1,134,1,138,1,139,1,143,1,147,1,148,1,149,1,150,3,166,1,243,1]
,"300":[9,2,63,1,72,1,180,1,181,3,183,1,196,1,210,1,234,1,244,1,251,3]
,"3000":[9,1]
,"(80\u002F20":[9,1]
,"rule)":[9,1]
,"applies":[9,1,46,1,68,1]
,"ones":[9,1,86,1,193,1,265,1]
,"drives":[9,1]
,"average":[9,2,265,2]
,"request":[9,2,58,2,95,1,179,1,184,5,193,7,198,1,200,2]
,"lifespan":[9,7]
,"read\u002Fwrite":[9,1,217,1]
,"ratio":[9,5,139,1]
,"read":[9,1,35,1,36,1,37,1,51,1,53,6,54,5,64,1,69,1,74,2,75,1,104,1,145,1,147,1,179,1,180,1,182,1,184,6,185,1,195,1,203,2,208,3,212,1,217,1,243,1,278,1]
,"compared":[9,1,69,1,139,1,150,1]
,"written":[9,2,35,1,64,1,74,5,80,4,148,1]
,"empty":[9,1,143,1,179,2,183,2,184,1]
,"rooms":[9,1]
,"hotel":[9,1]
,"however":[9,2,11,2,13,1,23,1,40,1,46,1,47,1,59,1,61,2,64,1,65,1,71,1,72,1,74,1,84,1,103,1,117,1,134,1,135,1,136,1,142,1,143,1,144,1,150,2,157,1,166,1,181,1,183,1,185,1,193,2,209,1,214,1,251,1,263,1,266,1,271,3]
,"details":[9,1,17,1,18,1,38,1,39,1,47,1,86,1,95,1,112,1,130,1,144,1,180,2,186,1,215,1,224,1]
,"room":[9,1]
,"beds":[9,1]
,"immutable":[9,1,11,1,45,2]
,"therefore":[9,1,38,1,51,1,61,1,63,1,65,1,100,1,128,1,138,1,164,1,182,1,184,1,185,2,266,1]
,"maximum":[9,1,13,2,75,1,78,3,115,1,127,2,131,3,134,3,142,3,145,1,182,1,183,2,265,6]
,"write":[9,1,35,1,36,3,38,1,39,3,40,1,51,1,53,4,54,5,70,1,71,3,74,13,75,1,76,1,78,3,80,3,82,1,148,1,173,1,179,1,185,3,230,2]
,"thousands":[9,1,58,1,185,1]
,"reads":[9,1,61,2,66,1,69,1,75,1,104,1,145,1,147,1,182,1]
,"keeps":[9,1,265,2,271,1]
,"statistics":[9,1,79,1,117,1,157,1,166,5,215,4,271,5]
,"measured":[9,1,138,5]
,"directly":[9,1,35,2,36,1,42,1,43,1,45,1,59,1,106,1,226,1,229,2,230,2,237,1,242,1,268,5]
,"rather":[9,1,39,1,40,1,58,1,66,1,78,1,86,1,125,1,128,1,180,1,193,1,195,1]
,"estimated":[9,1]
,"cluster":[9,6,48,1,61,1,62,1,65,1,80,1,176,5,177,3,184,2,185,1,226,1,240,3,257,2,274,1]
,"round-robin":[9,1]
,"balancer":[9,1]
,"next":[9,1,84,1,85,1,147,1,148,1,174,1,217,1]
,"entry":[9,2,25,1,30,1,58,1,59,1,74,1,80,3,84,1,90,1,94,1,95,1,104,2,141,5,144,3,145,1,164,2,182,1,193,1,208,2,210,1,217,1,223,1,229,1,240,1]
,"variable":[9,1,229,1,243,2,256,1]
,"requests":[9,4,184,2,185,1,193,1]
,"caused":[9,1,138,1,200,1,257,1,269,1]
,"(ttl)":[9,1,265,1]
,"setting":[9,1,62,1,72,1,78,1,116,1,127,1,131,1,132,1,134,1,135,5,136,1,138,3,142,2,143,2,145,1,154,1,169,1,182,1,183,2,193,2,207,3,212,1,229,1,230,1,235,1,265,3,271,1,278,2]
,"table":[9,1,45,1,134,1,150,1,230,1]
,"shows":[9,1,32,1,43,2,44,1,52,1,66,2,68,1,101,1,116,3,127,1,138,2,144,1,165,2,193,1,213,1,237,1]
,"misses":[9,1,184,1,193,1]
,"ratios":[9,1]
,"whole":[9,1,117,1]
,"follows":[9,1,23,1,44,1,68,1,69,1,94,1,107,1,116,1,121,1,128,1,177,1,181,1,196,1,203,1,216,1,229,1,230,1,251,1,266,1,271,1]
,"servers":[9,5,164,1,184,3,257,1,269,1]
,"1\u002F2":[9,1]
,"0\u002F2":[9,3]
,"3\u002F4":[9,1]
,"2\u002F4":[9,1]
,"1\u002F4":[9,1]
,"0\u002F4":[9,1]
,"9\u002F10":[9,1]
,"8\u002F10":[9,1]
,"7\u002F10":[9,1]
,"6\u002F10":[9,1]
,"19\u002F20":[9,1]
,"18\u002F20":[9,1]
,"17\u002F20":[9,1]
,"16\u002F10":[9,1]
,"49\u002F50":[9,1]
,"48\u002F50":[9,1]
,"47\u002F20":[9,1]
,"46\u002F50":[9,1]
,"standalone":[9,3,11,2,55,1,130,1,150,1,160,1,227,1,274,1]
,"generally":[9,1,74,2,108,2,169,1,217,1]
,"(lifespan":[9,1]
,"-number":[9,1]
,"caches)":[9,1]
,"\u002Flifespan":[9,1]
,"relative":[9,1,69,2,230,2]
,"affected":[9,2,13,1,132,1,217,2]
,"short":[9,1,44,1,131,1,145,1,182,1,185,1,219,1]
,"dramatically":[9,1,78,1]
,"problem":[9,1,36,1,157,1,177,2,179,1,180,1,182,1,183,1,184,5,185,2,186,1,187,1,193,1,195,1,203,1,217,1,240,3,268,1,271,1,272,1,275,1]
,"solved":[9,1,157,1,278,1]
,"distributed":[9,2,11,7,13,1,55,1,58,1,62,1,74,1,150,1,235,1,262,2,268,1,274,1]
,"capability":[9,1]
,"put":[9,1,25,1,30,1,40,2,44,1,58,2,61,1,79,3,80,1,93,3,95,7,100,1,104,1,108,1,116,3,128,1,131,3,138,1,177,1,185,1,186,1,187,2,193,2,219,1,220,1,224,1,229,1,235,2,243,2,244,2,265,1,271,1,278,1]
,"propagated":[9,1]
,"*effective":[9,2]
,"efficiency)":[9,3]
,"(proportion":[9,1]
,"efficiency)\u002Fspeed":[9,1]
,"effective":[9,4,15,1,74,1,78,1,134,1,142,1,185,1,265,1]
,"=(cache":[9,1]
,"*(cluster":[9,1]
,"formula":[9,1]
,"earlier":[9,1,150,3,181,1,216,2,223,1,251,1]
,"two":[9,1,23,2,27,1,40,1,45,1,57,1,68,2,69,1,95,1,117,1,132,1,135,1,143,1,148,1,177,2,200,1,215,1,216,1,217,2,219,1,222,1,230,1,235,1,243,1]
,"=.35":[9,2]
,"(10":[9,3,44,1]
,"\u002F10":[9,3]
,"=.9":[9,4]
,"*.9":[9,3]
,"=.315":[9,1]
,"*.315)":[9,1]
,"*.315":[9,1]
,"\u002F(.685":[9,1]
,".000315)":[9,1]
,"=1.45":[9,1]
,"(two":[9,2]
,"servers)":[9,2,11,1]
,"=.70":[9,2]
,"=.63":[9,1]
,"*.63)":[9,1]
,"*.63":[9,1]
,"\u002F(.37":[9,1]
,".00063)":[9,1]
,"=2.69":[9,1]
,"=.90":[9,1]
,"=.81":[9,1]
,"*.81)":[9,1]
,"*.81":[9,1]
,"\u002F(.19":[9,1]
,".00081)":[9,1]
,"=5.24":[9,1]
,"dramatic":[9,1]
,"sensitive":[9,1,44,1,256,1]
,"topologies":[10,1,55,2,266,1]
,"topology":[11,6,55,1,266,1,268,1,272,1,278,1]
,"types":[11,1,23,1,42,1,43,3,44,3,74,1,130,1,143,1,162,1,200,1]
,"held":[11,4,54,6,65,1,108,1,147,1,157,1]
,"node":[11,3,65,1,74,1,78,2,80,1,93,1,94,1,132,1,142,1,231,1,235,1,274,3]
,"independent":[11,1,193,1]
,"communication":[11,1]
,"running":[11,1,15,1,47,1,66,1,120,1,127,1,130,1,212,1,257,1,271,1]
,"weak":[11,2]
,"consistency":[11,4,68,1,75,1,148,1,150,2,185,1]
,"contain":[11,1,46,1,205,1,207,2]
,"consistent":[11,1,48,2,65,1,68,1,74,3,80,1,147,2,148,2]
,"values":[11,1,42,9,43,6,44,4,45,1,47,4,48,1,63,1,94,1,126,1,131,1,132,1,142,4,143,1,145,1,179,2,182,1,183,3,186,2,187,1,215,1,223,1,224,2,230,1,231,2,243,2,265,4,271,1]
,"time-to-live":[11,1,141,1,179,1]
,"completed":[11,1,58,1]
,"reloaded":[11,1,132,2,141,1,147,1,150,1,217,1]
,"remote":[11,1,94,2,100,1,162,3,164,1,176,1,240,1,269,1,278,2]
,"subset":[11,1,13,1,44,1,47,1,117,1,130,1,226,1]
,"offers":[11,1,15,1,147,3,203,1]
,"rich":[11,1]
,"options":[11,1,12,1,23,1,49,1,77,1,128,1,131,1,132,1,141,2,148,5,150,4,164,2,168,1,180,1,229,1,230,4,231,1]
,"recommended":[11,1,48,1,130,1,147,1,150,2,169,1,171,2,207,1,217,1,239,1,266,1,268,2,271,1]
,"approach":[11,1,71,1,117,2,125,2,145,2,182,2,262,1,274,2]
,"clustered":[11,1,94,1,150,1,179,2,184,1,185,3,216,1,229,1,274,4]
,"scaled-out":[11,1]
,"environment":[11,2,86,3,94,1,184,1,229,1,230,3,256,1,267,1]
,"highest":[11,1]
,"level":[11,1,13,1,17,1,53,1,61,1,64,1,68,3,126,2,132,1,134,7,135,1,136,1,138,6,139,2,149,1,169,4,177,1,181,2,208,1,230,1,272,1,275,1]
,"availability":[11,2,185,1]
,"replicated":[11,4,55,1,78,1,175,1,176,1,263,3,266,3,269,2,272,7,275,1,278,3]
,"copied":[11,1]
,"invalidated":[11,1]
,"without":[11,2,13,1,18,1,59,1,61,1,66,1,93,1,104,1,108,2,116,1,127,1,128,1,131,1,136,1,142,1,143,1,148,1,169,1,185,2,208,1,212,1,257,1,265,1,271,2]
,"locking":[11,1,50,1,51,4,52,2,53,2,54,1,55,2,69,1,131,1,132,1,208,1,265,1]
,"replication":[11,1,78,1,100,1,176,1,177,3,233,1,240,2,266,2,269,1,275,3]
,"asynchronous":[11,1,48,1,74,1,185,2,266,1,275,1]
,"synchronous":[11,1,89,1,90,1,91,1,93,1,94,1,95,1,100,1,147,1,148,1]
,"writing":[11,1,36,1,38,1,39,1,74,1,78,2,79,1,148,1,179,1,185,4]
,"thread":[11,1,13,1,38,2,39,1,48,1,54,4,58,5,68,3,72,1,78,1,80,1,89,1,90,1,91,1,93,2,94,1,95,3,104,1,121,1,131,2,132,2,173,1,184,2,185,3,193,3,200,1,257,1,265,4,266,4]
,"blocks":[11,1,193,1]
,"propagation":[11,1]
,"occurs":[11,1,69,1,75,1,78,1,89,1,91,1,93,1,95,1,100,2,135,1,141,1,142,2,184,1,240,2]
,"mode":[11,1,38,1,61,7,64,1,65,7,66,1,72,4,74,1,78,3,80,2,148,1,230,2]
,"supported":[11,1,34,1,42,1,43,1,44,2,55,1,61,2,64,1,71,1,72,5,126,2,193,1,217,2,229,2,230,2]
,"production":[11,1,130,2,131,1,169,1,181,1,247,1,251,1,255,1]
,"deployed":[11,1,164,1,184,2]
,"clusters":[11,2]
,"instances":[11,4,13,1,40,1,138,1,145,1,182,1,207,1,274,1,277,1]
,"undesirable":[11,1]
,"behaviors":[11,1,40,1,108,1]
,"drift":[11,1]
,"-if":[11,1,68,2,266,3]
,"instance":[11,2,23,1,27,2,31,1,37,2,40,1,44,3,77,1,90,1,103,1,108,1,121,2,128,1,138,2,185,1,206,2,207,1,229,1,230,1,243,2,262,1,268,1,277,3]
,"maintains":[11,1,208,1]
,"updates":[11,1,30,2,78,1,145,3,164,1,182,3,185,2,212,1]
,"made":[11,1,23,1,25,1,42,1,43,2,44,1,45,1,74,1,78,1,95,1,100,1,108,1,116,2,131,2,145,2,148,1,169,2,182,2,184,1,265,1,274,1]
,"appear":[11,1,70,1,138,1,177,1,211,1,272,1,274,1]
,"happens":[11,1,48,1,66,1,74,3,95,1,115,1,138,1,148,1,157,1,193,3,200,1,240,1,265,1]
,"session":[11,1,212,2]
,"ensures":[11,1,164,1,203,1]
,"kept":[11,1,148,3]
,"sync":[11,1,61,2,145,1,182,2,185,1]
,"bottlenecks":[11,2]
,"-in":[11,1]
,"single-instance":[11,1]
,"effectively":[11,1,265,1]
,"shields":[11,1]
,"redundant":[11,1]
,"keep":[11,1,22,1,141,1,143,1,145,1,182,1,185,2,203,1,262,1]
,"fresh":[11,1,145,2,182,2]
,"refreshing":[11,2]
,"leads":[11,1]
,"added":[11,1,13,1,29,2,42,1,44,2,46,4,61,1,70,1,85,1,90,1,91,1,93,1,106,1,108,1,113,1,117,1,126,1,127,1,128,1,131,1,138,2,154,1,164,3,177,1,186,1,200,2,217,1,224,1,234,1,256,1,265,1,271,1,274,3,277,1]
,"eliminates":[11,1]
,"per-instance":[11,1]
,"tiers":[13,3,15,2,24,1,75,1,115,1,129,1,130,7,131,1,133,1,134,3,137,1,141,3,144,1,231,1]
,"divide":[13,1,136,2]
,"areas":[13,1,75,1]
,"memorystore":[13,6,30,1,64,1,74,1,95,1,173,2,262,1,265,3,274,1]
,"on-heap":[13,1,138,3]
,"hold":[13,2,22,1,86,1,112,1,131,1,143,1,243,1,262,1]
,"elements":[13,3,22,1,24,2,25,1,30,3,40,1,44,1,46,2,74,2,75,3,78,2,80,5,81,2,82,1,93,1,95,2,104,1,115,2,116,7,117,2,126,3,128,3,131,3,132,4,134,1,138,5,139,1,142,4,143,2,145,1,150,5,154,1,177,2,182,1,231,1,234,1,262,4,265,5,271,2,274,1,275,1,278,1]
,"tier":[13,4,15,4,130,1,131,3,132,1,134,1,135,14,136,2,141,4,142,1,143,3,147,1,148,3,149,1,150,1,239,1]
,"subject":[13,3,130,2,184,1,231,1]
,"offheapstore":[13,11]
,"overflow":[13,5,130,2,131,4,132,2,149,1,265,1]
,"capacity":[13,2,130,2,235,1,265,1]
,"size":[13,6,15,2,46,2,47,1,75,1,78,6,81,1,115,3,116,3,130,1,131,8,132,5,134,2,135,8,137,1,138,2,139,4,142,1,143,5,149,1,177,1,209,1,231,2,233,1,235,1,265,3,266,1,272,1,274,1,275,1,278,1]
,"ram":[13,2,130,1]
,"(gc)":[13,2,131,1,157,1]
,"diskstore":[13,6,30,1,79,1,95,4,132,3,148,2,173,3,192,1,231,1,233,1,235,1,265,7,266,2]
,"always":[13,1,23,1,36,1,40,1,44,1,45,1,59,2,65,1,66,1,74,1,75,1,116,1,125,1,126,1,131,2,138,1,147,1,185,2,209,1,214,2,229,1,269,3]
,"enabled":[13,4,18,1,61,1,63,2,66,1,72,1,80,1,131,4,164,1]
,"characteristics":[13,1,24,1,131,1,143,1]
,"accepts":[13,1,44,1,106,1,131,1,193,1]
,"whether":[13,1,35,1,44,1,45,2,48,1,54,2,58,1,104,1,131,1,143,2,152,1,164,4,184,1,193,3,209,1,229,1,242,1,248,1,262,1,265,1]
,"serializable":[13,4,25,1,30,2,79,1,131,1,132,1,162,1,231,1,233,1]
,"fastest":[13,1,131,2,147,1]
,"option":[13,1,46,1,67,1,72,1,131,1,132,2,143,2,147,2,148,8,173,1,229,1,230,1,268,1]
,"safe":[13,1,117,1,131,1]
,"concurrent":[13,1,58,1,70,1,104,1,131,1,184,1,193,1,208,2,277,1]
,"threads":[13,2,40,1,58,2,68,1,70,3,72,2,104,2,108,5,131,1,132,1,157,1,184,3,185,1,193,4,217,1,265,1,266,3,271,1]
,"(available":[13,2]
,"only)":[13,1,94,1,134,2,135,1,150,1]
,"holds":[13,1,74,1,95,1,110,1,112,1,130,1,187,1,244,2,274,1]
,"hottest":[13,1,130,1]
,"specify":[13,1,44,2,58,1,67,1,126,1,131,1,132,2,135,3,138,2,142,1,143,1,207,2,217,1,230,1]
,"configuration":[13,5,15,4,17,3,18,1,23,10,24,3,27,1,28,6,29,6,30,1,38,1,39,1,40,1,42,1,43,7,44,5,45,2,62,1,67,1,68,1,72,2,75,2,77,3,80,1,84,1,85,1,86,1,87,1,98,1,99,1,100,1,101,1,105,1,106,1,108,2,111,1,113,1,115,2,122,3,123,1,125,14,126,12,127,5,128,2,130,1,131,3,132,8,135,4,136,4,138,1,141,1,142,3,143,5,144,2,145,2,148,2,149,4,150,7,152,1,160,2,169,1,174,1,176,1,177,3,179,1,180,1,181,4,182,2,184,1,186,3,197,1,198,3,203,3,206,2,207,5,210,1,211,1,212,2,224,2,229,1,230,3,231,3,234,2,244,2,246,2,247,1,251,4,261,1,262,1,263,4,265,3,266,1,268,2,269,1,271,2,272,1,277,5,278,1]
,"existing":[13,1,23,5,30,1,108,1,115,1,131,1,132,1,160,1,177,1,216,1,229,1,242,2,277,1]
,"deleted":[13,2,70,1,95,4,131,2,141,2,174,1,268,1]
,"evaluated":[13,1,131,1]
,"spooling":[13,1,131,2]
,"check":[13,1,23,1,35,1,45,1,58,1,74,1,76,1,95,1,131,1,152,1,177,1,184,1,185,1,205,1,265,1]
,"expiry":[13,1,75,2,95,3,131,4,132,2,193,4,212,1,265,3,266,1]
,"carried":[13,1,131,1]
,"expired":[13,1,79,1,95,4,131,3,132,2,141,1,142,1,143,2,144,1,193,1,217,1,265,1]
,"spooled":[13,1,95,1,131,1]
,"sizing":[13,3,15,10,24,1,75,1,115,1,127,1,130,2,131,2,133,1,134,6,135,2,136,5,137,1,138,11,143,2,144,1,203,1,231,2]
,"configuring":[13,6,15,1,24,1,44,1,63,2,67,1,74,1,77,1,90,1,94,1,124,1,129,1,131,1,132,5,135,2,143,1,146,1,151,1,152,1,174,1,179,1,181,1,182,1,193,1,203,4,206,1,207,1,208,2,209,2,228,2,230,1,234,1,247,1,251,1,262,1]
,"guide":[13,3,15,2,16,1,17,4,18,2,20,1,24,1,40,1,75,1,115,1,123,1,125,1,145,1,148,1,155,1,174,1,180,1,190,1,215,1,231,2,235,1,243,1,262,1,265,1,268,1]
,"extends":[13,1,86,1,95,1,104,1,106,1,193,1,215,1,244,2]
,"outside":[13,1,39,1,74,1,141,1,145,1,157,1,182,1,265,1,268,2]
,"amount":[13,1,130,1,135,2,136,1,143,1,157,1,231,1,266,2,278,1]
,"create":[13,1,18,5,23,7,27,1,29,3,43,2,44,3,47,1,51,1,74,1,77,1,80,1,90,1,95,2,100,1,103,1,108,1,110,1,112,1,126,1,136,1,181,1,185,1,217,1,220,1,228,1,229,3,230,6,247,1,251,1,262,1,268,1,271,3,274,1,277,1]
,"extremely":[13,1,58,1]
,"off-heap":[13,3,74,1,115,1,130,2,131,1,134,2,136,10,203,1,231,10,262,2]
,"bytes":[13,3,15,1,132,2,134,3,136,1,139,2]
,"suitable":[13,1,108,1,110,1,112,1,130,1,193,4]
,"non":[13,1]
,"overflowing":[13,2,132,1]
,"offheapmemorystore":[13,1]
,"removed":[13,2,25,2,48,2,80,3,90,1,91,1,93,2,95,3,115,1,127,1,131,1,132,2,142,1,143,4,164,1,193,1,265,2]
,"warning":[13,1,95,1,126,2,132,1,135,1,138,2,231,1,265,1,269,1,275,1,277,2]
,"log":[13,1,18,1,25,1,138,3,157,1,169,1,174,1,177,1,272,1,275,1,277,1]
,"message":[13,1,25,1,66,1,121,1,132,1,145,7,174,1,182,7,217,1,223,2,257,1,269,3,275,2,278,1]
,"emitted":[13,1,63,1,95,1]
,"serialization":[13,5,40,2,128,1,132,5,231,1]
,"deserialization":[13,1,47,1,231,1]
,"place":[13,1,17,2,18,1,25,1,67,1,84,1,108,1,127,3,142,4,144,1,145,1,157,1,227,1,230,1,231,1,235,1,243,1,265,1]
,"putting":[13,1,30,1,207,1,231,1]
,"theoretically":[13,1,217,1]
,"slower":[13,1,69,7,148,1,185,1]
,"difference":[13,1,37,1,38,1,157,1,192,1,265,1]
,"mitigated":[13,1,74,1]
,"associated":[13,1,46,1,86,1,214,2]
,"larger":[13,1,231,1,274,2]
,"heaps":[13,1,157,2,158,1]
,"account":[13,1,66,1,131,1,193,1]
,"best":[13,1,31,1,42,1,46,1,47,1,116,1,117,1,131,1,233,1,240,1,268,1]
,"allocate":[13,1,136,2]
,"possible":[13,1,47,3,51,2,74,1,77,1,94,1,95,1,103,1,117,2,131,1,149,1,164,1,208,1,215,1,265,1,266,1,271,1,275,1]
,"triggering":[13,1,131,1]
,"pauses":[13,1,131,1,157,1]
,"cannot":[13,1,44,2,46,2,48,1,53,2,63,1,65,1,68,1,74,1,75,1,121,1,131,1,132,1,135,2,136,1,143,3,262,1,277,1]
,"(without":[13,1,131,1]
,"causing":[13,1,23,1,125,1,131,1,137,1]
,"pauses)":[13,1,131,1]
,"thread-safe":[13,1,24,1,128,1,132,1,216,1,265,2]
,"disk-spooling":[13,1,132,1]
,"facility":[13,1,132,1]
,"additional":[13,1,17,1,31,1,45,1,46,1,63,1,132,2,157,1,168,1,177,1,200,1,203,1,211,1,215,1,231,2,271,1,277,1]
,"persisting":[13,1,132,1]
,"restarts":[13,1,132,2]
,"(standalone)":[13,1]
,"max)":[13,1]
,"instead":[13,1,40,1,42,1,43,1,47,6,64,1,68,1,77,1,128,1,147,1,158,1,183,1,185,2,186,1,207,2,224,1,275,1]
,"placed":[13,1,29,1,68,1,86,1,91,1,95,1,100,1,112,1,116,1,122,1,131,1,132,1,228,2,231,1]
,"writes":[13,1,38,1,69,3,74,10,75,2,80,2,132,1,147,1,148,2,179,1,185,6,208,1]
,"objectinputstream":[13,1,132,1]
,"mechanism":[13,1,62,1,65,1,72,2,86,2,110,1,112,1,132,1,145,1,147,1,182,1,230,2,263,1,274,1]
,"non-serializable":[13,1,25,1,132,1,265,2]
,"notserializableexception":[13,1,132,1]
,"thrown":[13,1,44,2,61,1,68,3,71,1,80,2,82,2,100,1,121,1,132,1,135,1,193,1,200,2,257,1]
,"aware":[13,1,229,1]
,"serialized":[13,3,130,2,131,1,132,3,138,2]
,"type":[13,1,18,1,44,8,82,1,98,1,132,1,138,1,143,1,193,1,217,1,222,1,223,1,229,1]
,"shown":[13,1,29,1,67,2,72,1,77,1,99,1,111,1,113,1,136,1,181,1,206,1,208,1,230,1,246,1,251,1,268,1]
,"consisting":[13,1,132,1]
,"map":[13,1,44,1,80,1,86,1,108,1,132,1]
,"string":[13,1,27,4,44,3,46,2,47,2,52,2,108,1,132,1,138,1,187,2,193,1,230,3,244,2]
,"arrays":[13,2,132,2,138,1]
,"126ms":[13,1,132,1]
,"349,225":[13,1,132,1]
,"byte":[13,2,44,1,132,2,138,1,192,1]
,"7ms":[13,1,132,1]
,"310,232":[13,1,132,1]
,"serialize":[13,1,132,1]
,"making":[13,1,40,1,42,1,43,1,44,2,45,1,47,1,68,1,117,1,132,1,160,1]
,"better":[13,1,116,1,132,1,158,1,184,1,193,1,230,2]
,"choice":[13,1,17,1,36,1,132,1]
,"increasing":[13,1,132,1,275,1,278,1]
,"disk-store":[13,1,23,4,132,2]
,"optional":[13,1,94,1,131,1,132,2,177,1,230,1,277,1]
,"stores":[13,1,15,2,24,2,40,1,61,2,62,1,74,1,115,1,132,3,174,1,237,1,262,1]
,"need":[13,1,43,1,44,2,47,1,58,1,61,2,63,1,72,1,74,1,75,1,80,1,86,2,91,1,95,1,100,1,112,2,132,1,147,1,166,1,168,1,180,2,193,1,196,2,203,3,205,1,207,1,211,1,217,1,227,1,243,1,244,2,256,1,263,1,265,1,269,1,271,2,274,2,277,1]
,"configure":[13,1,17,2,18,2,23,1,38,1,40,1,72,1,77,1,99,1,106,1,111,1,126,1,128,1,132,2,135,1,149,1,179,2,180,5,181,1,186,3,196,5,203,3,205,2,206,1,208,1,224,3,230,2,231,1,235,1,243,1,244,1,251,1,268,1,274,1]
,"simplifies":[13,1,132,1]
,"uses":[13,1,35,1,44,2,45,1,59,1,66,1,67,1,69,1,72,2,74,1,75,1,78,1,91,1,103,1,115,1,118,1,122,1,128,1,132,2,168,1,193,3,214,1,223,1,233,1,240,1,244,1,247,1,268,1,275,1]
,"fewer":[13,1,74,1,132,1,185,1]
,"persistence":[13,1,23,1,132,2,134,1,135,3,146,1,147,5,148,4,149,4,150,14,174,2,185,1,203,1,229,1,234,1,246,1,265,2,274,1]
,"restartability":[13,1,132,1,146,1,147,1,148,2,150,2,174,2]
,"section":[13,1,126,1,132,1,149,1,150,1,186,1,224,1,268,1]
,"automatic":[14,1,15,3,24,1,43,2,47,1,141,1,203,1,217,1,230,1,262,1]
,"control":[14,1,15,2,18,1,24,1,48,2,51,1,61,1,64,1,132,1,138,2,141,1,143,1,145,1,149,1,182,1,186,1,203,1,209,2,217,1,229,1,265,1]
,"(arc)":[15,1,141,1]
,"gives":[15,1,116,1,143,1,145,1,182,1,265,1]
,"fine-grained":[15,1,203,1]
,"controls":[15,1,138,1,203,1,278,1]
,"tuning":[15,2,134,1,156,1,158,2]
,"enabling":[15,1,180,1,196,1,203,1,207,2,246,1]
,"trade-offs":[15,1]
,"independently":[15,1]
,"adjustable":[15,1]
,"parameters":[15,1,29,1,46,2,84,1,127,1,142,1,193,1,230,1,271,1]
,"include":[15,1,45,1,47,1,78,1,89,1,91,1,93,1,95,1,127,1,136,1,147,1,150,1,168,1,193,1,198,1,200,1,217,1,246,1]
,"differentiated":[15,2]
,"tier-based":[15,2]
,"pinning":[15,3,24,1,137,4,141,2,143,20]
,"hot":[15,1,147,1,203,1]
,"eternal":[15,1,75,1,82,1,127,1,142,4,229,2,265,3]
,"arc":[15,1]
,"wealth":[15,1]
,"benefits":[15,1,74,2,185,1,235,1]
,"limitations":[15,1,74,2,137,1,143,1,144,1,176,1,233,3,235,1]
,"avoid":[15,1,23,1,53,1,70,1,74,1,75,1,80,1,126,1,132,1,193,1,203,1,217,1,231,1]
,"outofmemory":[15,1,137,1,203,1]
,"errors":[15,1,65,1,82,1,98,1,121,1,125,1,137,1,138,2,143,1,177,1,203,1,276,1]
,"pooled":[15,1,136,2]
,"requirement":[15,1,59,1,72,1,74,1,125,1]
,"individually":[15,1]
,"flexibility":[15,2,44,1]
,"percentages":[15,1,134,1,135,1]
,"dynamically":[15,1,44,4,127,4,186,2,224,2,271,1]
,"involves":[15,2,134,1,138,1,203,2]
,"appropriately":[15,1,75,1,108,1,134,1,164,1]
,"ways":[15,1,27,1,74,1,134,1,230,1,271,1]
,"simple":[15,1,42,1,44,1,52,1,126,1,134,1,139,1,147,1,179,2,181,1,187,6,192,1,193,1,203,1,230,2,237,2,244,1,251,1,271,1]
,"attributes":[15,1,42,5,43,10,44,13,45,5,46,8,47,2,48,1,78,2,90,1,94,1,126,1,127,1,128,1,134,7,135,2,136,1,137,1,138,1,142,1,148,1,150,2,161,1,162,8,262,1,265,2,271,1]
,"tune":[15,1,142,1,265,1]
,"dynamic":[15,1,43,3,44,7,58,1,98,1,127,2,193,1,235,2]
,"allocation":[15,1,136,1]
,"balancing":[15,1,145,1,182,1]
,"important":[15,1,47,1,82,1,145,1,169,1,182,1,184,1,203,1,209,1,212,1,216,1]
,"aspects":[15,1,75,1]
,"managing":[15,3,46,1,66,1,69,1,140,1,141,1,265,1]
,"life":[15,3,140,1,141,3,265,1]
,"expiration":[15,1,127,2,141,1,142,3,143,1,144,1,145,8,179,2,182,8,220,1]
,"installation":[16,1,227,3,240,2,246,2,256,2]
,"download":[17,1,18,1,66,2,168,2,176,1,203,1,204,1,213,1,246,1,262,1]
,"http:\u002F\u002Fehcache.org\u002Fdownloads":[17,1]
,"beginning":[17,1,68,1,216,1]
,"1.7.1":[17,1,168,1]
,"slf4j":[17,2,138,1,168,6]
,"(http:\u002F\u002Fwww.slf4j.org)":[17,1]
,"logging":[17,6,74,1,167,1,168,8,169,5,177,3,240,1,272,2]
,"framework":[17,1,18,1,168,1,173,1,222,1,243,1,244,1,246,1]
,"concrete":[17,1,40,1,86,4,91,4,95,3,100,4,106,2,112,4,168,4]
,"implementations":[17,1,86,1,91,1,95,1,100,1,112,1,117,1,168,1,244,1]
,"1.5":[17,1,176,1,227,1,272,1,274,1]
,"1.6":[17,1,236,1,268,2,274,3]
,"jar":[17,1,126,1,168,1,176,1,227,1]
,"classpath":[17,2,18,1,28,2,86,1,91,1,95,1,100,1,112,1,122,1,126,3,162,1,177,1,207,1,227,1,228,1]
,"ehcache.xml":[17,2,18,3,28,1,43,1,67,1,84,2,86,3,91,3,95,3,98,1,99,1,100,4,105,1,106,1,108,2,112,3,122,2,126,7,127,1,132,2,177,2,180,4,181,2,183,1,188,1,193,2,196,4,198,1,203,2,209,2,210,1,211,1,212,3,228,3,230,1,231,2,234,1,246,1,247,2,248,2,251,2,262,1,268,1,277,1]
,"xml":[17,1,77,1,125,2,126,6,181,1,193,1,210,1,211,1,234,1,251,1]
,"optionally":[17,1,173,1,207,2]
,"appropriate":[17,1,63,1,125,1,138,1,180,2,196,2,227,1,230,1]
,"described":[17,1,42,1,115,1,126,1,139,1,143,1,203,6]
,"developer":[17,1,20,1,145,1,243,1]
,"specific":[18,1,44,1,47,2,74,1,80,1,86,2,91,1,95,1,100,1,112,1,135,2,136,1,143,1,179,1,180,1,205,2,212,1,215,1,244,1]
,"technologies":[18,1,66,1]
,"steps":[18,3,68,3,180,2,181,2,186,1,196,3,203,2,224,1,230,1,231,1,243,1,251,2]
,"(see":[18,2,233,1]
,"caching)":[18,2]
,"integrations":[18,2,201,1]
,"book":[18,2,181,2,220,1,230,3,251,2]
,"servlet":[18,1,66,1,179,1,180,3,196,3,200,1,277,1]
,"subclass":[18,2,86,1,91,1,100,1,112,1]
,"cachingfilter":[18,1,104,1,108,1,193,2,199,1,200,1,277,1]
,"jsp:include":[18,1]
,"anything":[18,1,86,2,240,1,244,1]
,"callable":[18,1]
,"requestdispatcher":[18,1,200,1]
,"pagefragmentcachingfilter":[18,1]
,"web.xml":[18,1,172,1,180,4,196,4,197,1,198,2]
,"declare":[18,1,136,1,138,1,230,1]
,"filters":[18,1,179,1,180,1,192,1,195,1,235,1]
,"created":[18,1,23,2,28,1,39,1,44,2,45,1,64,1,80,1,86,1,90,1,104,1,106,1,107,1,108,2,110,1,112,1,121,1,126,2,132,3,148,1,185,1,193,1,209,1,217,1,266,2,274,3]
,"above":[18,1,44,1,46,1,67,1,117,1,136,1,138,1,150,1,184,1,186,1,198,1,203,1,207,1,224,1,230,2,266,1,275,1]
,"filter":[18,2,108,1,180,5,193,8,196,5,198,1,200,1,239,1,277,1]
,"mapping":[18,1,208,2]
,"associating":[18,1]
,"url":[18,1,28,2]
,"user":[18,2,58,1,66,1,82,1,126,2,180,2,184,4,190,1,193,3,235,1,244,1]
,"restful":[18,3]
,"soap":[18,2]
,"ehcache-standalone-server":[18,1]
,"https:\u002F\u002Fsourceforge.net\u002Fprojects\u002Fehcache\u002Ffiles\u002Fehcache-server":[18,1]
,"bin":[18,1]
,"directory":[18,1,126,1,132,5,148,1,181,2,220,1,227,1,228,2,230,2,231,2,251,2,256,1,262,1]
,"startup.sh":[18,1]
,"start":[18,1,27,1,44,2,72,1,180,2,196,2,230,1,231,1,240,1,243,1,256,2]
,"foreground":[18,1]
,"default":[18,1,23,3,29,1,40,1,44,1,45,1,46,1,47,1,63,2,68,3,72,2,74,1,78,1,84,1,90,1,94,1,95,1,98,1,100,1,115,2,116,3,125,1,126,5,127,2,128,3,131,1,132,5,142,3,145,1,148,4,152,1,157,1,160,1,166,1,176,1,180,1,181,1,182,1,193,3,196,1,207,1,230,2,247,1,251,1,266,1,269,1,271,1,277,4]
,"listen":[18,1,164,1]
,"port":[18,1,160,1,193,2,256,1,272,1]
,"8080":[18,1]
,"services":[18,1,110,1,112,1]
,"sample":[18,1,52,1,66,10,76,2,116,6,126,2,138,1,177,1,181,1,195,1,197,1,198,1,234,1,237,3,244,2,251,1,256,2]
,"war":[18,1,240,1]
,"module":[18,1,176,1,191,1,192,1,204,2,205,1,233,1,247,1]
,"code":[18,1,23,2,27,1,31,1,32,1,35,4,36,3,44,1,52,1,59,1,63,1,66,2,68,1,77,1,79,1,145,1,180,1,182,1,183,1,184,3,186,1,196,1,203,3,212,1,220,2,228,1,229,1,230,2,242,1,244,3,262,2,268,1,271,1,274,1]
,"samples":[18,1,23,1,207,1]
,"programming":[18,1,40,1]
,"language":[18,1,44,1,45,1]
,"jcache":[18,2,59,1,86,2]
,"style":[18,1,108,1]
,"early":[18,1]
,"draft":[18,1]
,"implementation":[18,1,24,1,44,1,51,1,64,4,67,1,72,2,74,1,80,2,86,3,91,2,95,3,100,2,103,1,112,2,128,3,135,1,138,1,148,1,154,1,168,3,193,1,212,1,216,2,222,1,244,4,274,1,277,1]
,"contained":[18,1]
,"net.sf.ehcache.jcache":[18,1]
,"package":[18,1,47,1,57,1,138,5,160,4,200,1,256,2]
,"cocoon":[18,1]
,"acegi":[18,1]
,"frameworks":[18,1,106,1,243,1]
,"usually":[18,1,131,1,235,1,269,1]
,"even":[18,1,30,1,44,1,61,1,75,1,79,1,93,1,110,1,112,1,143,1,145,1,147,2,182,1,184,3,185,2,193,2,230,1,268,1,274,1]
,"realizing":[18,1]
,"first":[18,1,35,2,44,2,46,2,58,3,67,1,69,2,104,1,116,3,122,1,131,3,142,1,177,2,180,1,184,1,185,1,193,2,196,1,200,1,220,1,230,1]
,"happening":[18,1,75,1,157,1,177,1,272,1,275,1]
,"discover":[18,1]
,"names":[18,1,44,4,45,2,138,1,193,1,210,1,211,1,215,1,268,1]
,"settings":[18,1,25,1,72,1,78,1,125,1,127,1,134,2,141,1,143,1,144,1,145,4,180,2,182,3,183,1,186,1,196,2,203,2,207,2,209,1,210,1,211,1,212,1,217,1,265,1]
,"classes":[21,1,22,4,57,2,84,1,86,1,91,1,95,1,112,1,121,3,138,2,160,1,222,1,277,1]
,"methods":[21,1,22,1,23,4,24,2,25,1,45,1,46,1,47,1,54,1,74,1,79,1,80,1,84,6,86,1,87,1,89,2,90,1,91,3,93,3,94,1,95,4,108,4,110,2,112,2,131,1,160,1,179,2,181,2,186,4,215,2,222,1,224,2,243,3,244,1,252,2,277,1]
,"consists":[22,1]
,"cachemanager":[22,2,23,22,27,6,28,8,29,12,30,1,31,5,43,2,44,2,68,6,89,4,90,2,91,10,101,2,103,1,106,1,108,8,126,4,132,6,134,10,135,4,136,8,138,7,148,1,149,4,161,2,162,1,163,1,164,11,165,2,171,1,172,1,173,6,177,1,187,3,193,2,206,2,217,2,220,1,228,1,229,2,240,2,244,6,262,3,263,1,266,1,268,1,271,3,272,1,274,2,277,7]
,"manages":[22,1]
,"logical":[22,2,24,2,45,7,274,1]
,"sets":[22,1,46,1,132,1,134,3,136,2,193,1,212,1,229,5,231,1,271,1]
,"represented":[22,1,46,1,210,1]
,"essentially":[22,1,269,1]
,"name-value":[22,1,95,1]
,"pairs":[22,1,78,1,86,2,91,1,95,1,100,1,112,1]
,"kind":[22,1,145,1,147,1,182,1]
,"want":[22,2,40,1,43,3,47,3,48,1,54,6,59,2,61,2,67,1,68,1,108,1,110,1,112,1,117,1,160,2,181,1,187,1,193,1,203,1,207,1,212,1,227,1,230,2,231,1,243,2,251,1,262,1,265,1,274,1,277,1]
,"just":[22,1,42,1,95,4,117,1,184,1,185,1,186,1,187,1,224,1,230,1,240,1,265,1,274,1]
,"physically":[22,1]
,"implemented":[22,1,64,1,217,1]
,"representations":[22,1]
,"components":[22,1,66,1,80,1,193,1]
,"actualized":[22,1]
,"mostly":[22,1,72,1]
,"form":[22,1,44,1,84,2,85,1,230,1]
,"api":[22,1,25,2,27,1,32,1,42,5,43,1,44,1,45,1,49,1,51,1,54,1,55,2,61,3,64,2,68,1,74,1,79,3,116,1,162,1,164,1,166,1,171,1,187,2,216,1,226,2,229,1,230,10,237,1,263,1]
,"largely":[22,1]
,"responsible":[22,1,71,1]
,"providing":[22,1,131,1,147,2,176,1,177,1,223,1]
,"programmatic":[22,1,87,1,101,1,107,1,113,1,125,2,149,1,164,1]
,"class":[23,1,24,1,35,1,36,3,44,3,45,1,46,1,67,1,77,1,86,4,90,3,91,2,94,2,95,2,100,6,106,1,107,1,112,4,119,1,120,4,121,9,138,5,164,1,172,1,179,1,187,5,193,2,208,1,216,2,229,1,236,1,240,2,244,3]
,"manage":[23,1,141,1,215,1]
,"creation":[23,4,27,1,80,2,106,1,107,1,132,1,206,2,257,1,269,2,277,1]
,"removal":[23,1,95,1]
,"controlled":[23,1,68,1,138,1]
,"named":[23,6,44,1,186,1,212,1,223,1,224,1,244,1]
,"modes":[23,2,61,3,68,1,69,2,72,1,78,1]
,"supports":[23,1,34,1,49,2,55,1,65,1,72,1,78,1,125,1,161,1,183,1,193,1,230,1]
,"singleton":[23,7,27,2,29,1,31,1,193,1,206,2,262,1,271,2,277,1]
,"jvm":[23,5,61,1,65,1,136,2,157,1,171,1,173,1,179,1,184,1,185,3,271,3]
,"cachemanagers":[23,5,27,1,126,1,132,1,207,1,217,1,262,1,266,2,274,1]
,"allowed":[23,1,48,1,63,1,78,1,142,2,184,1,186,1,224,1,265,1]
,"constructors":[23,1,24,1,49,1,126,1]
,"creating":[23,2,27,1,42,3,45,1,86,2,91,2,95,2,100,2,105,1,110,1,112,2,207,1,230,1,244,1,277,1]
,"non-singleton":[23,1,207,1]
,"violate":[23,1]
,"nullpointerexception":[23,1]
,"error":[23,1,25,1,44,1,100,1,121,1,125,1,126,1,169,1,217,1,236,1,240,3,257,1,266,2,269,1,277,2,278,3]
,"cachemanager.create":[23,5,27,1,271,1]
,"unnamed)":[23,2]
,"singletons":[23,1]
,"calling":[23,1,68,2,91,2,95,1,158,1,186,1,224,1,263,1]
,"configured":[23,1,29,1,40,2,44,4,64,1,68,1,72,1,78,1,80,2,84,1,86,3,90,1,91,3,94,2,95,3,98,4,100,2,106,2,111,1,112,3,115,1,117,1,126,1,128,1,132,3,134,1,135,4,136,2,138,1,139,1,143,7,148,3,150,1,172,1,174,1,177,4,185,2,193,1,203,1,207,1,211,1,212,1,217,1,229,1,230,2,231,1,246,1,247,1,265,2,266,1,274,2]
,"(if":[23,1,78,1,143,1]
,"exists)":[23,1]
,"creates":[23,1,27,3,28,5,29,1,86,1,91,1,94,1,100,1,104,1,112,1,132,1,136,1,160,1,211,1,230,1]
,"based":[23,1,28,2,29,1,42,1,67,1,74,1,106,1,117,2,131,1,141,1,142,2,143,1,144,1,193,2,209,1,211,1,230,1,274,1]
,"passed-in":[23,3]
,"work":[23,1,24,1,47,1,58,2,59,1,61,1,67,1,68,2,71,1,72,4,121,3,193,2,203,1,227,1,233,1,235,2,244,2,263,1,265,1,278,1]
,"cachemanager.newinstance":[23,2,27,1]
,"method":[23,1,42,1,44,8,46,1,63,1,72,1,79,4,80,11,81,2,82,3,86,12,91,11,95,12,100,3,106,1,108,6,110,2,112,8,126,1,131,2,145,3,160,2,164,2,173,1,182,3,186,13,193,1,200,3,212,1,222,1,223,2,224,13,229,1,230,4,243,3,244,1,262,1,271,2]
,"parses":[23,1]
,"doesn\u0027t":[23,1,40,1,65,1,145,1,182,1,183,1,186,1,224,1,244,1]
,"review":[23,1,145,1]
,"behavior":[23,1,51,1,98,1,110,1,138,1,164,1,262,1,271,1,274,1]
,"(configuration":[23,3]
,"configuration)":[23,3,36,1,136,2]
,"cachemanager.getinstance":[23,1,31,1,271,2,277,1]
,"throw":[23,1,43,1,70,2,71,1,80,2,86,1,95,1,100,1,108,1,112,1,193,1]
,"exception":[23,1,36,1,43,1,44,1,48,1,68,1,70,1,71,1,78,1,80,2,82,3,97,1,98,4,99,1,100,12,101,1,104,4,150,1,200,2,240,3,257,1,269,2,278,1]
,"parameter":[23,1,84,1,110,1,112,1,186,2,224,2,230,2,265,2]
,"(configuration)":[23,1,132,1]
,"null":[23,1,44,1,45,2,48,5,49,2,79,1,84,1,85,1,86,2,91,1,100,3,104,3,117,1,121,1,131,1,173,1,183,6,187,1,193,1,244,1,271,1]
,"note":[23,1,29,1,45,1,46,1,63,1,74,2,78,2,81,1,103,1,106,1,108,2,122,1,126,1,127,1,131,1,134,1,135,2,136,3,138,1,144,1,158,1,171,1,227,1,229,1,230,1,231,1,262,1]
,"instance-mode":[23,1]
,"(non-singleton)":[23,1]
,"concurrently":[23,1,40,2]
,"management":[23,1,157,1,159,1,160,5,164,2,165,1,215,1,231,1]
,"path":[23,4,132,13,148,5,230,2,240,2,256,1,277,1]
,"specified":[23,1,28,1,29,2,44,1,46,3,69,1,80,5,90,2,131,1,132,4,135,7,138,1,148,2,150,3,206,1,277,1]
,"unique":[23,1,116,1,126,1,132,1,193,2,257,1]
,"ensure":[23,1,68,1,75,1,78,1,108,1,135,1,216,1,217,2,234,1,235,1,257,2]
,"depending":[23,1,25,1,47,1,65,1,89,1,90,1,91,1,93,1,94,1,95,1,143,1]
,"upon":[23,1,80,1,143,2,148,1,150,1,184,1]
,"strategy":[23,1,36,2,63,2,117,1,128,2,131,1,132,2,148,5,149,3,208,2,217,2,265,2]
,"automatically":[23,1,44,2,45,1,47,1,64,1,67,2,72,1,131,1,132,1,136,1,148,1,164,1,166,1,171,1,172,1,184,2,193,1,203,1,217,1,231,1,274,2,277,1]
,"resolve":[23,1,126,1]
,"conflict":[23,1,132,1,148,1,277,1]
,"know":[23,1,217,1]
,"explicitly":[23,1,43,1,45,1,68,1,74,1,77,1,126,1,132,1,135,2,136,2,143,1,271,1]
,"managed":[23,1,66,2,185,1,243,1]
,"special":[23,1,46,1,131,1,145,1,154,1,182,1,217,1,277,1]
,"considerations":[23,1,46,1,48,1,69,1,95,1,166,1]
,"javadoc":[23,1,43,1,44,1,45,1,46,1,47,1,58,1,59,1,77,1,79,1,125,1,126,1,188,1,222,1,271,1]
,"http:\u002F\u002Fwww.ehcache.org\u002Fapidocs\u002F2.10.1\u002Ffor":[23,1,58,1,59,1,77,1]
,"passing":[23,1,40,1,67,1,128,1]
,"representation":[24,1]
,"analogous":[24,1]
,"region":[24,1,206,1,207,1,216,1]
,"once":[24,1,44,1,48,1,58,1,74,2,82,1,108,1,132,1,135,1,138,1,139,1,144,1,183,1,184,1,185,1,186,1,193,1,217,1,224,1,229,1,230,1]
,"(through":[24,1]
,"cachemanager)":[24,1,135,1,187,1,244,1]
,"actions":[24,2,74,1,181,1,252,1]
,"performed":[24,1,40,1,42,1,46,1,61,1,72,1,139,2,150,1,164,1]
,"physical":[24,1,203,1]
,"relegated":[24,1]
,"instantiated":[24,1,243,1]
,"programmatically":[24,1,29,3,43,3,78,2,84,1,96,2,98,1,105,1,108,1,113,1,128,2,132,1,143,1,149,1,207,2,265,1,271,1,274,3,277,1]
,"certain":[24,2,63,1,74,1,125,2,127,1,144,1,187,1,193,1,217,1,271,1]
,"(arc)-related":[24,1]
,"(for":[24,4,94,1,134,2,145,1,182,1,227,2,266,1]
,"getcachemanager":[24,1,108,2]
,"isnodebulkloadenabled":[24,1]
,"issearchable":[24,1]
,"())":[24,1,28,1,36,3,44,1,46,2,49,3,108,2,121,2,143,1,212,1]
,"cache-wide":[24,1]
,"flush":[24,1,141,1,150,1,173,1]
,"initialize":[24,1,274,1,277,1]
,"dispose)":[24,1]
,"allow":[24,1,40,1,51,1,68,1,78,1,86,1,87,1,89,1,93,1,95,1,110,1,112,1,139,1,164,1,177,1,186,1,224,1,269,1]
,"remove":[24,1,61,1,80,1,95,3,132,1,141,1,150,1,177,1,193,1,240,1,271,1]
,"replace)":[24,1]
,"isexpired":[24,1]
,"ispinned)":[24,1]
,"atomic":[25,1,51,1,61,2,65,1]
,"record":[25,1,139,1,145,1,148,2]
,"accesses":[25,1,35,1,144,1]
,"expire":[25,1,75,1,142,2,145,1,182,1,230,2,265,1]
,"persist":[25,1,65,1,185,1]
,"discarded":[25,1,65,1]
,"debug-level":[25,1]
,"apis":[25,1,86,1,125,1,215,2]
,"identical":[25,1]
,"except":[25,1,55,1,193,2,233,1]
,"getkeyvalue":[25,1]
,"getobjectvalue":[25,1,183,1]
,"getkey":[25,1]
,"getvalue":[25,1]
,"usages":[27,1]
,"snippets":[27,1,244,1]
,"illustrate":[27,1,74,1,136,1]
,"versus":[27,1,135,1,183,1,233,1]
,"defaults":[27,2,29,1,78,6,181,1,251,1]
,"cachenames":[27,2]
,"=cachemanager.getinstance":[27,1,68,1]
,".getcachenames":[27,1]
,"=manager.getcachenames":[27,1]
,"manager1":[27,1]
,"=cachemanager.newinstance":[27,2,28,4]
,"src\u002Fconfig\u002Fehcache1.xml":[27,1]
,"manager2":[27,1]
,"src\u002Fconfig\u002Fehcache2.xml":[27,1]
,"cachenamesformanager1":[27,1]
,"=manager1.getcachenames":[27,1]
,"cachenamesformanager2":[27,1]
,"=manager2.getcachenames":[27,1]
,"defined":[28,1,139,1,205,1,256,1]
,"manager":[28,4,29,2,30,1,31,1,63,4,64,3,65,3,66,1,67,3,68,1,72,3,88,1,90,1,101,1,165,1,229,2,244,1,257,1,274,1]
,"src\u002Fconfig\u002Fehcache.xml":[28,2]
,"=getclass":[28,1]
,".getresource":[28,1,122,1]
,"(\u0022\u002Fanotherconfigurationname.xml":[28,1]
,"(url)":[28,1]
,"inputstream":[28,2]
,"fis":[28,1]
,"=new":[28,1,29,2,30,1,36,1,43,4,44,5,49,2,52,1,77,2,101,1,107,1,108,1,113,1,128,4,132,2,149,3,165,1,271,1,274,1]
,"fileinputstream":[28,1]
,"(new":[28,1,29,2,30,2,35,2,36,2,43,5,44,3,45,1,52,2,68,2,77,3,149,2,183,1,184,1,187,1,244,1]
,".getabsolutepath":[28,1]
,"try":[28,1,47,2,52,2,66,1,68,1,72,1,80,1,121,3,145,2,182,2,184,1,212,1,214,2,217,1,271,1,277,1]
,"{cachemanager":[28,1]
,"(fis)":[28,1]
,"finally":[28,1,52,2,53,1,186,1,212,1,224,1,244,1,272,1]
,"{fis.close":[28,1]
,"removing":[29,2,30,1,89,1,139,1,143,1,240,1]
,"manager.addcache":[29,2,274,1]
,"(cachename)":[29,1,108,1,187,1,244,1]
,"adds":[29,2,46,1,69,1,108,2]
,"called":[29,5,30,2,31,1,43,1,44,1,45,1,47,2,48,1,61,1,68,5,74,1,78,2,80,7,82,1,84,1,85,1,86,7,95,4,100,1,104,1,108,1,112,4,126,3,132,2,173,1,179,1,184,1,185,2,208,1,222,1,223,1,235,1,277,2]
,"testcache":[29,8,246,1]
,"singletonmanager":[29,4]
,"defaultcache":[29,1,80,1,86,1,106,2,112,1,126,4,181,1,209,1,229,1,247,1,251,1,277,2]
,"=cachemanager.create":[29,4,274,1]
,"singletonmanager.addcache":[29,2]
,"test":[29,2,32,1,130,1,256,1,265,1,271,1]
,"=singletonmanager.getcache":[29,2]
,"below":[29,2,67,3,72,1,77,2,79,1,86,2,90,1,91,2,100,3,112,2,113,1,132,1,139,1,177,1,180,1,181,1,196,1,198,1,206,1,208,1,251,1,257,1,269,1]
,"add":[29,1,43,2,44,1,45,2,46,1,48,1,58,1,78,1,96,1,99,1,101,2,105,1,106,1,108,3,135,1,138,1,142,1,150,2,160,1,162,1,168,1,172,1,177,1,180,1,181,2,185,1,186,3,196,1,205,3,208,1,220,1,224,3,227,1,230,9,231,1,243,5,246,1,251,1,252,1,263,1,274,4,277,3]
,"usable":[29,1]
,"until":[29,1,48,1,54,2,61,2,69,1,71,1,78,1,91,2,95,4,104,2,143,1,144,1,164,1,193,2]
,"memoryonlycache":[29,1]
,"5000":[29,1,192,1,212,1,274,1]
,"false":[29,2,43,2,47,2,63,1,72,2,74,1,77,4,78,3,126,1,127,1,128,2,144,1,148,3,150,2,152,2,165,3,180,1,181,1,183,1,196,1,198,8,205,1,208,4,210,1,211,2,212,2,234,2,246,3,251,1,262,1,263,1,274,1]
,"(memoryonlycache)":[29,1]
,"\u002F\u002Fcreate":[29,2,43,1]
,"specifying":[29,1,209,1]
,"cacheconfiguration":[29,1,43,2,44,2,77,1,127,1,128,5,149,2,161,2,162,1,163,1,164,2]
,"maxentrieslocalheap)":[29,1,135,1]
,".memorystoreevictionpolicy":[29,1]
,"(memorystoreevictionpolicy.lfu)":[29,1]
,".eternal":[29,1,43,1]
,"(false)":[29,1]
,".timetoliveseconds":[29,1]
,"(60)":[29,1,127,1]
,".timetoidleseconds":[29,1]
,"(30)":[29,1]
,".diskexpirythreadintervalseconds":[29,1]
,"(0)":[29,1]
,".persistence":[29,1,149,1]
,"persistenceconfiguration":[29,1,149,1]
,".strategy":[29,1,149,1]
,"(strategy.localtempswap)))":[29,1]
,"(testcache)":[29,1]
,"constructor":[29,1,44,1,58,1,77,1,126,1]
,"http:\u002F\u002Fehcache.org\u002Fapidocs\u002F2.10.1\u002Fnet\u002Fsf\u002Fehcache\u002Fcache.html":[29,1]
,"removes":[29,1,30,1,144,1]
,"samplecache1":[29,2,30,11,108,1,177,5,229,2,234,1]
,"singletonmanager.removecache":[29,1]
,"performing":[30,1]
,"obtains":[30,1]
,"preconfigured":[30,1]
,"=manager.getcache":[30,9,77,1,127,2]
,"puts":[30,1,78,2,229,2,274,1]
,"key1":[30,10]
,"value1":[30,2]
,"cache.put":[30,4,35,1,44,1,52,1,183,1,185,1,220,1,229,3]
,"(element)":[30,1,36,2,95,1]
,"updating":[30,1,48,2,271,1]
,"knows":[30,1,59,1]
,"considers":[30,1]
,"update":[30,1,35,1,61,1,74,1,79,1,80,1,95,2,131,1,151,1,152,2,177,1,180,1,185,4,196,1,217,1,230,1,235,1,274,1]
,"purpose":[30,1,112,1,192,1,200,1]
,"notifying":[30,1,93,1,145,1,182,1]
,"listeners":[30,1,78,1,88,1,89,3,91,1,92,1,93,5,94,2,95,4,269,1]
,"\u0022))":[30,2,43,4,45,1,68,2,149,1]
,"\u002F\u002Fthis":[30,1]
,"value2":[30,1]
,"=cache.get":[30,2,35,1,52,1,183,1,184,1,229,1,244,1]
,"=element.getvalue":[30,1]
,"nonserializable":[30,1]
,"=element.getobjectvalue":[30,1,183,1]
,"cache.remove":[30,1,143,1]
,"sizes":[30,1,135,2,138,2,157,1]
,"currently":[30,3,78,1,81,1]
,"int":[30,1,66,1,229,2]
,"elementsinmemory":[30,3]
,"=cache.getsize":[30,1]
,"=cache.getmemorystoresize":[30,1]
,"=cache.getdiskstoresize":[30,1]
,"shut":[31,3,171,1,172,2,173,2,174,1,229,2,271,1]
,"shut-down":[31,1]
,"hook":[31,1,171,1,173,7,271,1]
,"practice":[31,1]
,"shuts":[31,2,164,1,171,1,172,1]
,".shutdown":[31,1,271,2]
,"assuming":[31,1,44,1,108,1,116,2,131,2,139,1]
,"manager.shutdown":[31,1,229,2]
,"cachemanagertest.java":[31,1]
,"https:\u002F\u002Ffisheye.terracotta.org\u002Fbrowse\u002Fehcache\u002Fbranches\u002Fehcache-2.10.1\u002Fehcache-core\u002Fsrc\u002Ftest\u002Fjava\u002Fnet\u002Fsf\u002Fehcache\u002F":[31,1]
,"junit":[32,2,266,1]
,"tests":[32,4,45,2,142,1,239,1,256,1,266,1,268,2]
,"comes":[32,1,51,1,227,1,256,1]
,"comprehensive":[32,1,262,1]
,"suite":[32,1]
,"browse":[32,1]
,"https:\u002F\u002Ffisheye.terracotta.org\u002Fbrowse\u002Fehcache\u002Fbranches\u002Fehcache-2.10.1\u002Fehcache-core\u002Fsrc\u002Ftest\u002Fjava\u002Fnet\u002Fsf\u002Fehcache\u002Fsearch":[32,1]
,"unit":[32,1,139,1]
,"src.zip":[32,1]
,"tarball":[32,1,176,1]
,"patterns":[33,1,34,3,36,1,103,1,243,2]
,"several":[34,1,74,1,230,1]
,"cache-aside":[34,1,35,2,37,1,38,1,243,1,244,1]
,"direct":[34,1,42,1,231,1]
,"manipulation)":[34,1]
,"cache-as-sor":[34,1,36,6,184,1,243,1]
,"combination":[34,1,36,1]
,"read-through":[34,2,36,2,37,2,75,3,104,1,184,1]
,"write-through":[34,2,36,3,38,6,39,2,71,3,73,1,74,4,77,2,78,3,80,4,185,1]
,"write-behind":[34,2,36,3,38,1,39,7,71,2,73,1,74,9,75,3,76,1,77,2,78,5,80,5,81,2,179,1,185,13]
,"patterns)":[34,1]
,"write-back)":[34,1]
,"pattern":[35,1,36,5,37,2,38,3,39,2,74,2,82,1,84,1,103,1,108,1,139,1,184,2,242,1,244,1]
,"consult":[35,1]
,"bypassing":[35,1]
,"otherwise":[35,2,61,1,69,1,115,1,122,1,184,1]
,"fetch":[35,1]
,"updated":[35,1,48,3,70,1,74,3,93,2,116,2,131,2,145,4,157,1,182,4,193,1,208,3,216,1,262,2]
,"results":[35,1,42,2,45,6,46,24,47,3,48,3,59,1,116,1,142,1,193,1,212,1,230,2]
,"looks":[35,1,122,1,126,3,184,1,208,1,211,2]
,"pseudo-code":[35,1]
,"public":[35,2,36,4,44,1,110,1,112,1,117,1,138,2,160,1,187,6,208,1,212,1,222,2,223,2,243,2,244,11]
,"mydataaccessclass":[35,2,36,2]
,"{private":[35,1,36,1,138,1,187,1,244,1]
,"final":[35,1,36,1,44,1,95,4,138,1,139,1,187,4,230,1,244,4]
,"(ehcache":[35,1,36,2,80,1,86,2,95,2,100,1,106,1,108,2,112,2]
,"cache)":[35,1,36,2,40,2,66,1,80,1,86,1,95,1,112,1,184,1,243,1,244,1]
,"{this.cache":[35,1,244,1]
,"=cache":[35,1,229,1,244,1]
,"\u002F*read":[35,1,36,1,184,1]
,"*\u002Fpublic":[35,2,36,2,54,6,80,1,86,7,87,3,91,2,95,2,100,1,108,2,112,3,117,1,121,3,164,1,184,1,211,1,244,1]
,"readsomedata":[35,1,36,1,184,1]
,"key)":[35,1,36,2,54,6,184,1,187,2,244,1]
,"{element":[35,1,184,1,187,1,244,1]
,"((element":[35,1,184,1]
,"(key))":[35,2,184,2,274,1]
,"!=null)":[35,2,184,2,187,1,244,2]
,"{return":[35,1,36,2,87,1,121,2,184,1,187,2,211,1,244,2]
,"element.getvalue":[35,1,36,1,184,1,187,1,244,1]
,"\u002F\u002Fnote":[35,1,184,1]
,"decide":[35,1,184,1]
,"\u002F\u002Fwill":[35,1,184,1]
,"\u0027nulls":[35,1,184,1]
,"(value":[35,1,183,1,184,1,222,1,244,1]
,"=readdatafromdatastore":[35,1,184,1]
,"{cache.put":[35,1,36,1,52,1,184,1,244,1]
,"(key":[35,3,36,1,52,2,54,4,184,1,187,1,244,1]
,"value))":[35,1,184,1,187,1,244,1]
,"\u002F*write":[35,1,36,1]
,"void":[35,1,36,7,54,4,87,2,95,2,108,2,117,1,164,1,187,1,222,1,223,1,244,4]
,"writesomedata":[35,1,36,1]
,"value)":[35,3,36,2,187,2,244,3,274,1]
,"{writedatatodatastore":[35,1,36,1]
,"implies":[36,1]
,"primary":[36,1,68,1,74,1,214,2,217,1]
,"delegates":[36,1]
,"reading":[36,1,37,1,53,1,74,1,157,1]
,"activities":[36,1,138,1]
,"absolved":[36,1]
,"responsibility":[36,2,89,1,90,1,93,1,94,1]
,"implement":[36,1,37,1,38,1,40,1,45,1,62,2,72,1,89,1,93,1,103,1,107,1,117,1,184,2,185,1,186,1,187,1,224,1]
,"advantages":[36,1,125,1,147,1]
,"cluttered":[36,1]
,"(improved":[36,1]
,"maintainability)":[36,1]
,"strategies":[36,1,145,1,182,1,208,1]
,"per-cache":[36,1,143,1]
,"basis":[36,1,43,1,63,1,69,1,132,1,138,1,193,1]
,"(use":[36,1]
,"allows":[36,3,42,1,46,1,77,1,104,1,117,1,121,1,128,1,132,1,135,1,149,1,161,2,162,1,181,1,185,1,212,1,252,1,269,3]
,"solve":[36,1,57,1]
,"thundering-herd":[36,1]
,"disadvantage":[36,1]
,"visible":[36,1,61,1,68,1,274,1]
,"code-path":[36,1]
,"{cache.registercachewriter":[36,1]
,"mycachewriter":[36,2,77,2]
,"this.cache":[36,1]
,"selfpopulatingcache":[36,1,37,1,57,1,59,7,84,2,104,2,184,1]
,"(cache)":[36,1,101,1,107,1,108,1,271,1]
,"-notice":[36,2]
,"treated":[36,2,42,1]
,"*the":[36,4,79,1,80,2,86,2,91,2,95,1]
,"assumes":[36,1]
,"cache.get":[36,1,47,1,61,1,220,1,229,1]
,"(key)":[36,2,52,5,54,2,86,2,187,1,244,1,274,1]
,"cache\u0027s":[36,1,80,1,86,1,112,1,132,1,135,1,139,1,142,2,143,1,271,1]
,"\u002F***implement":[36,2]
,"cacheentryfactory":[36,2,37,1,59,1,84,1]
,"provide":[36,2,40,1,44,1,67,2,86,2,91,2,95,2,100,1,103,1,112,1,128,1,131,1,169,1,193,1,216,1,231,1,237,1,272,1,274,1,277,1]
,"*\u002Fprivate":[36,2,108,1]
,"mycacheentryfactory":[36,1]
,"implements":[36,2,132,1,148,1,187,1,216,2,244,7]
,"{public":[36,1]
,"createentry":[36,1]
,"(object":[36,1,54,8,86,1]
,"throws":[36,7,54,2,79,1,80,6,86,4,95,4,108,2,112,2,121,1,164,1,212,1,257,1]
,"readdatafromdatastore":[36,1]
,"cachewriter":[36,3,38,1,74,3,77,2,78,1,79,2,80,8]
,"interface":[36,1,37,1,38,1,44,1,45,1,72,1,80,3,84,1,86,3,89,1,91,1,93,1,95,2,100,2,103,1,110,1,112,2,117,2,187,1,215,2,244,2]
,"clone":[36,1,80,4,86,3,95,3,112,4]
,"clonenotsupportedexception":[36,2,80,3,86,3,95,3,112,3]
,"{throw":[36,1,121,3]
,"init":[36,1,80,1,86,2,108,2,112,1]
,"dispose":[36,1,80,2,86,3,95,1,112,2,173,2]
,"cacheexception":[36,5,68,1,79,2,80,5,86,4,95,3,98,1,108,2,112,3,121,5,164,1,240,1,271,1]
,"(element":[36,3,44,1,79,1,80,2,117,2,183,1,187,1,244,1]
,"element)":[36,1,44,1,79,1,80,1,95,5,116,1,139,1]
,"(element.getkey":[36,2]
,"writeall":[36,1,80,1]
,"(collection":[36,2,80,2,86,1]
,"<element>":[36,1,80,1]
,"elements)":[36,3,78,1,80,1,81,1]
,"{for":[36,2]
,"{write":[36,1]
,"delete":[36,1,74,1,78,1,80,3,150,1,265,1]
,"(cacheentry":[36,1,80,1]
,"entry)":[36,1,80,1]
,"{deletedatafromdatastore":[36,1]
,"deleteall":[36,1,78,1,80,1]
,"<cacheentry>":[36,1,80,1]
,"entries)":[36,1,80,1,142,1]
,"{delete":[36,1]
,"mimics":[37,1,38,1]
,"structure":[37,1,38,1]
,"instruct":[37,1]
,"wrap":[37,1]
,"execution":[38,1,39,1,44,1,80,1,108,1,145,1,182,1]
,"transaction":[38,2,39,4,40,2,60,1,61,3,63,6,64,4,65,9,66,4,67,6,68,17,69,5,71,6,72,8,74,5,80,1,148,2]
,"context":[38,1,61,1,121,1,125,1]
,"covered":[38,1]
,"scope":[38,1,39,1,143,1]
,"(including":[38,1,39,1]
,"settings)":[38,1,39,1]
,"timing":[39,1,110,1,112,1]
,"queues":[39,1,268,2]
,"later":[39,1,44,2,47,1,52,1,82,1,185,1]
,"consequences":[39,1]
,"often-times":[39,1]
,"commit":[39,1,40,1,48,1,61,3,64,1,68,3,71,1,74,2,217,4]
,"separate":[39,1,80,1,126,1,160,1,177,1,262,1,277,1]
,"copyonread":[40,2,128,1]
,"true":[40,2,43,4,44,1,54,4,66,1,72,1,77,7,78,3,116,1,117,1,121,2,127,1,128,2,138,2,147,1,148,2,150,7,152,1,154,2,160,2,180,1,193,2,196,1,205,1,207,6,211,1,212,1,229,1,230,1,231,3,246,4,262,1,271,4,274,1]
,"copyonwrite":[40,2,128,1]
,"copy-on-read":[40,1,62,1,64,1]
,"useful":[40,1,47,1,61,1,66,1,84,1,104,2,106,1,108,1,193,1]
,"can\u0027t":[40,1,54,2,266,1,274,1]
,"(and":[40,1,70,1,78,1,81,1,116,2,131,2,150,1,182,1]
,"holds)":[40,1]
,"model":[40,1,139,2]
,"isolate":[40,1]
,"done":[40,1,44,1,46,1,48,1,58,1,66,1,68,3,74,2,78,1,86,1,95,1,112,1,120,1,177,1,181,1,228,1,230,1,235,1,251,1,257,1,271,1,275,1]
,"lets":[40,1,68,1,185,1,186,1,235,1]
,"determine":[40,1,46,1,115,1,125,1]
,"exactly":[40,1,46,1,135,1,148,1,214,2,217,1,257,1]
,"(i.e":[40,1,122,1,136,1,193,1]
,"state":[40,3,44,1,48,3,68,1,80,1]
,"actually":[40,1,47,1,79,1,80,1,274,1]
,"mutations":[40,1]
,"reflected":[40,1,128,1]
,"proper":[40,1,54,2,67,1,82,1,126,1]
,"isolation":[40,1,53,1,61,1,62,1,64,1,68,2,208,2]
,"clear":[40,1,143,1,217,1]
,"boundaries":[40,1,74,1]
,"(the":[40,1,78,1,116,1,181,1,182,1,184,1,231,1,251,1]
,"standard":[40,1,64,1,65,1,67,1,120,1,121,1,160,1,161,1,243,1,244,1]
,"good":[40,1,181,1,212,1,229,1,251,1,271,1]
,"fast)":[40,1]
,"enough":[40,1,143,1,275,1]
,"copystrategy":[40,1,128,1]
,"easily":[40,1,74,1,125,1,181,1,185,1,203,1,235,1,242,1,246,1,252,1,271,1]
,"cloning":[40,1]
,"copies":[40,1,128,1,148,1]
,"references":[40,1,128,1,138,5]
,"searching":[41,1,42,1]
,"search":[42,9,43,5,44,11,46,1,47,3,48,6,49,3,193,1,211,1,235,1]
,"arbitrarily":[42,1]
,"complex":[42,1,44,1,45,1,120,1]
,"development":[42,1,169,1,230,2,240,1,264,1]
,"alternative":[42,1,51,1,59,1,72,2,131,1,160,1,227,1]
,"indexes":[42,1,48,1]
,"ability":[42,1,226,1]
,"looked":[42,1]
,"criteria":[42,1,45,3,47,2,48,1,49,4]
,"keys":[42,7,43,5,44,1,46,2,47,4,51,1,80,5,84,1,86,4,193,1,217,1,231,1,271,1,274,3]
,"indexing":[42,2,43,2,44,2,47,1]
,"practices":[42,1,46,1,47,1,239,1,240,1,268,2]
,"optimizing":[42,1,46,1,47,1,142,1]
,"searches":[42,2,44,1,46,1,47,4]
,"searchable":[42,6,43,8,44,12,47,1]
,"extracted":[42,1,44,3,46,1,222,1]
,"summary":[42,1,47,1,217,1]
,"(aggregators)":[42,1]
,"returned":[42,1,44,1,46,3,48,2,81,1,91,1,108,1,127,2,131,1,142,2,150,1,186,1,193,2,208,1,217,1,224,1]
,"32-year-old":[42,1]
,"males":[42,1]
,"=cache.createquery":[42,1,45,4,46,3]
,".includevalues":[42,2]
,".addcriteria":[42,2,45,4]
,"(age.eq":[42,1,45,2]
,"(32)":[42,1]
,".and":[42,1]
,"(gender.eq":[42,1,45,1]
,"male":[42,1,45,1]
,"\u0022)))":[42,1]
,".execute":[42,2,45,2]
,"formulate":[42,1]
,"\u002F\u002Fbigmemory":[42,1]
,"attribute":[42,1,43,2,44,25,45,5,46,7,63,1,78,3,127,2,131,1,132,3,134,1,138,2,143,2,148,3,152,2,177,2,229,1]
,"<integer>":[42,1,45,1]
,"age":[42,2,43,2,44,10,45,4,46,1]
,"=cache.getsearchattribute":[42,1,45,3,46,2]
,"person.createquery":[42,1]
,"(age.gt":[42,1]
,"(30))":[42,1]
,"prepared":[42,1,65,5]
,"index":[42,1,44,2,47,1,48,4,66,1,132,1,173,1,230,1]
,"extracting":[42,1]
,"themselves":[42,1,66,1,67,1,80,1,86,1,112,1]
,"<searchable\u002F>":[43,2]
,"tag":[43,1]
,"definition":[43,1,208,1]
,"<cache":[43,4,44,1,47,1,63,1,68,1,72,1,77,5,85,1,94,1,99,1,111,1,128,1,136,15,143,3,144,1,180,1,181,3,183,1,196,1,198,4,208,2,210,1,211,2,212,3,217,1,234,1,246,3,251,3,263,1]
,"name=\u0022":[43,6,44,7,47,1,63,1,68,1,77,5,128,1,136,20,143,3,144,1,160,1,180,1,181,3,183,1,196,1,198,4,206,4,207,5,208,2,210,1,211,2,212,3,216,1,220,2,234,1,244,15,246,9,251,3,263,1]
,"cache2":[43,1,44,1,136,4,143,1]
,"maxbyteslocalheap=\u0022":[43,1,136,9]
,"16m":[43,1]
,"eternal=\u0022":[43,2,44,1,63,1,126,1,128,1,144,1,180,1,181,1,183,1,196,1,198,5,210,1,211,2,212,3,234,2,246,4,251,1,263,1]
,"maxbyteslocaloffheap=\u0022":[43,2,136,7,143,1,231,1]
,"256m":[43,1,231,1]
,"<persistence":[43,2,44,1,126,1,149,2,181,1,198,5,210,1,211,2,212,3,234,1,246,1,251,1]
,"strategy=\u0022":[43,2,44,1,126,1,149,2,150,5,181,1,198,5,210,1,211,2,212,3,234,1,246,1,251,1]
,"localrestartable":[43,2,132,1,148,2,150,2,173,1,274,1]
,"\u0022\u002F>":[43,4,44,6,47,1,67,2,72,1,77,4,85,1,90,1,94,1,99,1,111,1,126,2,128,1,132,1,138,1,149,3,181,3,198,6,210,1,211,2,212,3,217,1,234,3,244,17,246,4,251,3,263,3,278,1]
,"<\u002Fcache>":[43,4,44,5,47,1,63,1,68,1,77,5,85,1,94,1,99,1,111,1,128,1,136,15,143,3,144,1,149,2,198,4,246,3,263,1]
,"scan":[43,1,45,1]
,"respectively":[43,1]
,"disable":[43,1,127,1,150,1,152,1,271,2]
,"cachename":[43,2,47,1,77,2,91,2,108,1,187,2,193,2,198,3,244,2,263,1]
,"<searchable":[43,2,47,1]
,"keys=\u0022":[43,1,47,1]
,"values=\u0022":[43,1,47,1]
,"<\u002Fsearchable>":[43,3,44,6,47,1]
,"mix":[43,1]
,"think":[43,1,59,1,68,1]
,"initialized":[43,1,44,1,80,1,86,1,95,2,112,1,185,1,274,1]
,"indicate":[43,1,95,1,169,2]
,"allowdynamicindexing":[43,1]
,"enable":[43,1,61,1,74,1,78,1,84,1,126,1,131,1,138,1,160,1,164,1,169,1,177,1,180,2,181,1,196,2,203,1,208,3,230,2,231,1,251,1,262,1,271,1,272,1]
,"extractor":[43,2,44,18]
,"defining":[43,2,44,1]
,"allowdynamicindexing=\u0022":[43,1]
,"extract":[43,1,44,2,86,1]
,"extractors":[43,1]
,"explained":[43,1,126,1,203,1]
,"detail":[43,1]
,"cache3":[43,1,136,4]
,"maxentrieslocalheap=\u0022":[43,1,44,1,63,1,126,1,128,1,136,1,143,1,180,1,181,4,183,1,196,1,198,5,210,1,211,2,212,3,234,2,246,4,251,4,263,1]
,"10000":[43,1,126,1,143,1,180,1,181,4,183,1,196,1,198,6,210,1,234,2,246,1,251,4]
,"10g":[43,1,136,5]
,"<searchable>":[43,1,44,6]
,"<searchattribute":[43,2,44,6]
,"class=\u0022":[43,1,44,2,67,2,77,3,85,1,90,1,94,1,99,1,106,1,111,1,128,1,181,1,211,1,220,2,234,1,244,6,246,1,251,1,263,4,278,1]
,"net.sf.ehcache.search":[43,1]
,"testattributeextractor":[43,1]
,"gender":[43,1,44,4,45,3,138,2]
,"expression=\u0022":[43,1,44,2]
,"value.getgender":[43,1]
,"cachemanagerconfig":[43,1,149,1]
,"cacheconfig":[43,1,149,1]
,"mycache":[43,3,143,1,144,4,149,1,274,1]
,"(true)":[43,1,44,2,77,2,128,2,212,2]
,"cacheconfig.addsearchable":[43,1]
,"(searchable)":[43,1,44,1]
,"searchable.addsearchattribute":[43,4]
,"searchattribute":[43,4]
,".name":[43,4,149,1]
,"\u002F\u002Fuse":[43,1]
,"expression":[43,1,44,5,45,3,139,1]
,"accessing":[43,1,48,1,179,1,187,1,244,1]
,"first_name":[43,1,44,1,230,1]
,".expression":[43,2]
,"value.getfirstname":[43,1]
,"last_name":[43,1,230,1]
,"value.getlastname":[43,1]
,"zip_code":[43,1]
,".classname":[43,1,77,1]
,"net.sf.ehcache.search.testattributeextractor":[43,1,44,2]
,"(cachemanagerconfig)":[43,1,149,1]
,"cachemanager.addcache":[43,1,271,1]
,"(cacheconfig))":[43,1]
,"=cachemanager.getehcache":[43,1,66,1,149,1]
,"\u002F\u002Fnow":[43,1,44,2]
,"learn":[43,1]
,"net.sf.ehcache.search*packages":[43,1]
,"http:\u002F\u002Fwww.ehcache.org\u002Fapidocs\u002F2.10.1\u002F":[43,1,46,1,47,1,79,1,125,1,126,1]
,"define":[44,1,193,1,277,1]
,"during":[44,1,64,1,65,1,71,1,80,1,86,2,95,1,112,1,135,1,145,1,147,1,148,1,149,1,157,1,182,1,217,2,243,1,275,1]
,"attributeextractors":[44,1]
,"boolean":[44,1,45,3,54,4,164,4,222,1,229,2]
,"character":[44,1]
,"double":[44,4,200,1]
,"float":[44,2]
,"integer":[44,3,134,1,237,1]
,"java.util.date":[44,1]
,"java.sql.date":[44,1]
,"enum":[44,2]
,"correspond":[44,1]
,"attributetype":[44,1]
,"http:\u002F\u002Fehcache.org\u002Fapidocs\u002F2.10.1\u002Fnet\u002Fsf\u002Fehcache\u002Fsearch\u002Fattribute\u002Fattributetype.html":[44,1]
,"matching":[44,1,198,1]
,"resolves":[44,1]
,"java.lang.double":[44,1]
,"interpreted":[44,1,230,1]
,"primitive":[44,1]
,"type=\u0022":[44,1,220,2]
,"wrong":[44,1,65,1]
,"attributeextractorexception":[44,1]
,"detected":[44,1,67,1,72,1,200,1,271,1]
,"validated":[44,1]
,"saved":[44,1,150,1]
,"established":[44,1]
,"changed":[44,2,86,1,91,1,112,1,125,1,132,2,185,2]
,"initially":[44,2]
,"well-known":[44,5,45,1]
,"referenced":[44,2,45,2,98,1,203,1]
,"predefined":[44,2,46,1]
,"and\u002For":[44,1,47,1,128,1,148,1,230,1]
,"convenience":[44,1,45,1,168,1]
,"constant":[44,2,230,1]
,"query.key":[44,2]
,"greater":[44,1,45,2,78,1,125,1,157,1]
,"readability":[44,1]
,"statically":[44,1]
,"import":[44,1,138,1,187,3]
,"query.value":[44,1]
,"reflection":[44,1]
,"reflectionattributeextractor":[44,2]
,"built-in":[44,1,47,1,104,1,108,1,116,1,138,1,162,1,192,1,230,1]
,"javabean":[44,2]
,"conventions":[44,1]
,"understands":[44,1]
,"property":[44,1,67,1,72,1,74,2,132,2,138,2,152,1,154,2,173,1,185,1,206,1,207,5,209,1,217,1,229,1,231,2,262,2,271,1]
,"declared":[44,1,45,1,138,1,227,1,235,1]
,"<cache>":[44,4,128,1,138,2,142,1,149,2,271,1]
,"method\u002Fvalue":[44,1]
,"dotted":[44,1]
,"chains":[44,1]
,"chain":[44,3,84,2,85,2,180,1,193,3,196,1,198,1]
,"starting":[44,1,126,1,240,2]
,"calls":[44,2,47,1,65,1,91,2,95,2,104,1,108,1,173,1,186,5,193,1,200,1,223,1,224,5,230,2,243,1,271,1]
,"field":[44,4,138,3,211,1]
,"freely":[44,1]
,"value.person.getage":[44,1]
,"element.tostring":[44,1]
,"portions":[44,1]
,"case-sensitive":[44,1]
,"custom":[44,3,51,1,72,1,132,1,230,1,274,1]
,"implementing":[44,1,84,1,86,1,91,1,95,1,100,1,112,1]
,"attributeextractor":[44,1]
,"interface\u0027s":[44,1]
,"attributefor":[44,1]
,"(\u2002)":[44,3,45,1,46,8]
,"previously":[44,3,79,1,147,1]
,"person":[44,4]
,"containing":[44,2,138,1]
,"none":[44,1,132,1,148,1,149,2,150,1,181,1,212,1,234,1,251,1,265,2,271,1]
,"passed":[44,1,46,1,54,2,74,1,80,1,82,1,84,1,86,2,106,1,177,1,230,2]
,"employee":[44,1]
,"returnval":[44,1]
,"=employee.getdept":[44,1]
,"pass":[44,1,243,1]
,"properties":[44,2,75,1,77,1,86,6,90,2,91,2,94,2,95,2,100,2,106,2,110,1,112,3,132,1,153,1,154,1,229,1,230,1]
,"properties=\u0022":[44,1,67,2,77,2,85,1,90,1,94,1,99,1,106,1,111,1,181,1,234,1,246,1,251,1,263,1,278,1]
,"foo=this":[44,1]
,"bar=that":[44,1]
,"etc=12":[44,1]
,"java.util.properties":[44,1]
,"dynamicattributesextractor":[44,7]
,"allowing":[44,1,145,1,182,1]
,"call":[44,2,46,1,49,1,68,1,72,1,86,1,91,3,95,1,100,1,104,1,108,1,110,1,112,1,116,4,131,4,171,1,173,3,185,1,220,1,222,1,229,1,230,2,269,2,271,4,278,1]
,"point":[44,1,66,1,82,1,131,1,138,1,164,1,256,1]
,"insertion":[44,1]
,"respective":[44,1]
,"every":[44,1,64,1,134,1,135,1,136,1,157,1,183,1,185,2]
,"ehcache.put":[44,1]
,"replace":[44,1,108,1]
,"invocation":[44,1]
,"register":[44,2,67,1,72,1,77,1,87,1,89,1,91,1,93,1,95,1,160,1,164,5,165,1,171,2,173,1,185,1]
,"config":[44,1,127,1,128,1,207,3,215,1,228,1,230,2,231,1,243,1,256,1,269,1,277,3]
,"config.setname":[44,1]
,"cachecfg":[44,1]
,"personcache":[44,2]
,"cachecfg.seteternal":[44,1]
,"cachecfg.terracotta":[44,1]
,"terracottaconfiguration":[44,1]
,".clustered":[44,1]
,"(true))":[44,1]
,".allowdynamicindexing":[44,1]
,"cachecfg.addsearchable":[44,1]
,"config.addcache":[44,1]
,"(cachecfg)":[44,1]
,"(config)":[44,1,128,1]
,"=cm.getcache":[44,1]
,"attrnames":[44,1]
,"={\u0022":[44,1]
,"\u002F\u002Fthe":[44,1]
,"known":[44,1,95,2,103,1,108,1,239,1,268,1]
,"fields":[44,2,95,2,138,2]
,"cache.registerdynamicattributesextractor":[44,1]
,"{map":[44,2]
,"<string":[44,3]
,"object>":[44,3]
,"attributesfor":[44,1]
,"attrs":[44,2]
,"hashmap":[44,1]
,"=(person)":[44,1]
,"element.getobjectvalue":[44,1]
,"\u002F\u002Ffor":[44,1]
,"fname":[44,1]
,"=value.getname":[44,1]
,"==null":[44,1]
,"value.getname":[44,1]
,"split":[44,1,78,1]
,"(\u0022\u005C\u005Cs":[44,1]
,"[0]":[44,2]
,"attrs.put":[44,2]
,"(attrnames":[44,2]
,"fname)":[44,1]
,"[1]":[44,1]
,"value.getage":[44,1]
,"john":[44,1]
,"doe":[44,1]
,"person.gender.male)))":[44,1]
,"newly":[44,1,64,1,274,1]
,"indexed":[44,2,47,1]
,"extracts":[44,1]
,"rules":[44,1,46,2,69,1,108,1,257,1]
,"indexable":[44,1]
,"registered":[44,2,64,1,65,1,84,1,100,3,164,3,165,1,173,2]
,"(this":[44,1]
,"prevent":[44,1,53,1,75,1,127,1,150,1,179,1,183,1,184,1]
,"potential":[44,1,70,1,71,1,74,1,89,1,90,1,91,1,93,1,94,1,95,1,209,1]
,"races":[44,1]
,"registration":[44,1,87,1,164,1]
,"incomplete":[44,1]
,"leading":[44,1,47,2]
,"erroneous":[44,1]
,"results.)":[44,1]
,"replaces":[44,1,160,1,216,1]
,"queried":[44,1]
,"regardless":[44,1,127,1,142,1]
,"initial":[44,2,121,3,139,1,230,1]
,"precedence":[44,1,143,1]
,"fluent":[45,1]
,"object-oriented":[45,1]
,"principles":[45,1]
,"domain-specific":[45,1]
,"(dsl)":[45,1]
,"familiar":[45,1]
,"programmers":[45,1]
,"(35))":[45,2]
,".includekeys":[45,2]
,".end":[45,2]
,"=query.execute":[45,1]
,"(query.key.eq":[45,1]
,"(query.value.lt":[45,1]
,"(10))":[45,1]
,"<string>":[45,2,46,2]
,"expressions":[45,5]
,"built":[45,1,72,1,108,1,145,1,182,1]
,"operators":[45,6]
,"<and>":[45,2]
,"<or>":[45,1]
,"comparison":[45,10,62,1,150,1]
,"<ge>":[45,1]
,"(>=)":[45,1]
,"<between>":[45,1]
,"<like>":[45,1]
,"addcriteria":[45,1,46,1]
,"clause":[45,2,46,12]
,"further":[45,1,77,1,173,2,216,1,223,1,249,1]
,"clauses":[45,1]
,"(age.le":[45,1]
,"(65))":[45,1]
,".add":[45,1]
,"criterion":[45,1]
,"operator":[45,13]
,"nest":[45,1]
,"within":[45,1,46,1,47,1,61,1,66,1,68,1,69,1,77,1,110,1,112,1,120,1,141,1,142,1,220,1,230,1,234,1,262,1]
,"=35":[45,1]
,"=female":[45,1]
,"query.addcriteria":[45,1]
,"(35)":[45,1]
,"gender.eq":[45,1]
,"(gender.female))":[45,1]
,"compound":[45,1,217,1]
,"nesting":[45,1]
,"complete":[45,1,46,1,58,1,66,1,68,1,79,1,193,1,278,1]
,"http:\u002F\u002Fwww.ehcache.org\u002Fapidocs\u002F2.10.1\u002Fnet\u002Fsf\u002Fehcache\u002Fsearch\u002Fexpression\u002Fpackage-summary.html":[45,1]
,"age.lt":[45,1]
,"(10)":[45,2]
,"shorthand":[45,2]
,"saying":[45,1]
,"lessthan":[45,2,47,1]
,"description":[45,1,134,1,179,1,229,1]
,"meaning":[45,8,47,1,90,1,94,1,126,1]
,"equalto":[45,1]
,"equals":[45,2,62,1]
,"condition":[45,2,70,1]
,"greaterthan":[45,1,47,1]
,"greaterthanorequal":[45,1,47,1]
,"equal":[45,2,135,1,186,2,224,2,265,1,274,1,275,1]
,"incollection":[45,1]
,"argument":[45,1,58,1,86,7,177,4,222,1,223,1,229,1]
,"lessthanorequal":[45,1,47,1]
,"ilike":[45,3,47,1]
,"regular":[45,1]
,"matcher":[45,1]
,"\u0022*\u0022":[45,1]
,"may":[45,1,59,1,74,2,80,2,86,1,91,1,93,2,95,3,98,1,100,2,112,1,117,1,126,1,136,1,138,3,141,1,142,2,144,1,148,1,183,3,184,1,193,2,205,1,217,1,227,1,247,1]
,"placing":[45,1]
,"wildcard":[45,1,47,3]
,"front":[45,1,184,2,235,2]
,"insensitive":[45,1]
,"isnull":[45,2,49,2]
,"notnull":[45,2,49,2]
,"notequalto":[45,1]
,"strings":[45,1,193,1]
,"case-insensitive":[45,1]
,"executed":[45,1,71,1,80,1,82,1,84,1,85,1,89,1,91,1,93,1,95,1,180,1,183,1,196,1,198,1,217,1]
,"modified":[45,1,127,1,145,1,182,1]
,"re-executed":[45,1]
,"end":[45,1,65,1,177,1,229,1]
,"organizing":[46,1]
,"350":[46,2]
,"included":[46,4,47,1,78,1,81,1,126,1,145,1,179,1,180,1,182,1,184,1,195,1,217,1,257,1]
,"aggregators":[46,7,48,3]
,"present":[46,1,78,1,80,1,184,1,216,1]
,"-when":[46,3]
,"includekeys":[46,2,47,3]
,"includevalues":[46,2,47,4]
,"(s)":[46,1,66,1,185,1]
,"includeattribute":[46,3,47,1]
,"getattribute":[46,1]
,"(attribute":[46,1]
,"<t>":[46,1]
,"attribute)":[46,1]
,"aggregator":[46,2,47,2]
,"-aggregator":[46,1]
,"summaries":[46,1]
,"computed":[46,1]
,"result.getaggregatorresults":[46,1]
,"order":[46,5,67,1,74,5,84,1,85,1,93,1,95,1,116,1,122,1,131,1,132,1,180,2,196,2,198,2,203,1,212,1,229,1,271,1]
,"query.includeaggregator":[46,2]
,"(\u005C<attribute\u005C>":[46,1]
,".\u005C<aggregator\u005C>)":[46,1]
,"find":[46,1,132,1,183,1,205,1,248,1]
,"sum":[46,1,48,1,142,1]
,"(age.sum":[46,1]
,"ordering":[46,3,51,1,74,3,93,1]
,"ordered":[46,1,47,1]
,"ascending":[46,2]
,"descending":[46,1]
,"addorderby":[46,1]
,"direction":[46,1]
,"ages":[46,1]
,"query.addorderby":[46,1]
,"(age":[46,1]
,"direction.ascending)":[46,1]
,"grouping":[46,3]
,"grouped":[46,4]
,"similarly":[46,1]
,"sql":[46,1,248,1]
,"group":[46,5]
,"statement":[46,1]
,"groupby":[46,11]
,"feature":[46,1,147,1,179,1,185,2,193,1]
,"according":[46,1,106,1,147,1,166,1,200,1]
,"addgroupby":[46,1]
,"department":[46,1]
,"location":[46,2,67,3,207,1,231,1]
,"dept":[46,3]
,"loc":[46,2]
,"q.includeattribute":[46,2]
,"(dept)":[46,2]
,"(loc)":[46,2]
,"q.addcriteria":[46,1]
,"(cache.getsearchattribute":[46,1]
,"salary":[46,1]
,".gt":[46,1]
,"(100000))":[46,1]
,"q.includeaggregator":[46,1]
,"(aggregators.count":[46,1]
,"q.addgroupby":[46,1]
,"(dept":[46,1]
,"loc)":[46,1]
,"groups":[46,2]
,"aggregate":[46,1]
,"functions":[46,1]
,"=singleresult.getattribute":[46,2]
,"step":[46,1,180,4,196,4,224,3]
,"(\u00A0)":[46,1]
,"semantics":[46,1,208,2]
,"least":[46,1,115,1,116,7,118,1,131,3,144,1,231,2,263,1,265,1,268,1]
,"aggregation":[46,1]
,"function":[46,1,47,1,139,2,184,1]
,"typically":[46,1,64,1,185,1,203,1,278,1]
,"anyway":[46,1]
,"processing":[46,1,68,1,91,1,95,1,145,1,182,1,184,1,193,1]
,"easier":[46,1,179,1,187,1,244,2]
,"prior":[46,1,126,1,203,2,216,2,236,1,266,1]
,"orderby":[46,1]
,"listed":[46,1,100,1,186,1,224,1]
,"limiting":[46,1,74,2,138,1]
,"unlimited":[46,1,143,1,235,1]
,"query.includekeys":[46,2]
,"query.execute":[46,2]
,"outofmemoryerror":[46,1]
,"maxresults":[46,2,47,3]
,"query.maxresults":[46,1,47,1]
,"(100)":[46,1]
,"discard":[46,1,116,1]
,"free":[46,1,95,1,132,1,141,2,166,1]
,"topics":[46,1,143,1]
,"relate":[46,1]
,"pagination":[46,1,47,1]
,"interrogating":[46,1]
,"interrogation":[46,1,87,1]
,"haskeys":[46,1]
,"hasvalues":[46,1]
,"hasattributes":[46,1]
,"hasaggregators":[46,1]
,"construct":[47,1]
,"logic":[47,1,49,1,51,2,269,1]
,"careful":[47,1,82,1,95,2,184,1]
,"burden":[47,1]
,"unnecessary":[47,1,132,1,184,1]
,"result.getvalue":[47,3]
,"consider":[47,4,182,1,184,1,193,1,243,1]
,"sufficient":[47,1,177,1]
,"demand":[47,1,75,1,104,1]
,"run":[47,1,66,1,78,1,125,1,142,1,157,1,173,1,177,1,186,1,217,1,224,1,227,1,230,2,239,1,256,2,257,1,266,2,268,1,275,1]
,"individual":[47,1,68,1,135,5,136,1,142,1,143,1]
,"lazy":[47,1,75,1]
,"deserialized":[47,1]
,"result.getkey":[47,1]
,"carefully":[47,1]
,"constructing":[47,1,104,1]
,"turn":[47,1,72,1,75,1,132,1,136,1,207,2,217,1,230,1,265,1,269,1]
,"quickly":[47,1,147,1]
,"receiving":[47,1,275,1]
,"(int":[47,1,68,2]
,"number_of_results)":[47,1]
,"statistic":[47,1]
,"count":[47,1,142,1]
,"net.sf.ehcache.search.aggregator":[47,1]
,"fuzzy":[47,1]
,"(wildcard)":[47,1]
,"longer":[47,1,48,1,68,1,95,1,127,2,142,2,143,1,216,1]
,"trailing":[47,2]
,"321*\u0022":[47,1]
,"\u0022*123":[47,1]
,"<searchattribute>":[47,1]
,"reversed":[47,1]
,"(startdate)":[47,1]
,"(enddate)":[47,1]
,"(between":[47,1]
,"(startdate":[47,1]
,"enddate))":[47,1]
,"dates":[47,1]
,"integers":[47,1]
,"save":[47,1,185,2]
,"conversion":[47,1,126,1]
,"concurrency":[48,3,208,2]
,"unlike":[48,1]
,"selectable":[48,1]
,"transactions":[48,2,51,2,61,8,63,1,64,5,65,1,66,2,68,9,69,2,71,1,72,1,74,3,217,1]
,"eventually":[48,1,70,1,74,1,132,1,143,1,148,1,185,1,193,1]
,"synchronously":[48,1,85,1,148,1]
,"lags":[48,1]
,"slightly":[48,1]
,"behind":[48,1,74,3,76,1,78,1,193,1,235,1]
,"performs":[48,1,68,1,200,1]
,"reflect":[48,1,274,1]
,"applied":[48,1,57,1,68,1,126,1,185,1,274,1]
,"unexpected":[48,1,125,1]
,"select":[48,1,64,1,117,1,212,1]
,"disagree":[48,1]
,"calculation":[48,3]
,"redoing":[48,1]
,"yourself":[48,1]
,"re-accessing":[48,1]
,"repeating":[48,1]
,"refers":[48,1]
,"reindexed":[48,1]
,"supplied":[48,1]
,"stale":[48,1,58,2,61,1,104,1,217,1]
,"non-null":[48,1,183,1]
,"tell":[48,1,179,1,230,1]
,"last":[48,1,80,1,82,3,131,1,148,3,173,2,230,1]
,"recommendations":[48,1]
,"executions":[48,1]
,"guards":[48,1,173,1]
,"working":[49,1,64,1,68,1,74,1,132,1,147,1,148,1,240,1,257,1,272,1]
,"nulls":[49,1,183,1]
,"presence":[49,1,240,1]
,"myquery.addcriteria":[49,3]
,"(cache.getattribute":[49,3]
,"middle_name":[49,5]
,".isnull":[49,2]
,"absence":[49,1]
,".notnull":[49,1]
,"equivalent":[49,2,147,1,207,1]
,".not":[49,1]
,"alternatively":[49,1,138,1,228,1]
,"explicit":[50,1,51,3,52,2,68,1,132,1,135,1,136,1,183,1]
,"locks":[51,1,53,1,65,1,69,1,70,2,148,2,217,1,265,1]
,"guaranteed":[51,1,74,2,75,1,93,1,95,1,205,1]
,"caution":[51,1,108,1]
,"deadlocks":[51,1,271,3]
,"123":[52,2]
,"foo":[52,2]
,"val":[52,1]
,"cache.acquirewritelockonkey":[52,2]
,"val))":[52,1]
,"{cache.releasewritelockonkey":[52,2]
,".sometime":[52,1]
,"{object":[52,1]
,"cachedval":[52,1]
,".getvalue":[52,1]
,"cachedval.setsomething":[52,1]
,"abc":[52,1]
,"cachedval))":[52,1]
,"lock":[53,9,54,16,59,1,95,1]
,"readers":[53,1,179,1,184,3]
,"acquiring":[53,1]
,"outstanding":[53,2,74,1]
,"queue":[53,2,66,1,74,5,78,8,80,2,81,4,145,2,182,2,185,9,275,1]
,"released":[53,1,216,1,268,1,271,1]
,"problems":[53,1,57,1,93,1,157,1,169,1,176,1,200,1,248,1]
,"block":[53,1,61,1,68,1,69,1,70,1,91,2,95,3,104,3,138,1,184,1,193,2,200,1]
,"acquire":[53,2]
,"akin":[53,1]
,"read_committed":[53,1,61,1,68,1]
,"achieved":[53,1,74,2,77,1,108,1,143,1]
,"\u002F***acquires":[54,2]
,"**@param":[54,8,80,4,86,4,87,2,91,2,95,4,100,2,108,1,117,3,121,1,164,1]
,"-the":[54,6,78,7,145,1,182,1,193,2]
,"retrieves":[54,6,243,1]
,"protect":[54,6,148,1]
,"via":[54,6,108,1,125,2,162,1,206,1,215,1,226,1,244,1]
,"*locking":[54,6]
,"acquirereadlockonkey":[54,1]
,"{this.acquirelockonkey":[54,2]
,"locktype.read)":[54,2]
,"acquirewritelockonkey":[54,1]
,"locktype.write)":[54,2]
,"\u002F***try":[54,2]
,"timeout":[54,4,58,1,68,3,69,1,193,2,208,1,212,1]
,"millis":[54,2]
,"*then":[54,2]
,"telling":[54,2]
,"didn\u0027t":[54,2]
,"*@param":[54,2,80,3,86,3,91,1,95,4,100,2,112,1,117,2,164,5]
,"-millis":[54,2]
,"giveup":[54,2]
,"*@return":[54,4,86,5,91,1,95,2,100,1,117,2,121,3]
,"awarded":[54,2]
,"*@throws":[54,2,79,3,80,1,86,3,95,1,108,1,112,1]
,"interruptedexception":[54,4]
,"tryreadlockonkey":[54,1]
,"timeout)":[54,4]
,"{sync":[54,2]
,"=getlockforkey":[54,2]
,"s.trylock":[54,2]
,"(locktype.read":[54,1]
,"trywritelockonkey":[54,1]
,"(locktype.write":[54,1]
,"\u002F***release":[54,2]
,"releasereadlockonkey":[54,1]
,"{releaselockonkey":[54,2]
,"releasewritelockonkey":[54,1]
,"\u002F***returns":[54,2,211,1]
,"*\u002Fboolean":[54,2,117,1]
,"isreadlockedbycurrentthread":[54,1]
,"iswritelockedbycurrentthread":[54,1]
,"noted":[55,1,138,1,147,1]
,"support":[55,1,60,1,61,3,64,2,65,1,72,1,80,2,86,1,95,1,145,1,177,1,180,1,182,1,193,1,196,1,207,1,216,4,217,2,222,1,227,1,230,2,259,2,262,2,269,1]
,"blocking":[56,1,57,1,58,2,104,1,110,1]
,"self":[56,1,110,1]
,"populating":[56,1,110,1]
,"self-populating":[57,1,104,2]
,"net.sf.ehcache.constructs":[57,1]
,"everyday":[57,1]
,"blockingcache":[57,1,58,3,59,2,104,3,107,2,108,7,184,2,193,1]
,"busy":[58,2]
,"site":[58,1,184,1,186,2]
,"users":[58,3,82,1,126,1,168,1,184,2,193,1,203,1,216,1]
,"evenly":[58,1]
,"tend":[58,1]
,"gravitate":[58,1]
,"minutes":[58,2,74,1,144,1,145,1,182,1]
,"collections":[58,1,74,1,208,1,211,3]
,"calculate":[58,1]
,"asks":[58,1]
,"lot":[58,1,177,1]
,"contending":[58,1]
,"ten":[58,2,117,1,145,1,157,1,268,1]
,"upstream":[58,1,193,3]
,"jsp":[58,1]
,"velocity":[58,1]
,"interactions":[58,1]
,"service":[58,1,164,1,181,1,203,1,252,1]
,"layer":[58,1,230,1,242,1,243,2]
,"doing":[58,1,59,1,80,1,86,1,89,1,90,1,91,1,93,1,94,1,95,1,108,1,112,1,135,1,193,1,209,1,230,1,266,1,278,1]
,"enter":[58,1,59,1,230,1]
,"requesting":[58,1,184,1,193,1]
,"wait":[58,2,78,3,193,5,278,1]
,"obtain":[58,1,101,1]
,"indefinitely":[58,1,141,1,193,2,200,1]
,"timeoutmillis":[58,1]
,"complicated":[59,1]
,"thinking":[59,1]
,"synonymous":[59,1]
,"pull-through":[59,1,84,1]
,"populate":[59,1,230,2]
,"inspired":[59,1]
,"getwithloader":[59,1,84,1]
,"getallwithloader":[59,1,84,1]
,"cacheloader":[59,1,75,2,84,7,85,1,86,15,87,3,235,1]
,"2.0":[61,1,127,1,203,2,216,5,255,1,265,1,274,1]
,"2.3.x":[61,1]
,"lower":[61,1,131,1,137,1,141,3,203,1,231,1,274,1]
,"releases":[61,1]
,"2.4":[61,1,277,1]
,"global":[61,1,64,4]
,"xa_strict":[61,2,63,3,64,1,65,2,69,4,72,1]
,"nothing":[61,1,135,1,157,1,177,1,183,1,257,1,272,1]
,"happen":[61,1,148,1,177,1,217,1]
,"transactionexception":[61,1,68,2]
,"visibility":[61,1,125,1]
,"offered":[61,1]
,"xaresource":[61,1,64,1,65,1,71,1,72,1,74,1]
,"two-phase":[61,2,64,1,217,3]
,"specifically":[61,1]
,"mutating":[61,2,65,1]
,"transactional":[61,3,62,3,63,2,69,1,70,2,71,1,72,3,217,3]
,"putwithwriter":[61,1,79,1]
,"removewithwriter":[61,1]
,"removeall":[61,1,177,1,223,1]
,"old":[61,1,216,3]
,"atomically":[61,2]
,"committed":[61,1,65,2,74,1,200,1,208,1]
,"rolled":[61,1,65,2,66,1,71,1]
,"straightforward":[61,1,145,1,182,1]
,"calculated":[61,1]
,"dbms":[61,1]
,"jms":[61,1,185,1,269,1]
,"jta":[61,1,64,2,65,4,66,1,74,1]
,"participating":[61,2,266,1]
,"crash":[61,2,65,3,147,2,148,3]
,"afford":[61,1,182,1]
,"brief":[61,1]
,"period":[61,1,68,1,180,2,185,1,195,2]
,"similar":[61,1,84,1,145,1,182,1,210,1,231,1]
,"strict":[61,1,72,1,269,1]
,"disaster":[61,1]
,"recovery":[61,1,65,5,147,1,148,1]
,"guarantees":[61,1,69,1,74,1]
,"extra":[61,1,103,1,148,1,216,1,266,1,274,1]
,"safety":[61,1,89,1,90,1,91,1,93,2,94,1,95,1]
,"decreases":[61,1]
,"java.io.serializable":[62,1]
,"\u002Fcopy-on-write":[62,1]
,"override":[62,1,68,1,84,1,137,1,143,1,193,2,257,1,277,1]
,"hashcode":[62,1]
,"overridden":[62,1,108,2]
,"rely":[62,1]
,"elementvaluecomparator":[62,2]
,"cache-by-cache":[63,1]
,"transactionalmode":[63,1]
,"xacache":[63,1,66,1]
,"500":[63,1]
,"timetoidleseconds=\u0022":[63,1,126,1,128,1,144,1,180,1,181,3,183,1,196,1,198,4,210,1,234,2,246,2,251,3,263,1]
,"timetoliveseconds=\u0022":[63,1,126,1,128,1,144,1,180,1,181,1,183,1,196,1,198,5,210,1,211,2,212,2,234,2,246,2,251,1,263,1]
,"600":[63,1,180,1,183,1,196,1,210,1,211,2,234,1]
,"diskexpirythreadintervalseconds=\u0022":[63,1,126,1]
,"transactionalmode=\u0022":[63,1,68,1,69,1]
,"@transactional":[63,1,66,1]
,"spring-annotated":[63,1]
,"begin\u002Fcommit\u002Frollback":[63,1]
,"statements":[63,1,169,1]
,"internally":[63,1,271,1]
,"inject":[63,1,243,1]
,"chosen":[63,2,138,1,143,1]
,"spring\u0027s":[63,1,244,1]
,"platformtransactionmanager":[63,1,72,1]
,"lookup":[63,2,64,1,67,2,240,1]
,"able":[63,1,80,1,86,1,112,1,180,1,195,1]
,"detect":[63,2,271,1]
,"websphere":[63,2,72,3,269,2]
,"managers":[63,2,67,3]
,"<tx:method>":[63,1]
,"read-only=true":[63,1]
,"problematic":[63,1,173,1,217,1]
,"act":[64,1,82,1,212,1]
,"{xaresouce}":[64,1]
,"participate":[64,1,71,1,79,1,80,1]
,"third":[64,1,136,1]
,"party":[64,1]
,"bitronix":[64,1,67,1]
,"xatransactionstore":[64,1]
,"jtalocaltransactionstore":[64,1]
,"former":[64,1]
,"decorates":[64,2]
,"underlying":[64,1,74,6,78,2,80,8,98,1,108,2,139,1,212,2,217,1,230,1,274,1]
,"augmenting":[64,1]
,"<xaresouce>":[64,1]
,"latter":[64,1,131,1]
,"localtransactionstore-decorated":[64,1]
,"controllable":[64,1]
,"proprietary":[64,1]
,"transactioncontroller":[64,1,68,2]
,"initialization":[64,1,86,1]
,"transactionmanagerlookup":[64,1]
,"transactionmanagerlookup.register":[64,1]
,"(xaresouce)":[64,1]
,"copy-on-write":[64,1]
,"failure":[65,1,74,1,80,2,98,1,147,1,193,3]
,"specification":[65,1,200,1,230,1]
,"recoverable":[65,1]
,"persisted":[65,1,143,1,148,1,185,1]
,"onto":[65,1,145,1,182,1,269,1]
,"non-clustered":[65,1]
,"reported":[65,1,177,1,269,1]
,"something":[65,1,208,1]
,"went":[65,1]
,"asked":[65,1]
,"recover":[65,2,139,1]
,"guarantee":[65,1,71,1,208,1]
,"differs":[65,1]
,"{xaresource}":[65,1]
,"merely":[65,1]
,"follow":[65,1,84,1,96,1,180,1,186,1,196,1,224,1,231,1,243,1]
,"flow":[65,1]
,"registering":[65,1,110,1,112,1,164,1,177,1]
,"{synchronization}":[65,1]
,"inconsistent":[65,1,74,2,75,1,80,1,150,1,243,1]
,"inconsistency":[65,1,74,2,75,1]
,"(such":[65,1,143,1]
,"databases)":[65,1]
,"remains":[65,1,144,1,217,1]
,"fully":[65,1,76,1,79,1,90,1,94,1,121,1,138,1,147,1,148,1,210,1,211,1]
,"responds":[65,1]
,"manager\u0027s":[65,1]
,"xids":[65,1]
,"failed":[65,1,80,3,82,3]
,"branches":[65,1]
,"showing":[66,1,271,1]
,"variety":[66,1,84,1]
,"jboss":[66,1,67,1]
,"people":[66,1]
,"ejb":[66,1,257,3,269,1]
,"container":[66,2,257,2]
,"demonstration":[66,1]
,"snippet":[66,1]
,"simpletx":[66,1]
,"usertransaction":[66,1]
,"=getusertransaction":[66,1]
,"printline":[66,2]
,"(servletresponse":[66,4]
,"hello":[66,1]
,"{ut.begin":[66,1]
,"=servicewithintx":[66,1]
,"bye":[66,1]
,"index)":[66,1]
,"ut.commit":[66,1]
,"catch":[66,1,68,1,121,4]
,"(exception":[66,1]
,"{printline":[66,1]
,"caught":[66,1,100,1]
,"e.getclass":[66,1]
,"rolling":[66,1]
,"printstacktrace)":[66,1]
,"{printwriter":[66,1]
,"=servletresponse.getwriter":[66,1]
,"e.printstacktrace":[66,1]
,"s.flush":[66,1]
,"rollbacktransaction":[66,1]
,"(ut)":[66,1]
,"forge":[66,2]
,"readme":[66,2]
,"explains":[66,2,185,1,186,1]
,"banking":[66,1]
,"represents":[66,1]
,"real-world":[66,1]
,"<account":[66,1]
,"transfer>":[66,1]
,"messages":[66,1,145,2,169,4,177,1,182,2,217,1,272,2,275,3]
,"tries":[66,1]
,"transfers":[66,1]
,"failures":[66,1,132,1]
,"balance":[66,2]
,"summed":[66,1]
,"spring-based":[66,1]
,"jetty":[66,1,269,1]
,"(embedded)":[66,1]
,"broker":[66,1]
,"(activemq)":[66,1]
,"(embedded":[66,1]
,"derby":[66,1]
,"instances)":[66,1]
,"(transactional":[66,1]
,"ehcache)":[66,1]
,"atomikos":[66,1,67,1,72,3]
,"demarcation":[66,1]
,"aop\u0027s":[66,1]
,"annotation":[66,1,138,4,186,1,208,1,223,2,224,1]
,"mvn":[66,2]
,"clean":[66,2,80,1,86,1,150,1,265,1]
,"jetty:run":[66,2]
,"browser":[66,1,193,6,230,1,256,1]
,"http:\u002F\u002Flocalhost:9080":[66,1,256,1]
,"-dxa=no":[66,1]
,"detects":[67,1,173,1]
,"genericjndi":[67,1]
,"(e.g":[67,1,117,1,215,1,230,2]
,"glassfish":[67,2,254,1,255,4,256,2,257,7,269,1]
,"jtom":[67,1]
,"others":[67,1,78,1,235,1]
,"jndi":[67,2,72,1]
,"java:\u002Ftransactionmanager":[67,1]
,"weblogic":[67,1,72,3]
,"(since":[67,1,217,1]
,"2.4.0)":[67,1]
,"out-of-the-box":[67,1]
,"priority":[67,1,143,2]
,"net.sf.ehcache.transaction.manager.transactionmanagerlookup":[67,1]
,"defaulttransactionmanagerlookup":[67,2]
,"<transactionmanagerlookup":[67,2]
,"com.mycompany.transaction.manager.mytransactionmanagerlookupclass":[67,1]
,"propertyseparator=\u0022":[67,2,77,2]
,"jndiname":[67,1]
,"net.sf.ehcache.transaction.manager.defaulttransactionmanagerlookup":[67,1]
,"jndiname=java:appserver\u002Ftransactionmanager":[67,1]
,"single-phase":[68,1]
,"cachemanager.this":[68,1]
,"manually":[68,1,72,1,82,1]
,"handle":[68,1,89,1,90,1,91,1,93,1,94,1,95,1,100,1]
,"rollback":[68,2,74,1,80,1]
,"cachemanager.gettransactioncontroller":[68,2]
,"transactioncontroller.begin":[68,2]
,"-this":[68,1]
,"marks":[68,1,217,1]
,"transactioncontroller.commit":[68,1]
,"-commits":[68,1]
,"transactioncontroller.rollback":[68,2]
,"-rolls":[68,1]
,"begin":[68,3]
,"try-catch":[68,1]
,"catches":[68,1]
,"exceptions":[68,2,82,1,98,1,100,1,199,1,200,1]
,"subclasses":[68,1,138,1]
,"transactioninterruptedexception":[68,1]
,"thread.interrupt":[68,1]
,"transactiontimeoutexception":[68,2]
,"elapsed":[68,1]
,"introductory":[68,2,74,2]
,"video":[68,2,74,2]
,"ludovic":[68,1]
,"orban":[68,1]
,"author":[68,1,74,1,220,3]
,"presents":[68,1,74,1,149,1]
,"samplecache":[68,1,127,2]
,"timeouts":[68,1,70,1,212,1]
,"seconds":[68,2,78,2,127,2,132,1,142,2,148,1,157,3,220,3,265,2]
,"defaulttimeout":[68,1]
,"transactioncontroller.setdefaulttransactiontimeout":[68,1]
,"defaulttransactiontimeoutseconds)":[68,1]
,"countdown":[68,1]
,"starts":[68,1,139,1,147,1,229,1,240,1]
,"jdbc":[68,1,241,1,242,3,243,1]
,"connection":[68,1,162,1,269,4]
,"transactiontimeoutseconds)":[68,1]
,"{sample":[68,1]
,"{cachemanager.gettransactioncontroller":[68,2]
,".begin":[68,1]
,"cache1.put":[68,1]
,"cache2.put":[68,1]
,"cache1.remove":[68,1]
,"(4)":[68,1]
,".commit":[68,1]
,"(cacheexception":[68,1]
,".rollback":[68,1]
,"contention":[69,1,74,1,265,1]
,"completes":[69,1,104,1,217,1]
,"involved":[69,1]
,"replaced":[69,1,74,1,274,1]
,"marker":[69,1]
,"locked":[69,1,217,2]
,"along":[69,1,106,1,121,1,145,1,168,1,176,1,182,1,237,1,240,1]
,"granularity":[69,1]
,"soft":[69,1,148,2,217,1]
,"comparisons":[69,1]
,"nearly":[69,1]
,"negligible":[69,1]
,"noticeably":[69,1]
,"slowest":[69,1]
,"-no":[69,2]
,"-20":[69,2]
,"-30":[69,2]
,"regularly":[70,1]
,"force":[70,1,144,1,183,1,206,2,217,1]
,"whenever":[70,1,80,1,185,1,217,2,240,1]
,"deadlock":[70,2,91,4,95,1]
,"deadlocked":[70,1]
,"exception)":[70,1,80,2,100,1]
,"stuck":[70,1]
,"transaction-enabled":[71,1]
,"writer":[71,2,77,4,79,1,80,5,82,2,185,2]
,"queued":[71,1]
,"solely":[71,1]
,"probably":[71,1,117,1,239,1,243,1]
,"non-xa":[71,1]
,"succeed":[71,1,72,2]
,"hand":[71,1,166,1]
,"having":[71,1,90,1,94,1,108,2,142,1,180,1,195,1,233,1,268,1,275,1]
,"usertransaction.commit":[71,1]
,"rollbackexception":[71,1]
,"ibm":[72,1]
,"due":[72,1,75,1,139,1]
,"stable":[72,1]
,"transactionmanager":[72,1]
,"callbacks":[72,1,89,1,90,1,93,1,94,1]
,"sure":[72,1,75,1,177,1,183,1,234,1,240,1,257,1,269,1]
,"correctly":[72,1,138,1,240,1,247,1]
,"respect":[72,1]
,"confirm":[72,1]
,"com.ibm.websphere.jtaextensions.synchronizationcallback":[72,1]
,"com.ibm.websphere.jtaextensions.extendedjtatransaction":[72,2]
,"java:comp\u002Fwebsphere\u002Fextendedjtatransaction":[72,1]
,"cast":[72,1]
,"registersynchronizationcallbackforcurrenttran":[72,1]
,"net.sf.ehcache.hibernate.ehcacheregionfactory":[72,1,206,1,207,5,216,1,217,1]
,"entities":[72,1,203,1,208,2,217,3,243,1]
,"usage=\u0022":[72,1,208,2,211,1,217,1]
,"optimization":[72,2,143,1,274,1]
,"spawns":[72,1]
,"parallel":[72,1]
,"parallel-xa-enabled":[72,1]
,"<jta>":[72,1]
,"<checkpoint-interval-seconds>":[72,1]
,"<\u002Fcheckpoint-interval-seconds>":[72,1]
,"<parallel-xa-enabled>":[72,1]
,"<\u002Fparallel-xa-enabled>":[72,1]
,"<unregister-resource-grace-period>":[72,1]
,"<\u002Funregister-resource-grace-period>":[72,1]
,"<\u002Fjta>":[72,1]
,"<\u002Fp>":[72,1]
,"bug":[72,1,268,3]
,"makes":[72,1,74,1,86,2,116,1,117,1,132,2,208,1,226,1]
,"mode\u0027s":[72,1]
,"normal":[72,1,108,1,169,1,177,1,185,1,217,1,272,1]
,"termination":[72,3]
,"unreliable":[72,1]
,"net.sf.ehcache.transaction.xa.alternativeterminationmode":[72,1]
,"controlling":[72,1]
,"atomikos\u2019s":[72,1]
,"unless":[72,1,143,2,169,1,244,1]
,"com.atomikos.icatch.threaded_2pc=false":[72,1]
,"facade":[74,2,168,1]
,"sense":[74,1,86,2]
,"client":[74,1,144,1,185,1,274,5]
,"asynchronously":[74,1,85,1,150,1,185,1,265,1]
,"web-service":[74,1]
,"clients":[74,1,101,1,104,1,193,1,274,3]
,"underlie":[74,1]
,"simplify":[74,1,187,1]
,"discussion":[74,1,180,1,182,1,183,1,184,1,185,1,186,1,187,1]
,"major":[74,1]
,"offload":[74,1,148,1,179,1,185,1]
,"shifting":[74,1]
,"-moving":[74,1]
,"interval":[74,1,132,1]
,"batched":[74,1,78,1]
,"overnight":[74,1]
,"past":[74,1]
,"hour":[74,1,144,1]
,"periods":[74,1,131,1]
,"peak":[74,2]
,"-spreading":[74,1]
,"flatten":[74,1,185,1]
,"peaks":[74,1,185,1]
,"point-of-sale":[74,1]
,"(pos)":[74,1]
,"end-of-day":[74,1]
,"procedure":[74,1]
,"central":[74,1]
,"pos":[74,1]
,"zone":[74,1]
,"tps":[74,1]
,"whittle":[74,1]
,"hours":[74,1]
,"conflation":[74,2]
,"-consolidate":[74,1]
,"row":[74,1,217,1]
,"incrementing":[74,1]
,"weighed":[74,1]
,"constraints":[74,1,131,1,143,1,144,1]
,"imposed":[74,1,235,1]
,"&constraints":[74,1]
,"participates":[74,1]
,"boundary":[74,2]
,"risk":[74,1]
,"eventual":[74,1,150,1]
,"retry":[74,1,80,1,82,1]
,"counts":[74,1]
,"delays":[74,2]
,"compensating":[74,1]
,"delay":[74,2]
,"obvious":[74,1]
,"implication":[74,1]
,"introduces":[74,1,108,2]
,"correct":[74,1,164,1,227,1]
,"snapshot":[74,1]
,"incorrect":[74,1]
,"loaded":[74,1,75,1,86,1,121,3,125,1,126,1,147,1,184,1,185,2,217,1]
,"tolerant":[74,4,75,1,148,1]
,"appends":[74,1]
,"corrupted":[74,1,174,1]
,"news":[74,1,184,4]
,"reader":[74,1]
,"displays":[74,1]
,"articles":[74,1]
,"synchronization":[74,1,145,1,182,1,216,2]
,"ideally":[74,1]
,"synchronized":[74,1,91,5,108,1]
,"timestamp":[74,2,116,1,131,2]
,"clock":[74,1]
,"synchronize":[74,1,145,1,182,1]
,"authority":[74,1]
,"protocol":[74,1,240,1]
,"isn\u0027t":[74,1]
,"processed":[74,2,78,1,81,2,193,1]
,"batching":[74,1,78,2,80,1]
,"aggregated":[74,1]
,"separately":[74,1]
,"inside":[74,1,177,2]
,"reordering":[74,1]
,"compensate":[74,1]
,"versioning":[74,1,262,2]
,"auto-versioning":[74,4,262,5]
,"unclustered":[74,1,262,1]
,"net.sf.ehcache.element.version.auto":[74,1,262,1]
,"(it":[74,1,139,1,248,1,262,1]
,"default)":[74,1,262,1]
,"turned":[74,1,262,1]
,"ineligible":[74,1,262,1]
,"silently":[74,1,154,1,200,1,262,1]
,"fail":[74,1,193,2,217,1,262,1]
,"verifications":[74,1]
,"scheduled":[74,1,275,1]
,"relevant":[74,1,244,1]
,"alex":[74,1,212,1]
,"snaps":[74,1]
,"combined":[75,1,135,1,193,1,242,2]
,"simplest":[75,2,108,1,145,1,182,1]
,"considered":[75,1,100,1]
,"startup":[75,1,117,1,125,1,127,1,132,1,135,1,174,1]
,"populated":[75,1,184,1,186,1,209,1,214,1,224,1]
,"lazily":[75,1]
,"partial":[75,1,80,2]
,"dataset":[75,4]
,"fall":[75,1]
,"occurred":[75,1,79,1,93,1,95,1,100,1,169,1]
,"places":[75,1]
,"implications":[75,1]
,"flushing":[75,2,137,1,141,1,142,1,144,1,181,1,252,1]
,"exceeded":[75,1,138,1,142,1,143,1]
,"evicted":[75,1,95,1,115,4,116,5,131,2,132,2,141,2,142,1,143,7,144,1,217,1,265,2]
,"consequently":[75,1,142,1]
,"timetolive":[75,1,93,1,95,1,127,2,145,1,182,1,229,1]
,"timetoidle":[75,1,93,1,95,1,127,2,145,1,182,1,229,1]
,"raffle":[76,2]
,"demonstrates":[76,2,95,2,220,1,244,1]
,"writers":[76,1,80,1]
,"loaders":[76,1,83,1,84,3,85,1,86,2,87,2,240,1]
,"github.com":[76,1]
,"cachewriterconfiguration":[77,2]
,"writethroughcache1":[77,1]
,"<cachewriter":[77,4]
,"writemode=\u0022":[77,4]
,"maxwritedelay=\u0022":[77,4]
,"ratelimitpersecond=\u0022":[77,4]
,"writecoalescing=\u0022":[77,4]
,"writebatching=\u0022":[77,4]
,"writebatchsize=\u0022":[77,4]
,"retryattempts=\u0022":[77,4]
,"retryattemptdelayseconds=\u0022":[77,4]
,"<cachewriterfactory":[77,3]
,"com.company.mycachewriterfactory":[77,2]
,"just.some.property=test":[77,3]
,"another.property=test2":[77,3]
,"<\u002Fcachewriter>":[77,3]
,"writethroughcache2":[77,1]
,"<cachewriter\u002F>":[77,1]
,"writethroughcache3":[77,1]
,"notifylistenersonexception=\u0022":[77,3]
,"writethroughcache4":[77,1]
,"net.sf.ehcache.writer.writethroughtestcachewriterfactory":[77,2]
,"writebehindcache5":[77,1]
,"10)":[77,1,128,1]
,".cachewriter":[77,1]
,".writemode":[77,1]
,"(cachewriterconfiguration.writemode.write-behind)":[77,1]
,".maxwritedelay":[77,1]
,"(8)":[77,1]
,".ratelimitpersecond":[77,1]
,"(5)":[77,1]
,".writecoalescing":[77,1]
,".writebatching":[77,1]
,".writebatchsize":[77,1]
,"(20)":[77,1]
,".retryattempts":[77,1]
,"(2)":[77,2]
,".retryattemptdelayseconds":[77,1]
,".cachewriterfactory":[77,1]
,"cachewriterconfiguration.cachewriterfactoryconfiguration":[77,1]
,".properties":[77,1]
,".propertyseparator":[77,1]
,"\u0022))))":[77,1]
,"relying":[77,1]
,"cachewriterfactoryconfiguration":[77,1]
,"handles":[77,1,80,1]
,"(jdbcconnection)":[77,1]
,"cache.registercachewriter":[77,1]
,"(writer)":[77,1]
,"cachewriterfactory":[78,2,80,1,185,3]
,"write-mode":[78,1]
,"[write-through":[78,1]
,"write-behind]":[78,1]
,"-whether":[78,4]
,"notifylistenersonexception":[78,1]
,"notify":[78,1,95,1]
,"writebehindmaxqueuesize":[78,1]
,"bucket":[78,2]
,"buckets)":[78,1,81,1]
,"unbounded":[78,1,115,1]
,"(default)":[78,1,131,1,138,1]
,"size)":[78,1]
,"checked":[78,1,95,1,125,1,131,1,135,1]
,"blocked":[78,1]
,"drops":[78,1,216,1]
,"batch":[78,5,80,2,81,1]
,"coalesced":[78,1,81,1]
,"net.sf.ehcache.config.cachewriterconfiguration.setwritebehindmaxqueuesize":[78,1]
,"writebehindconcurrency":[78,1]
,"thread-bucket":[78,2]
,"(default":[78,1,106,1]
,"ratelimitpersecond":[78,2]
,"pair":[78,1]
,"writebehindconcurrency=\u0022":[78,1]
,"400":[78,1]
,"net.sf.ehcache.config.cachewriterconfiguration.setwritebehindconcurrency":[78,1]
,"maxwritedelayseconds":[78,1]
,"permits":[78,1,125,1]
,"build":[78,1,203,1,205,2,265,1]
,"coalescing":[78,2]
,"optimizations":[78,1,274,1]
,"writecoalescing":[78,1]
,"latest":[78,1,152,1,185,1,204,1,208,1,227,1]
,"redundant)":[78,1]
,"writebatching":[78,1]
,"storeall":[78,1]
,"efficiently":[78,1]
,"writebatchsize":[78,1]
,"length":[78,1,81,1]
,"deletes":[78,2]
,"invoked":[78,1,84,1,177,1,181,1,223,1,252,1]
,"retryattempts":[78,1]
,"retryattemptdelayseconds":[78,1]
,"retrying":[78,1]
,"cacheloaders":[79,1,84,4,86,1]
,"exposed":[79,2]
,"cache.getwithloader":[79,1,235,1]
,"cachewriters":[79,1]
,"cache.putwithwriter":[79,2]
,"cache.removewithwriter":[79,1]
,"signature":[79,1]
,"\u002F***put":[79,1]
,"*has":[79,1,112,1]
,"effect":[79,1,95,2,131,1,132,1,231,1,262,1,266,1]
,"*cache.put":[79,1]
,"**resets":[79,1]
,"*it":[79,1,108,1,112,1,117,2,150,1]
,"gotten":[79,1]
,"**also":[79,1]
,"notifies":[79,1]
,"cacheeventlistener":[79,1,91,2,93,1,94,1,95,5,110,1,112,1,173,1,177,1,235,3]
,"succeeds":[79,1]
,"**-the":[79,1]
,"*-if":[79,1]
,"***@param":[79,1,95,1]
,"*replication":[79,1,266,1]
,"illegalstateexception":[79,2,193,1,257,2]
,"*{@link":[79,1,80,2,86,1,91,2,95,3,100,1,108,1]
,"net.sf.ehcache.status":[79,1,91,2,100,1]
,"status_alive}":[79,1,91,1,100,1]
,"illegalargumentexception":[79,2]
,"*\u002Fvoid":[79,1,80,7,86,2,91,2,95,5,100,1,112,2]
,"spi":[80,2,216,11]
,"implementers":[80,1,82,1,86,2,89,1,91,2,93,1,95,6,100,1,112,2]
,"\u002F***a":[80,1,100,1]
,"*to":[80,5,86,1,112,1]
,"*<p\u002F>":[80,8,100,1]
,"*if":[80,2,95,1,108,2]
,"cachewriter\u0027s":[80,1]
,"*operation":[80,3]
,"*and":[80,1,86,1,95,1]
,"*<p>":[80,3]
,"*implementers":[80,1,91,1]
,"storing":[80,1]
,"*deleting":[80,1]
,"*<\u002Fp>":[80,1]
,"*<h4>":[80,3]
,"<\u002Fh4>":[80,3]
,"*in":[80,3,95,1]
,"cacheeventlisteners":[80,1,127,1]
,"notified":[80,1,90,1,93,1,95,1,164,1]
,"*write":[80,1]
,"fails":[80,3,200,1]
,"event":[80,1,88,1,89,3,90,1,91,3,92,1,93,2,94,2,95,4,143,1,157,1,169,1,173,1,193,2,263,3]
,"*written":[80,1]
,"configurable":[80,1,115,1,132,1,142,1,212,1]
,"*way":[80,1]
,"highly":[80,1,104,1,184,1,192,1]
,"*cachewriters":[80,1]
,"manner":[80,1]
,"determined":[80,1,266,1]
,"net.sf.ehcache.config.cachewriterconfiguration}":[80,1]
,"*for":[80,1,108,1,112,1]
,"*see":[80,1,112,1]
,"chapter":[80,1]
,"*how":[80,1]
,"**@author":[80,1]
,"greg":[80,1,86,2,217,2,220,1]
,"luck":[80,1,86,2,217,2,220,1]
,"*@author":[80,1,86,2]
,"geert":[80,1]
,"bevin":[80,1]
,"*@version":[80,1]
,"$id":[80,1]
,"$*\u002Fpublic":[80,1]
,"{\u002F***creates":[80,1,86,1]
,"*ehcache":[80,1,112,1]
,"*implementations":[80,1,95,1]
,"*support":[80,1,112,1]
,"stop":[80,1,86,1,112,1,256,1,271,1,275,1]
,"**@return":[80,1,86,2,112,1]
,"extension":[80,1,86,4,111,1,112,7]
,"cloned":[80,1,86,1,95,1,112,1]
,"\u002F***notifies":[80,1,86,1]
,"initialise":[80,2,86,2,87,1,112,2]
,"*this":[80,2,86,2,112,1]
,"*changed":[80,1]
,"alive":[80,1,86,1,112,1]
,"legal":[80,1,86,1,112,1,131,1,132,3]
,"**@throws":[80,1,86,2,108,1,112,2]
,"net.sf.ehcache.cacheexception":[80,1,86,3,240,1]
,"\u002F***providers":[80,1,86,1,112,1]
,"sorts":[80,1,86,1,112,1]
,"exotic":[80,1,86,1,112,1]
,"*cache":[80,1,87,1,100,1,108,2,164,1]
,"illegal":[80,1,86,1,112,1]
,"*is":[80,1,91,1,95,1]
,"partly":[80,1,112,1]
,"disposed":[80,1,86,1,91,1,112,1,164,2]
,"\u002F***write":[80,2]
,"intended":[80,1]
,"key\u002Fvalue":[80,1]
,"*update":[80,1]
,"*intended":[80,1]
,"insert":[80,1]
,"(by":[80,1,207,1]
,"throwing":[80,2,100,1]
,"success":[80,2]
,"convention":[80,2,212,1]
,"successfully":[80,1]
,"mapentries":[80,1]
,"indicating":[80,2,217,1]
,"left":[80,2,135,1,185,1]
,"*attempted":[80,1]
,"\u002F***delete":[80,1]
,"\u002F***remove":[80,1]
,"*of":[80,1,100,1,112,1]
,"*(by":[80,1]
,"*after":[80,1]
,"erased":[80,1]
,"*successfully":[80,1]
,"*erase":[80,1]
,"*been":[80,1]
,"attempted":[80,1,200,1]
,"\u002F***this":[80,1,112,1,164,1]
,"couldn\u0027t":[80,1]
,"handled":[80,1,100,1,181,1,231,1,253,1,262,1]
,"*writer":[80,1]
,"net.sf.ehcache.config.cachewriterconfiguration":[80,1]
,"getretryattempts":[80,1]
,"\u2002*retryattempts}":[80,1]
,"tried":[80,2]
,"failing":[80,1,126,1]
,"*be":[80,1]
,"runtimeexceptions":[80,1]
,"\u00A0*occur":[80,1]
,"logged":[80,1,82,1,132,1,135,1,231,1,265,1]
,"lost":[80,1,82,1,148,1,185,1]
,"triggered":[80,1,91,1,184,1]
,"\u2002*in":[80,1]
,"operationtype":[80,2]
,"runtimeexception":[80,2,82,1]
,"\u2002*was":[80,1]
,"throwaway":[80,1,82,1]
,"singleoperationtype":[80,1]
,"monitoring":[81,1,159,1,160,3,164,3,175,1,177,4,272,1]
,"net.sf.ehcache.statistics.livecachestatistics":[81,1]
,"getwriterqueuelength":[81,1]
,"(in":[81,1,131,1,231,1]
,"waiting":[81,1,148,1,185,1,193,1]
,"handling":[82,2,98,1,101,2,104,1]
,"attempts":[82,1]
,"batch)":[82,1,222,1]
,"net.sf.ehcache.writer.cachewriter":[82,1]
,"received":[82,1,177,8,257,1]
,"ignored":[82,1,117,1,138,5,262,1]
,"handy":[82,1]
,"(potentially":[82,1]
,"persistent)":[82,1]
,"monitor":[82,1,160,2,177,1,215,1,272,1]
,"intervene":[82,1]
,"specifies":[84,1,85,1,90,1,94,1,138,1,148,2]
,"loadall":[84,2,86,2]
,"incorporated":[84,1]
,"(synchronous)":[84,2]
,"(asynchronous)":[84,2]
,"invoke":[84,1,185,1]
,"warmers":[84,1]
,"decorator":[84,1,103,1,104,3,105,1,108,5]
,"declaratively":[84,1,98,1,99,1,105,1]
,"becomes":[84,1,132,1,143,1]
,"invoking":[84,1]
,"loader":[84,1,85,1,86,4,87,2,121,2,240,1]
,"declarative":[85,1,99,1,106,1,111,1,125,3]
,"cacheloaderfactory":[85,2,86,4]
,"<cacheloaderfactory":[85,1]
,"com.example.examplecacheloaderfactory":[85,1]
,"type=int":[85,1]
,"startcounter=10":[85,1]
,"abstract":[86,8,91,6,95,6,100,6,112,6,244,2]
,"factory":[86,11,90,3,91,9,94,2,95,7,100,9,112,10,126,1,193,1,206,1,216,1]
,"extending":[86,2,91,2,95,2,100,1,112,2]
,"reproduced":[86,2,91,2,100,2,112,2,168,1,268,1]
,"\u002F***an":[86,1,91,1,95,1,100,1,112,1]
,"*their":[86,1,95,1]
,"**there":[86,1]
,"jsr107":[86,3,258,1,259,2]
,"sub":[86,1]
,"**note":[86,1,91,4,108,1]
,"*programmatically":[86,1]
,"creational":[86,1]
,"{@link":[86,1,87,2,91,3,95,3,100,3,108,2,112,1]
,"net.sf.ehcache.jcache.jcachefactory}":[86,2]
,"constructed":[86,3,91,1,95,1,100,1,108,1]
,"net.sf.jsr107cache.cacheloader":[86,2]
,"createcacheloader":[86,3]
,"(map":[86,1]
,"environment)":[86,1]
,"\u002F***creates":[86,2,95,1,112,1,121,1]
,"*comma":[86,1]
,"separated":[86,1,100,1,112,1,125,1]
,"net.sf.ehcache.loader.cacheloader":[86,1]
,"(properties":[86,1,91,1,95,1,100,1]
,"properties)":[86,2,91,1,95,1,100,1,106,1,112,1]
,"\u002F***@param":[86,1]
,"whose":[86,1]
,"lifecycle":[86,2,87,2,110,2,112,3,125,2,217,1]
,"delimiter":[86,1,106,1]
,"*separated":[86,1]
,"disposal":[86,1,230,1]
,"\u002F***extends":[86,1]
,"{\u002F***load":[86,1]
,"**jcache":[86,2]
,"*where":[86,1]
,"*\u002Fobject":[86,1]
,"argument)":[86,2]
,"\u002F***load":[86,1]
,"keyed":[86,1,217,1]
,"*\u002Fmap":[86,1]
,"\u002F***gets":[86,1,121,2]
,"*\u002Fstring":[86,1,117,1]
,"getname":[86,1,117,1]
,"*before":[86,1,95,1]
,"**implementations":[86,1,112,1]
,"*clone":[86,1,95,1]
,"providers":[86,1,112,1,207,1,216,1,230,2]
,"**this":[86,1,95,1,108,1,112,1]
,"*it\u0027s":[86,1]
,"*up":[86,1,100,1]
,"**cache":[86,1,95,1,112,1]
,"*partly":[86,1]
,"\u002F***@return":[86,1,87,1,112,1]
,"getstatus":[86,1,112,1]
,"accessible":[86,1,91,2,95,1,100,1,112,1,147,1,164,1,230,1,262,1,265,1,269,1]
,"runtime":[87,1,98,1,100,1,125,2,127,1,233,1,271,1]
,"unregistration":[87,1]
,"\u002F***register":[87,1]
,"cacheloader}":[87,2]
,"tied":[87,1,110,1,112,1]
,"**if":[87,1,100,1]
,"initialised":[87,1]
,"registercacheloader":[87,1]
,"(cacheloader":[87,2]
,"cacheloader)":[87,2]
,"{registeredcacheloaders.add":[87,1]
,"(cacheloader)":[87,2]
,"\u002F***unregister":[87,1]
,"detached":[87,1]
,"*from":[87,1]
,"unregister":[87,1]
,"unregistercacheloader":[87,1]
,"{registeredcacheloaders.remove":[87,1]
,"<cacheloader>":[87,1]
,"getregisteredcacheloaders":[87,1]
,"registeredcacheloaders":[87,1]
,"callback":[89,1,91,1,93,1,95,1]
,"cachemanagereventlistener":[89,1,90,2,91,5,110,1,164,1]
,"events":[89,1,91,1,93,4,94,4,95,1,121,1,172,1,173,1,176,1,177,1,272,1]
,"unsynchronized":[89,1,90,1,91,1,93,1,94,1,95,1]
,"implementer":[89,1,90,1,91,1,93,1,94,1,95,1,216,1]
,"safely":[89,1,90,1,91,1,93,1,94,1,95,1]
,"listener":[89,1,90,4,91,3,93,1,94,3,95,5,96,2,126,1,173,1,240,3,272,1]
,"cachemanagereventlistenerfactory":[90,4,91,3]
,"hence":[90,1]
,"<cachemanagereventlistenerfactory":[90,1,181,1,234,1,251,1]
,"qualified":[90,1,94,1,121,1,138,1,210,1,211,1]
,"comma-separated":[90,1,91,1,94,1,95,1]
,"cachemanagereventlistener}":[91,1]
,"*factory":[91,1]
,"**\u002Fpublic":[91,1,95,2,100,2,112,2]
,"{\u002F***create":[91,1,95,1,100,1]
,"*these":[91,1]
,"*properties":[91,1,112,1]
,"createcachemanagereventlistener":[91,1]
,"\u002F***allows":[91,1,95,1]
,"**adding":[91,1]
,"*removing":[91,1]
,"***callbacks":[91,1]
,"*responsibility":[91,1,95,1]
,"*performance":[91,1]
,"{\u002F***called":[91,1,95,1,100,1]
,"immediately":[91,2,95,5,117,1,128,1,141,1]
,"activated":[91,1]
,"*any":[91,3]
,"*will":[91,2,95,2]
,"activation":[91,1]
,"*notification":[91,1,95,1]
,"status_uninitialised}":[91,1]
,"care":[91,1,193,1]
,"*that":[91,1,108,1,117,1]
,"notification":[91,3,95,5,172,1,177,4]
,"*<ul>":[91,1,95,1,100,1]
,"*<li>":[91,2,95,7,100,5]
,"addcaches":[91,1]
,"whih":[91,1]
,"*cachemanager":[91,1,164,1]
,"net.sf.ehcache.cachemanager":[91,1,187,1,220,1]
,"getcache":[91,1,187,1,244,1,263,1]
,"(string)}":[91,1]
,"*<\u002Ful>":[91,1,95,1,100,1]
,"relates":[91,2]
,"*@see":[91,1]
,"notifycacheadded":[91,1,263,1]
,"(string":[91,2,103,3,121,1,186,3,212,1,224,3,277,1]
,"cachename)":[91,2]
,"\u002F***called":[91,1,95,3]
,"*method":[91,1,95,1]
,"cacheeventlistener}":[91,1]
,"notifycacheremoved":[91,1]
,"classloader":[91,1,121,5]
,"thread.currentthread":[91,1,121,1,122,1]
,".getcontextclassloader":[91,1,121,1,122,1]
,"expires":[93,1,95,1,127,2,142,2,144,1,193,1]
,"reached":[93,1,116,1,131,2,143,1,265,2]
,"aba":[93,1]
,"furthermore":[93,1]
,"clustered\u002Fdistributed":[93,1]
,"deployments":[93,1]
,"seen":[93,2]
,"fact":[93,1,212,1]
,"occasionally":[93,1]
,"putquiet":[93,1,95,1,131,1]
,"removequiet":[93,1,95,1]
,"cacheeventlistenerfactory":[94,3,95,3]
,"<cacheeventlistenerfactory":[94,1,263,2]
,"listenfor=\u0022":[94,1]
,"receives":[94,1,136,1]
,"notifications":[94,1,95,1,177,3,235,1]
,"listenfor":[94,1]
,"describes":[94,1,132,1,195,1]
,"delivered":[94,1]
,"(defaults":[94,1]
,"deliver":[94,3,192,1]
,"originating":[94,2]
,"*as":[95,2,100,1]
,"createcacheeventlistener":[95,1]
,"*<ol>":[95,1]
,"*reached":[95,1]
,"*<\u002Fol>":[95,1]
,"**callbacks":[95,1]
,"**events":[95,1]
,"cloneable":[95,1]
,"*block":[95,1]
,"**ehcache":[95,1]
,"***as":[95,1]
,"net.sf.ehcache.element}":[95,1]
,"*key":[95,1]
,"emitting":[95,4]
,"notifyelementremoved":[95,2]
,"(final":[95,4,187,3,212,1,243,1,244,7]
,"net.sf.ehcache.cache":[95,4]
,"(net.sf.ehcache.element)}":[95,2]
,"**implementers":[95,2]
,"wish":[95,2,193,1]
,"element\u0027s":[95,2,127,1]
,"*so":[95,2]
,"modify":[95,2,127,1,185,1,231,1,265,2]
,"*element":[95,2,100,1,117,1]
,"modifications":[95,2]
,"undefined":[95,2]
,"notifyelementput":[95,1]
,"*already":[95,1]
,"existed":[95,1]
,"**the":[95,1]
,"notifyelementupdated":[95,1]
,"(object)}":[95,1]
,"element}":[95,1]
,"**elements":[95,1]
,"accordance":[95,1]
,"*eviction":[95,1]
,"policy":[95,1,117,12,127,1,138,2,145,1,154,1,182,1]
,"runs":[95,1,132,1,173,1,231,1]
,"default_expiry_thread_interval_seconds}":[95,1]
,"*notified":[95,1]
,"**deadlock":[95,1]
,"*expiry":[95,1]
,"sent":[95,1,173,2]
,"*synchronized":[95,1]
,"subsequently":[95,1,184,1]
,"*diskstore":[95,1,266,2]
,"accordingly":[95,1,145,1,182,1,208,1,239,1,268,1]
,"*should":[95,1,121,1]
,"notifyelementexpired":[95,1]
,"\u002F***give":[95,1]
,"replicator":[95,1,275,1]
,"chance":[95,1,214,2]
,"cleanup":[95,1,268,1]
,"*needed":[95,1]
,"notifyelementevicted":[95,1,235,1]
,"confused":[95,1]
,"cache.removeelement":[95,1]
,"notifyremoveall":[95,1]
,"ehcache.removeall":[95,1]
,"usual":[95,1,181,1,251,1]
,"(net.sf.ehcache.ehcache":[95,1]
,"net.sf.ehcache.element)":[95,1]
,"serially":[95,1]
,"potentially":[95,1,137,1,143,1]
,"millions":[95,1]
,"cache.getcacheeventnotificationservice":[96,1]
,".registerlistener":[96,1]
,"(mylistener)":[96,1]
,"handlers":[97,1,98,2,100,1,104,2]
,"propagate":[98,1,100,1]
,"interceptor":[98,1]
,"proxy":[98,1,116,1,235,1]
,"cacheexceptionhandler":[98,1,100,6]
,"intercept":[98,1]
,"intercepted":[98,1]
,"exceptionhandling":[98,1]
,"cachemanager.getehcache":[98,1,103,2,187,1,244,1]
,"cachemanager.getcache":[98,1,103,1]
,"undecorated":[98,1]
,"handler":[98,1,99,1,100,7,101,1,104,1]
,"cacheexceptionhandlers":[98,1]
,"cacheexceptionhandlerfactory":[99,1,100,3,111,1]
,"<cacheexceptionhandlerfactory":[99,1]
,"net.sf.ehcache.exceptionhandler.countingexceptionhandlerfactory":[99,1]
,"loglevel=fine":[99,1]
,"<code>":[100,2]
,"<\u002Fcode>":[100,2]
,"*configuration":[100,1]
,"*extend":[100,1]
,"comma":[100,1,106,1]
,"createexceptionhandler":[100,1]
,"**handlers":[100,1]
,"*cacheexceptionhandlerfactory":[100,1]
,"strategy)":[100,1]
,"behaviour":[100,1,112,1]
,"*exception":[100,1]
,"course":[100,1,110,1,112,1,230,1]
,"decides":[100,1]
,"stack":[100,1,266,1]
,"won\u0027t":[100,1]
,"**some":[100,1]
,"*implementing":[100,1]
,"illegalstateexception}":[100,1]
,"illegalargumentexception}":[100,1]
,"net.sf.ehcache.distribution.remotecacheexception}":[100,1]
,"issue":[100,1,217,1,240,4,257,1,268,1,269,1,274,1]
,"*occurs":[100,1]
,"*called":[100,1]
,"*does":[100,1]
,"onexception":[100,1]
,"decoration":[101,1]
,"=cachemanger.getcache":[101,1]
,"examplecache":[101,1]
,"exceptionhandler":[101,1]
,"exampleexceptionhandler":[101,1]
,"cache.setcacheloader":[101,1]
,"(handler)":[101,1]
,"proxiedcache":[101,1]
,"=exceptionhandlingdynamiccacheproxy.createproxy":[101,1]
,"cachemanager.replacecachewithdecoratedcache":[101,1,108,3]
,"(cache":[101,1,108,3,113,1,136,1,142,1,243,1]
,"proxiedcache)":[101,1]
,"decorators":[102,1,103,2,104,1,105,1,106,3,107,1,108,1]
,"encouraged":[103,1]
,"backed":[103,1,274,1]
,"functionality":[103,1,150,1,181,1,252,1]
,"gang":[103,1]
,"four":[103,1,108,1]
,"decorated":[103,2,104,1,108,12]
,"name)":[103,3,186,3,212,1,224,3,277,1]
,"backward":[103,1,216,2]
,"compatibility":[103,1,150,1,188,1,216,2,233,1]
,"retained":[103,1,174,1]
,"needing":[104,1]
,"knowledge":[104,1,116,1]
,"designed":[104,1,132,1,143,1]
,"refreshed":[104,1]
,"refreshes":[104,1]
,"operate":[104,1]
,"backing":[104,1]
,"degrade":[104,1]
,"attempting":[104,1]
,"refresh":[104,1,220,1]
,"-they":[104,1]
,"engineering":[104,1]
,"scalable":[104,1]
,"net.sf.ehcache.constructs.cachedecoratorfactory":[106,1]
,"parsed":[106,1]
,"factory\u0027s":[106,1]
,"createdecoratedehcache":[106,1]
,"owning":[106,1]
,"<cachedecoratorfactory":[106,1]
,"com.company.somethingcachedecoratorfactory":[106,1]
,"property1=36":[106,1]
,"newblockingcache":[107,1,108,1]
,"newblockingcache)":[108,2]
,"casting":[108,4]
,"word":[108,1]
,"referencing":[108,1]
,"\u002F***the":[108,1]
,"holding":[108,1,193,1]
,"*name":[108,1]
,"\u002F***initialises":[108,1]
,"*configured":[108,1]
,"ehcache\u0027s":[108,1,226,1,235,1,239,1,269,1,277,1]
,"doinit":[108,1]
,"{synchronized":[108,1]
,"(this.getclass":[108,1]
,"{if":[108,1]
,"(blockingcache":[108,1]
,"==null)":[108,1,183,2,244,1]
,"{final":[108,1,212,2]
,"=getcachename":[108,1]
,"=getcachemanager":[108,1]
,".getehcache":[108,2]
,"instanceof":[108,1]
,"blockingcache))":[108,1]
,"{\u002F\u002Fdecorate":[108,1]
,"substitute":[108,2]
,".replacecachewithdecoratedcache":[108,1]
,"=(blockingcache)":[108,1]
,"(getcachename":[108,1]
,"=singletonmanager.getehcache":[108,1]
,"decorations":[108,1]
,"cachemanager.adddecoratedcache":[108,2]
,"retain":[108,1]
,"cache.setname":[108,1]
,"(new_name)":[108,1]
,"\u002F***adds":[108,1]
,"ehcache}":[108,1]
,"neither":[108,1]
,"*creates":[108,1]
,"memory\u002Fdisk":[108,1]
,"initializes":[108,1]
,"**it":[108,1,117,1]
,"*available":[108,1]
,"*either":[108,1]
,"*original":[108,1]
,"(decorated":[108,1]
,"not)":[108,1,274,1]
,"objectexistsexception}":[108,1]
,"replacing":[108,1,217,1]
,"please":[108,1,179,1,277,1]
,"replacecachewithdecoratedcache":[108,1]
,"ehcache)}":[108,1]
,"*new":[108,1]
,"behaviours":[108,1]
,"*gang":[108,1]
,"decoratedcache":[108,1]
,"objectexistsexception":[108,2]
,"adddecoratedcache":[108,1]
,"decoratedcache)":[108,1]
,"extensions":[109,1,110,6,111,1,112,1,113,1,121,1,215,1]
,"generic":[110,1,112,1,117,1,222,1,244,1]
,"reason":[110,1,112,1,121,1,277,1]
,"cacheextensionfactory":[110,1,112,4]
,"createcachecacheextension":[110,1]
,"timer":[110,1]
,"(another":[110,1]
,"decorate":[110,1,112,1]
,"caches.)":[110,1]
,"cacheextension":[110,3,112,7]
,"opportunities":[110,1,112,1]
,"customization":[110,1]
,"zero":[111,1,139,1]
,"<cacheextensionfactory":[111,1]
,"com.example.filewatchingcacherefresherextensionfactory":[111,1]
,"refreshintervalmillis=18000":[111,1]
,"loadertimeout=3000":[111,1]
,"flushperiod=whatever":[111,1]
,"someotherproperty=somevalue":[111,1]
,"cacheextensions":[112,1]
,"*provide":[112,1]
,"{\u002F***@param":[112,1]
,"*whose":[112,1]
,"*delimiter":[112,1]
,"createcacheextension":[112,1]
,"**cacheextensions":[112,3]
,"*interface":[112,1]
,"*createcachecacheextension":[112,1]
,"*timer":[112,1]
,"net.sf.ehcache.constructs.blocking.blockingcache}":[112,1]
,"**because":[112,1]
,"*can":[112,1]
,"*cachemanagereventlistener":[112,1]
,"*creating":[112,1]
,"customisation":[112,1]
,"{\u002F***notifies":[112,1]
,"*clean":[112,1]
,"*itself":[112,1]
,"testcacheextension":[113,3]
,"testcacheextension.init":[113,1]
,"cache.registercacheextension":[113,1]
,"(testcacheextension)":[113,1]
,"deciding":[115,1]
,"(lru)":[115,1,116,2,131,1,265,1]
,"flushed":[115,1,141,1,143,2,144,1,265,1]
,"forehcache":[115,1]
,"causes":[115,1,135,1,164,1,240,1,269,2]
,"lfu":[115,1,116,1,117,2,131,1,132,1,139,1,144,1,180,1,196,1,234,1]
,"idea":[116,1,185,1,229,1,235,1]
,"choose":[116,2,145,1,168,1,182,1]
,"1966":[116,1]
,"laszlo":[116,1]
,"belady":[116,1]
,"showed":[116,1]
,"efficient":[116,1,148,1,192,1,265,1]
,"needed":[116,1,193,1]
,"longest":[116,1]
,"theoretical":[116,1]
,"unimplementable":[116,1]
,"phenomenon":[116,1]
,"variation":[116,2]
,"lru":[116,2,117,2,126,1,131,2,154,1,217,1,234,1,246,4,265,3]
,"three":[116,1,117,1,130,1,136,1,265,1]
,"oldest":[116,1,265,1]
,"last-used":[116,1,131,1]
,"random":[116,3,117,1]
,"evicts":[116,3]
,"smallest":[116,3]
,"empirical":[116,3]
,"testing":[116,3,268,1,271,1]
,"lowest":[116,3]
,"quartile":[116,3]
,"probabilistic":[116,1,217,1]
,"suit":[116,1]
,"deterministic":[116,1,217,2]
,"-dnet.sf.ehcache.use.classic.lru=true":[116,1,154,1,217,1]
,"(lfu)":[116,1,131,1]
,"reached)":[116,1]
,"cache-element":[116,1]
,"give":[116,1]
,"(fifo)":[116,1,131,1]
,"store)":[116,1,131,3]
,"(first-in)":[116,1,131,1]
,"candidate":[116,1,117,1,131,1]
,"first-out":[116,1]
,"plugging":[117,1]
,"plug":[117,1,168,1,230,1]
,"cache.setmemorystoreevictionpolicy":[117,1]
,"(policy":[117,2]
,"policy)":[117,2]
,"utilize":[117,1,230,1,231,1]
,"metadata":[117,3]
,"interesting":[117,1]
,"approaches":[117,1]
,"\u002F***sets":[117,1]
,"*there":[117,1]
,"policies":[117,3,131,1,210,1,211,1,212,2]
,"fifo":[117,2,131,1]
,"*many":[117,1]
,"*combination":[117,1]
,"*effect":[117,1]
,"setmemorystoreevictionpolicy":[117,1]
,"{memorystore.setevictionpolicy":[117,1]
,"(policy)":[117,1]
,"{\u002F***@return":[117,1]
,"inbuilt":[117,1]
,"\u002F***finds":[117,1]
,"sampled":[117,1]
,"*distinguishes":[117,1]
,"classic":[117,1,217,1]
,"structures":[117,2,138,1]
,"statistics)":[117,1]
,"*used":[117,1]
,"decisions":[117,1]
,"advantage":[117,1,145,1,182,1,216,1]
,"*metadata":[117,1]
,"sampledelements":[117,2]
,"population":[117,1]
,"justadded":[117,1]
,"selected":[117,2,139,3,154,1,164,1]
,"*\u002Felement":[117,1]
,"selectedbasedonpolicy":[117,1]
,"justadded)":[117,1]
,"\u002F***compares":[117,1]
,"desirableness":[117,1]
,"element1":[117,2]
,"compare":[117,3]
,"element2":[117,1]
,"preferable":[117,1]
,"*first":[117,1]
,"ths":[117,1]
,"element2)":[117,1]
,"plethora":[120,1]
,"environments":[120,1,145,1,182,1]
,"utility":[120,1]
,"classloaderutil":[120,1]
,"plugin":[121,1,181,4,237,1,252,4]
,"plugins":[121,1]
,"logs":[121,1,138,1,248,1]
,"*using":[121,1]
,"classname":[121,4]
,"createnewinstance":[121,1]
,"classname)":[121,1]
,"{class":[121,1]
,"clazz":[121,1]
,"newinstance":[121,2]
,"{clazz":[121,2]
,"=class.forname":[121,2]
,"(classname":[121,2]
,"getstandardclassloader":[121,2]
,"(classnotfoundexception":[121,2]
,"{\u002F\u002Ftry":[121,1]
,"fallback":[121,2]
,"getfallbackclassloader":[121,2]
,"ex)":[121,1]
,"unable":[121,3,240,2,269,1]
,"e.getmessage":[121,3]
,"{newinstance":[121,1]
,"=clazz.newinstance":[121,1]
,"(illegalaccessexception":[121,1]
,"(instantiationexception":[121,1]
,"classloading":[121,3]
,"*one":[121,1]
,"seems":[121,1,268,1,278,1]
,"*loading":[121,1]
,"wild":[121,1]
,"*extensions":[121,1]
,"*context":[121,1]
,"classloaderutil.class.getclassloader":[121,2]
,"unspecified":[122,1]
,"(\u0022\u002Fehcache.xml":[122,2]
,"configurationfactory.class.getresource":[122,2]
,"(\u0022\u002Fehcache-failsafe.xml":[122,1]
,"\u0022\u002Fehcache.xml":[122,1]
,"root":[122,1,207,1,262,1]
,"package)":[122,1]
,"class-constructor":[125,1]
,"choosing":[125,1]
,"matter":[125,1,184,1]
,"preference":[125,1,275,1]
,"run-time":[125,1]
,"project":[125,1,179,1,181,2,186,7,203,3,217,1,223,1,224,8,244,1,249,1,252,1]
,"separation":[125,1,217,1]
,"deployment":[125,1,172,1,266,1,268,1]
,"centrally":[125,1]
,"organized":[125,1]
,"application-code":[125,1]
,"focuses":[125,1]
,"explored":[125,1]
,"documented":[125,1,126,2]
,"ascii":[126,3]
,"utf8":[126,3]
,"encoded":[126,1]
,"top":[126,2,131,1]
,"alternate":[126,1]
,"paths":[126,2,132,2]
,"filenames":[126,1]
,"conflicts":[126,2]
,"ports":[126,1]
,"require":[126,1,145,1,182,1,185,1,196,1,216,1,229,2,230,1,262,1]
,"emit":[126,2]
,"reminding":[126,2]
,"commentary":[126,1]
,"downloaded":[126,2,168,1]
,"http:\u002F\u002Fehcache.org\u002Fehcache.xml":[126,1]
,"ehcache-1.6":[126,2]
,"files":[126,2,132,2,148,1,177,1,235,2,244,1]
,"unicode":[126,1]
,"backwardly":[126,1]
,"compatible":[126,1,205,1,233,2,268,2,277,1]
,"necessary":[126,1,136,1,207,1,229,1]
,"pertain":[126,2]
,"valid":[126,2,183,1,269,1]
,"ehcache.xsd":[126,3,152,1,181,1,188,1,234,1,246,1,251,1]
,"comply":[126,1]
,"schema":[126,2,230,1,262,1]
,"http:\u002F\u002Fehcache.org\u002Fehcache.xsd":[126,1]
,"ehcache-failsafe.xml":[126,6,132,1,248,1]
,"packaged":[126,1,176,1]
,"<ehcache>":[126,1,127,1,149,1,210,1,211,1]
,"<diskstore":[126,1,132,1,149,1,181,1,198,1,234,1,246,1,251,1]
,"path=\u0022":[126,1,198,1]
,"java.io.tmpdir":[126,1,132,1]
,"<defaultcache":[126,1,181,1,198,1,234,1,246,1,251,1]
,"120":[126,3,132,1,181,1,212,1,234,2,246,2,251,1,271,1]
,"maxentrieslocaldisk=\u0022":[126,1,136,2,180,1,196,1,234,1]
,"10000000":[126,1]
,"memorystoreevictionpolicy=\u0022":[126,1,144,1,180,1,196,1,234,2,246,4]
,"localtempswap":[126,1,132,4,135,1,148,2,149,3,150,1,198,5,210,1,211,2,212,3,246,1,265,1]
,"<\u002Fdefaultcache>":[126,1,181,1,234,1,246,1,251,1]
,"<\u002Fehcache>":[126,1,136,5,149,1,180,1,181,1,196,1,198,1,210,1,211,1,234,1,246,1,251,1]
,"appears":[126,1,233,1,240,1,268,1]
,"(programmatically)":[126,1]
,"changing":[127,1]
,"changeable":[127,1,132,1]
,"ttl":[127,1,142,1,182,1,215,1,229,1,265,2]
,"(infinite":[127,2,142,3]
,"lifetime)":[127,2,142,2]
,"tti":[127,1,142,1,229,1,265,2]
,"overrides":[127,1,138,2,142,1,265,1]
,"maxentrieslocalheap":[127,1,136,1,143,1,209,1,231,2,265,2]
,"maxbyteslocalheap":[127,1,134,1,135,1,136,1]
,"maxentrieslocaldisk":[127,1,132,1,142,1,149,1]
,"maxbyteslocaldisk":[127,1,132,1,134,1,135,1,149,1]
,"memory-store":[127,1]
,"=cache.getcacheconfiguration":[127,1]
,"config.settimetoidleseconds":[127,1]
,"config.settimetoliveseconds":[127,1]
,"(120)":[127,1]
,"config.setmaxentrieslocalheap":[127,1]
,"(10000)":[127,1]
,"config.setmaxentrieslocaldisk":[127,1]
,"(1000000)":[127,1]
,"disabled":[127,1,154,1,160,1,230,1,271,2]
,"cache.disabledynamicfeatures":[127,1]
,"dynamicconfig":[127,1]
,"affecting":[128,1,271,1]
,"original":[128,1,271,2]
,"<defaultcache>":[128,1]
,"copycache":[128,4]
,"1000)":[128,1]
,".copyonread":[128,1]
,".copyonwrite":[128,1]
,"()-like":[128,2]
,"net.sf.ehcache.store.compound.copystrategy":[128,1]
,"<copystrategy>":[128,1]
,"copyonread=\u0022":[128,1]
,"copyonwrite=\u0022":[128,1]
,"<copystrategy":[128,1]
,"com.company.ehcache.mycopystrategy":[128,2]
,"copystrategy.copy":[128,1]
,"(t)":[128,1]
,"copystrategyconfiguration":[128,3]
,"copystrategyconfiguration.setclass":[128,1]
,"cacheconfiguration.addcopystrategy":[128,1]
,"(copystrategyconfiguration)":[128,1]
,"summarized":[130,1]
,"document":[130,1,147,1]
,"strongly":[130,1,150,1]
,"actual":[130,1,139,1]
,"expect":[130,1]
,"allot":[131,1]
,"hotset":[131,1]
,"overall":[131,1,135,1,139,2,142,1]
,"overflowtooffheap":[131,1,231,2]
,"<persistence>":[131,1,148,2,150,5]
,"(disk":[131,1]
,"memorystoreevictionpolicy":[131,1]
,"(first-out)":[131,1]
,"getquiet":[131,2]
,"calculateinmemorysize":[131,1]
,"convenient":[131,1]
,"estimate":[131,2]
,"bytes)":[131,1]
,"rough":[131,1]
,"negative":[131,1]
,"trade-off":[131,1]
,"utilization":[131,1,132,1,265,1]
,"design":[131,1]
,"favor":[131,1]
,"concerned":[131,1,265,1]
,"encourage":[132,1,216,1]
,"(localtempswap)":[132,1,134,1]
,"(localrestartable)":[132,1]
,"survive":[132,1]
,"restarted":[132,1]
,"cleared":[132,1,148,2,149,1,217,1,274,1]
,"auto-resolved":[132,1,148,1]
,"<cache_name>":[132,1]
,".data":[132,1]
,"restartable":[132,2]
,"restart":[132,1,143,1,147,5,148,4,149,1,150,1,274,1]
,"<diskstore>":[132,3,148,1]
,"sub-element":[132,1,138,1,148,3,150,5]
,"path=\u0022\u002Fpath\u002Fto\u002Fstore\u002Fdata":[132,1,181,1,234,1,246,1,251,1]
,"unix":[132,1,173,2]
,"\u002Fhome\u002Fapplication\u002Fcache":[132,1]
,"translated":[132,1]
,"user.home":[132,1]
,"-user\u0027s":[132,1]
,"home":[132,1]
,"user.dir-user\u0027s":[132,1]
,"-default":[132,1]
,"temp":[132,1]
,"ehcache.disk.store.dir-a":[132,1]
,"normally":[132,1,145,1,173,1,177,1,182,1,200,1,217,1,243,1]
,"command":[132,1,154,2,157,1,229,1,230,4,271,1]
,"line":[132,1,177,1,212,2,229,1,230,2,271,1]
,"-dehcache.disk.store.dir=\u002Fu01\u002Fmyapp\u002Fdiskdir":[132,1]
,"subdirectories":[132,1]
,"user.dir\u002Fone":[132,1]
,"diskstoreconfiguration":[132,3,149,1]
,"diskstoreconfiguration.setpath":[132,1]
,"(\u0022\u002Fmy\u002Fpath\u002Fdir":[132,1]
,"\u002F\u002Falready":[132,1]
,"configuration.adddiskstore":[132,1]
,"(diskstoreconfiguration)":[132,1]
,"mgr":[132,1]
,"cachemanager\u0027s":[132,1,135,1,136,1,164,1,277,1]
,"recycled":[132,1]
,"diskexpirythreadintervalseconds":[132,2,265,2]
,"excessive":[132,1]
,"exceeds":[132,1,235,1]
,"evictions":[132,1]
,"turning":[132,1]
,"comment":[132,1]
,"commented":[132,1,234,1]
,"summarizes":[134,1,150,1]
,"(heap)":[134,1,135,1]
,"maxentrieslocalheapmax":[134,1]
,"byteslocalheap":[134,1]
,"(maxbyteslocalheap":[134,1,135,2]
,"pool":[134,4,135,12,136,14,139,4]
,"pooling":[134,3,135,1]
,"maxbyteslocaloffheap":[134,1,143,1,231,1]
,"maxentrieslocaldiskmax":[134,1]
,"byteslocaldisk":[134,1]
,"(maxbyteslocaldisk":[134,1]
,"(bytes)":[134,1]
,"-xmx":[134,1,275,1]
,"syntax":[134,1]
,"500k":[134,1]
,"200m":[134,1]
,"percentage":[134,1,136,3]
,"cachemanager-level":[134,1,135,4,139,2]
,"diagram":[134,1]
,"illustrates":[134,1]
,"constrain":[135,2]
,"claims":[135,2]
,"receive":[135,1,145,1,172,1,182,1,184,1]
,"share":[135,2,217,1]
,"remainder":[135,1]
,"(after":[135,1]
,"claimed":[135,1]
,"portion)":[135,1]
,"eight":[135,1]
,"pools":[135,2,136,3,138,1]
,"gigabyte":[135,1]
,"200mb":[135,1]
,"remaining":[135,2,136,2,143,2]
,"600mb":[135,1]
,"equally":[135,1,136,3]
,"bytes-based":[135,1]
,"claim":[135,2]
,"portion":[135,2,136,8,231,1]
,"entries-based":[135,1]
,"maxentrieslocal":[135,1]
,"over-allocated":[135,1]
,"over-allocation":[135,1]
,"invalidconfigurationexception":[135,2]
,"(same":[135,1]
,"persistencestrategy":[135,1]
,"cache-sizing":[136,1]
,"allocations":[136,1]
,"tier)":[136,1]
,"<ehcache":[136,5,152,1,180,1,181,1,196,1,198,1,234,1,246,1,251,1]
,"xmlns":[136,5]
,"cm1":[136,4]
,"100m":[136,3]
,"maxbyteslocaldisk=\u0022":[136,4]
,"50g":[136,2]
,"cache1":[136,6,143,1]
,"allocates":[136,3]
,"among":[136,1]
,"allocated":[136,3]
,"60g":[136,1]
,"50m":[136,4]
,"reserves":[136,1]
,"50mb":[136,2]
,"100mb":[136,1,233,1]
,"local-heap":[136,2]
,"half":[136,1]
,"25mb":[136,2]
,"2.5gb":[136,3]
,"20gb":[136,1]
,"reserve":[136,2]
,"fixed":[136,1,257,1,265,1,268,2]
,"particular":[136,1,183,1,184,1,212,1,255,1]
,"cm2":[136,2]
,"cache4":[136,2]
,"100000":[136,2]
,"cache5":[136,2]
,"cache6":[136,2]
,"(local":[136,1]
,"heap)":[136,1]
,"constrained":[136,1,233,1]
,"desired":[136,1,138,1]
,"percents":[136,1]
,"<!--cache1":[136,1]
,"400mb":[136,1]
,"5gb":[136,3]
,"-->":[136,3,180,1,196,1,198,2,220,2,244,5]
,"<!--cache2":[136,2]
,"300mb":[136,2]
,"40gb":[136,1]
,"cm3":[136,1]
,"cache7":[136,1]
,"cache8":[136,1]
,"cache9":[136,1]
,"implicit":[136,1]
,"(cachemanager":[136,1]
,"pinned":[137,1,143,11]
,"cache-configuration":[137,1]
,"prevents":[137,1,240,1]
,"enforcement":[138,1]
,"internal":[138,2,266,1]
,"mechanisms":[138,1]
,"track":[138,1]
,"data-element":[138,1]
,"enforce":[138,1,145,1,182,1]
,"memory-limited":[138,1]
,"footprint":[138,1]
,"graphs":[138,2,192,1]
,"followed":[138,1,193,1,211,1,212,1]
,"recursively":[138,1]
,"shared":[138,2,185,1,235,1]
,"overstatement":[138,1]
,"ignoring":[138,1]
,"calculations":[138,1]
,"measurement":[138,3]
,"@ignoresizeof":[138,4]
,"packages":[138,2]
,"inherited":[138,1]
,"excluded":[138,1]
,"ignore":[138,3]
,"dog":[138,2,186,6,224,6]
,"private":[138,2,187,1,244,1]
,"sharedinstance":[138,2]
,"mycacheentry":[138,1]
,"{@ignoresizeof":[138,1]
,"sharedclass":[138,1]
,"package-info.java":[138,2]
,"com.pany.ignore":[138,2]
,"net.sf.ehcache.pool.sizeof.filter.ignoresizeof":[138,1]
,"net.sf.ehcache.sizeof.filter":[138,1]
,"graph":[138,3]
,"com.pany.domain.cache.mycacheentry.sharedinstance":[138,1]
,"com.pany.domain.sharedstate":[138,1]
,"ignores":[138,1]
,"com.pany.example":[138,1]
,"measurements":[138,1]
,"moved":[138,1]
,"traversed":[138,1]
,"traversing":[138,1]
,"process":[138,2,173,2,185,2,186,1,217,1,224,1,265,1]
,"annotations":[138,1,179,2,186,6,222,1,224,6]
,"levels":[138,1,169,1,274,2]
,"size-of":[138,10]
,"limitation":[138,2]
,"deep":[138,2]
,"<sizeofpolicy":[138,1]
,"maxdepth=\u0022":[138,1]
,"maxdepthexceededbehavior=\u0022":[138,1]
,"abort":[138,3]
,"maxdepth":[138,1]
,"linked":[138,1]
,"visited":[138,1]
,"action":[138,1,169,1,230,4]
,"maxdepthexceededbehavior":[138,1]
,"depth":[138,1]
,"continue":[138,3,150,2,239,1]
,"forces":[138,2]
,"sizeof":[138,2]
,"mark":[138,1]
,"tracking":[138,1,193,1,268,1]
,"ehcache.hasabortedsizeof":[138,1]
,"(directly":[138,1]
,"<ehcache>)":[138,1]
,"(under":[138,1]
,"<defaultcache>)":[138,1]
,"<sizeofpolicy>":[138,1]
,"belonging":[138,1]
,"target":[138,1,142,2]
,"cache-level":[138,1]
,"debugging":[138,1,175,1,272,1]
,"related":[138,2,189,1,215,2]
,"warnings":[138,1,276,1]
,"seem":[138,1]
,"(usually":[138,1]
,"walking":[138,1]
,"graph)":[138,1]
,"generate":[138,1,180,1,195,1,220,1,230,2]
,"net.sf.ehcache.sizeof.verbosedebuglogging":[138,1]
,"debug":[138,1,169,3,176,1,272,1,275,1]
,"net.sf.ehcache.pool.sizeof":[138,1]
,"exhausted":[139,1]
,"(lru":[139,1]
,"eviction-cost":[139,6]
,"=mean-entry-size":[139,2]
,"*drop-in-hit-rate":[139,1]
,"increase":[139,1]
,"(system":[139,1]
,"e.g":[139,1,173,2,177,2]
,"database)":[139,1,182,1]
,"evicting":[139,2]
,"power-law":[139,1]
,"(hit":[139,1]
,"n\u0027th":[139,1]
,"1\u002Fn":[139,1]
,"{alpha}":[139,5]
,"continuous":[139,1]
,"proportional":[139,1]
,"integral":[139,2]
,"drop":[139,1]
,"*1\u002Fx":[139,1]
,"*delta":[139,1]
,"(x)":[139,1]
,"(hits":[139,1]
,"misses)":[139,1]
,"unit-less":[139,1]
,"measure":[139,1]
,"fill":[139,2]
,"approximating":[139,1]
,"substituting":[139,1]
,"*access":[139,2]
,"*1\u002F(hits\u002Faccess)":[139,1]
,"*(eviction":[139,2]
,"\u002F(bytesize":[139,1]
,"\u002F(hits\u002Faccess)))":[139,1]
,"=(bytesize":[139,1]
,"\u002Fcountsize)":[139,2]
,"*1\u002F(h\u002Fa)":[139,1]
,"*hits)\u002F(access":[139,1]
,"*bytesize)":[139,1]
,"=(eviction":[139,1]
,"*hits)":[139,1]
,"\u002F(countsize":[139,1]
,"*(hits\u002Faccess)":[139,1]
,"{alpha})":[139,1]
,"factor":[139,1]
,"lead":[139,1]
,"=(hits":[139,1]
,"\u002F(hits\u002Faccess)":[139,1]
,"hit-rate":[139,1]
,"pure":[139,1]
,"phase)":[139,1]
,"deviate":[139,1]
,"occupy":[139,1]
,"1\u002Fnth":[139,1]
,"re-adjust":[139,1]
,"topic":[141,1,216,1,219,1]
,"covers":[141,1]
,"features":[141,1,217,1,233,1]
,"move":[141,1,184,1,240,1]
,"keeping":[141,1]
,"fault":[141,1,147,1,148,1]
,"faulting":[141,1]
,"resident":[141,1,143,1]
,"faulted":[141,1]
,"time-to-idle":[141,1]
,"maintain":[141,1,179,1,182,1]
,"critical":[142,1]
,"maintaining":[142,1,208,1]
,"timetoidleseconds":[142,1,145,1,182,1,265,1]
,"timetoliveseconds":[142,1,145,1,182,1,265,1]
,"bring":[142,1]
,"allowed)":[142,1]
,"flag":[142,1,265,1]
,"finite":[142,1]
,"tti\u002Fttl":[142,1]
,"affects":[142,1,144,1]
,"non-expired":[143,1]
,"remain":[143,1,164,1,203,1]
,"pin":[143,3,203,1]
,"around":[143,1,147,1,233,1,235,1,240,1,257,1,268,1]
,"(store)":[143,1]
,"accomplished":[143,1]
,"incache":[143,3]
,"performance-enhancing":[143,1]
,"unexpired":[143,1,144,1]
,"localmemory":[143,5]
,"store\u0027s":[143,1]
,"<pinning":[143,3]
,"store=\u0022":[143,3]
,"interaction":[143,1]
,"eligible":[143,1]
,"maxentriesincache":[143,1]
,"grow":[143,1]
,"data)":[143,1,145,1,182,1]
,"understood":[143,1]
,"conclude":[143,1]
,"surpasses":[143,1]
,"(off-heap":[143,1]
,"products.)":[143,1]
,"unpin":[143,1]
,"cache.removeall":[143,1,223,1]
,"(cache.dispose":[143,1]
,"cachemanager.removecache":[143,1,271,1]
,"locally":[143,1]
,"localrestartable)":[143,1]
,"3600":[144,1,198,1]
,"idle":[144,1,229,1]
,"(timetoidleseconds)":[144,1]
,"periodic":[144,1]
,"evictor":[144,1,217,3]
,"(timetoliveseconds)":[144,1]
,"freshness":[145,2,179,2,182,2]
,"(sors)":[145,1]
,"accommodate":[145,1]
,"external":[145,2,182,2]
,"processes":[145,1,182,1]
,"(forcing":[145,1,182,1]
,"re-load":[145,1,182,1,183,1]
,"sor)":[145,1,182,1]
,"bus":[145,4,182,4]
,"post":[145,1,177,1,182,1,223,1]
,"subscribe":[145,1,182,1]
,"invalidating":[145,1,182,1]
,"triggers":[145,2,182,2]
,"trigger":[145,3,182,3,231,1]
,"accomplish":[145,1,182,1]
,"task":[145,1,182,1]
,"publish":[145,1,182,1]
,"downside":[145,1,182,1]
,"inadvisable":[145,1]
,"heavy-weight":[145,1,182,1]
,"publishing":[145,1,182,1]
,"cooperation":[145,1,182,1]
,"re-populate":[145,1,182,1]
,"re-synchronize":[145,1,182,1]
,"consideration":[145,1]
,"shorter":[145,1,182,1]
,"-meaning":[145,1,182,1]
,"numbers":[145,1,182,1,193,1]
,"generates":[145,1,182,1,193,1]
,"modestly":[145,1,182,1]
,"five":[145,1,266,1,268,1]
,"produce":[145,1,157,1]
,"reductions":[145,1,182,1]
,"choices":[147,1]
,"2.6":[147,1,149,1,150,4]
,"fast":[147,5,148,2,150,2,193,1,274,1]
,"enterprise-ready":[147,1]
,"resilience":[147,1]
,"shutdown":[147,1,148,1,150,1,171,3,173,15,174,2,271,3]
,"planned":[147,1,150,1]
,"unplanned":[147,1]
,"survives":[147,1]
,"crashes":[147,1]
,"resume":[147,1]
,"terabytes":[147,2]
,"minimizing":[147,1,193,1]
,"downtime":[147,1]
,"real-time":[147,1]
,"tolerance":[147,1]
,"backup":[147,1]
,"mirror":[147,1,148,1]
,"right":[147,1,180,1,196,1,231,1]
,"possibilities":[147,1]
,"datasets":[147,2]
,"time-based":[147,1]
,"moving":[147,1,240,1]
,"locations":[147,1]
,"range":[147,1,193,1]
,"key-value":[147,1]
,"operational":[147,1]
,"speeds":[147,1]
,"restartstore":[148,4]
,"on-disk":[148,1]
,"includes":[148,1,222,1]
,"synchronouswrites":[148,5]
,"(on-heap":[148,1]
,"off-heap)":[148,1]
,"website":[148,1,160,1,168,2,184,1,203,1]
,"synchronouswrites=\u0022":[148,4,150,2]
,"proceed":[148,1,185,1]
,"acknowledgment":[148,1]
,"recovered":[148,2,150,1]
,"synced":[148,1,217,1]
,"2-3":[148,1]
,"recorded":[148,1]
,"caller":[148,1]
,"middle":[148,1]
,"configuration.for":[148,1]
,"path=\u0022\u002Fauto\u002Fdefault\u002Fpath":[149,1]
,"stays":[149,1]
,"(with":[149,1]
,"disk)":[149,1]
,".diskstore":[149,1]
,".path":[149,1]
,"(\u0022\u002Fpath\u002Fto\u002Fstore\u002Fdata":[149,1]
,"my-cache":[149,2]
,".maxbyteslocalheap":[149,1]
,"(16":[149,1]
,"memoryunit.megabytes)":[149,1]
,"(strategy.localtempswap))":[149,1]
,"cachemanagerconfig.addcache":[149,1]
,"(cacheconfig)":[149,1]
,"previous":[150,6,200,1]
,"higher)":[150,1]
,"2.5":[150,4,180,1,196,1,198,1,223,1]
,"strong":[150,1]
,"(enterprise":[150,1]
,"edit":[150,2,181,1,251,1]
,"non-fault-tolerant":[150,2]
,"fault-tolerant":[150,2]
,"above*overflowtodisk=\u0022":[150,1]
,"diskpersistent=\u0022":[150,3]
,"\u0022**temporary":[150,1]
,"overflowtodisk=\u0022":[150,2,180,1,196,1]
,"(no":[150,1]
,"usage)":[150,1]
,"**in":[150,1]
,"overflowtodisk":[150,3,234,1]
,"diskpersistent":[150,2,234,1]
,"corrupt":[150,1]
,"checking":[150,1,183,1]
,"measures":[150,1]
,"discrepancy":[150,1]
,"emptied":[150,1]
,"diskpersistence":[150,1]
,"diskstorebootstrapcacheloaderfactory":[150,1]
,"<terracotta>":[150,1,268,1]
,"invalid":[150,1]
,"mandatory":[150,1,177,1,262,2]
,"checker":[151,1,152,2]
,"non-identifying":[152,1]
,"feedback":[152,1]
,"operating":[152,1,266,1]
,"architectures":[152,1]
,"\u2002-dnet.sf.ehcache.skipupdatecheck=true":[152,1]
,"updatecheck":[152,1]
,"outer":[152,1]
,"echace>":[152,1]
,"xmlns:xsi=\u0022":[152,1,180,2,181,1,196,2,198,2,234,1,246,1,251,1]
,"http:\u002F\u002Fwww.w3.org\u002F2001\u002Fxmlschema-instance":[152,1,180,2,181,1,196,2,198,2,234,1,246,1,251,1]
,"xsi:nonamespaceschemalocation=\u0022":[152,1,180,1,181,1,196,1,198,1,234,1,246,1,251,1]
,"updatecheck=\u0022":[152,1,246,1]
,"monitoring=\u0022":[152,1,246,1]
,"autodetect":[152,1,246,1]
,"dynamicconfig=\u0022":[152,1,246,1]
,"net.sf.ehcache.disabled":[154,1]
,"(using":[154,2]
,"-dnet.sf.ehcache.disabled=true":[154,1,271,1]
,"line)":[154,2]
,"disables":[154,1]
,"(puts":[154,1]
,"discarded)":[154,1]
,"net.sf.ehcache.use.classic.lru":[154,1]
,"older":[154,1,233,1]
,"lrumemorystore":[154,1]
,"ease":[154,1]
,"migration":[154,1]
,"composed":[157,1]
,"strain":[157,1]
,"collector":[157,1,158,2]
,"2.3":[157,1,233,1]
,"detecting":[157,1]
,"pause":[157,2,158,1]
,"become":[157,1,185,1,209,1]
,"noticeable":[157,1]
,"clearest":[157,1]
,"jstat":[157,2]
,"-gcutil":[157,1]
,"<pid>":[157,1]
,"1000000":[157,1]
,"watch":[157,1]
,"paused":[157,1]
,"jump":[157,1]
,"acceptable":[157,1]
,"contexts":[157,1]
,"suggestion":[158,1]
,"virtual":[158,1,173,4,266,2]
,"-xx":[158,4]
,"disableexplicitgc":[158,2]
,"useconcmarksweepgc":[158,2]
,"-xx:newsize=<1\u002F4":[158,1]
,"size>":[158,1]
,"-xx:survivorratio=16":[158,1]
,"system.gc":[158,1]
,"helps":[158,1]
,"jmx":[159,1,160,9,162,3,164,2,215,2]
,"instrumenting":[160,1]
,"infrastructure":[160,1,193,1]
,"net.sf.ehcache.management":[160,1]
,"mbeans":[160,2,161,4,164,8,165,2]
,"managementservice":[160,1,164,2]
,"libraries":[160,1,177,1,181,1,252,1]
,"leakage":[160,1]
,"dependencies":[160,1,227,1,233,1]
,"net.sf.ehcache.management.managementservice.registermbeans":[160,1]
,"selection":[160,1]
,"mbeanserver":[160,1,161,1,162,1,164,7,165,4]
,"cachestatistics":[160,1,161,2,162,1,163,1,164,2,165,3]
,"illustrated":[160,1]
,"image":[160,1]
,"console":[160,1]
,"(tmc)":[160,1]
,"tmc":[160,2]
,"administration":[160,1]
,"jmx-enabled=\u0022":[160,2]
,"<server>":[160,1]
,"tc-config.xml":[160,1]
,"<server":[160,1]
,"host=\u0022":[160,1]
,"localhost":[160,1,240,2]
,"name1":[160,1]
,"mbean":[161,5,162,1,164,1]
,"traversal":[161,2,164,2]
,"likewise":[161,1]
,"remoting":[162,1]
,"agent":[162,1,165,1,193,3,216,1]
,"mbeanserverconnection":[162,1]
,"remotely":[162,2]
,"ehcache.jar":[162,1,240,1]
,"client\u0027s":[162,1]
,"jconsole":[162,1,164,1,165,3,271,1]
,"-j-djava.class.path=ehcache.jar":[162,1]
,"objectname":[163,1]
,"naming":[163,1]
,"scheme":[163,1]
,"net.sf.ehcache:type=cachemanager":[163,1]
,"name=<cachemanager>":[163,1]
,"net.sf.ehcache:type=cache":[163,1]
,"cachemanager=<cachemanagername>":[163,3]
,"name=<cachename>":[163,3]
,"net.sf.ehcache:type=cacheconfiguration":[163,1]
,"net.sf.ehcache:type=cachestatistics":[163,1]
,"managementservice.registermbeans":[164,1,165,1]
,"initiate":[164,1]
,"instrumented":[164,1]
,"initiated":[164,1]
,"deregistered":[164,1]
,"undeployed":[164,1]
,"*with":[164,1]
,"**while":[164,1]
,"*items":[164,1]
,"*points":[164,1]
,"closer":[164,1]
,"interest":[164,1,176,1]
,"*management":[164,1]
,"tools":[164,1,271,1]
,"moreover":[164,1]
,"*serializable":[164,1]
,"*finally":[164,1]
,"**once":[164,1]
,"*mbeanserver":[164,1]
,"shutsdown":[164,1]
,"unregistered":[164,1]
,"registercachemanager":[164,2]
,"registercaches":[164,2]
,"registercacheconfigurations":[164,2]
,"registercachestatistics":[164,1]
,"registermbeans":[164,1]
,"(net.sf.ehcache.cachemanager":[164,1]
,"registercachestatistics)":[164,1]
,"jdk":[165,1,266,1,268,2,277,1]
,"platform":[165,1,188,1]
,"=managementfactory.getplatformmbeanserver":[165,1]
,"(manager":[165,1]
,"true)":[165,1]
,"entirely":[166,1]
,"switches":[166,1]
,"on\u002Foff":[166,1]
,"incur":[166,2,182,1]
,"little":[166,1]
,"slfj":[168,1]
,"pertains":[168,1]
,"deploy":[168,1,256,1]
,"maven":[168,4,176,1,205,1,246,1]
,"kit":[168,3,205,2]
,"dependency":[168,1,205,5,227,2,230,1,246,1]
,"declarations":[168,1]
,"pom":[168,1,205,1]
,"<dependency>":[168,3,205,3]
,"<groupid>":[168,3,205,3,246,1]
,"org.slf4j":[168,3]
,"<\u002Fgroupid>":[168,3,205,3,246,1]
,"<artifactid>":[168,3,205,3,246,1]
,"slf4j-jdk14":[168,1]
,"<\u002Fartifactid>":[168,3,205,3,246,1]
,"<version>":[168,3,205,1,246,1]
,"1.5.8":[168,3]
,"<\u002Fversion>":[168,3,205,3,246,1]
,"<\u002Fdependency>":[168,3,205,3]
,"slf4j-log4j12":[168,1]
,"slf4j-simple":[168,1]
,"slf4j-api":[168,1]
,"jars":[168,1,177,1,186,1,220,1,224,1]
,"everything":[168,1,193,1]
,"seeks":[169,1]
,"trade":[169,1]
,"informing":[169,1]
,"production-support":[169,1]
,"developers":[169,1]
,"cluttering":[169,1]
,"warn":[169,1,269,1,277,1]
,"unusual":[169,1]
,"trace":[169,1,177,1,248,1,272,1]
,"surrounded":[169,1]
,"guard":[169,1]
,"incurred":[169,1]
,"restarting":[169,1]
,"shutting":[170,1,173,2,271,1]
,"cachemanager.shutdown":[171,1,271,2]
,"shutdownlistener":[171,1]
,"servletcontextlistener":[172,2]
,"descriptor":[172,1]
,"<listener>":[172,1]
,"<listener-class>":[172,1]
,"net.sf.ehcache.constructs.web.shutdownlistener":[172,1]
,"<\u002Flistener-class>":[172,1]
,"<\u002Flistener>":[172,1]
,"net.sf.ehcache.enableshutdownhook=true":[173,1]
,"hooks":[173,1,235,1]
,"inherently":[173,1,265,1]
,"sequence":[173,1]
,"preventing":[173,2]
,"program":[173,1]
,"system.exit":[173,1]
,"non-daemon":[173,1]
,"exits":[173,1]
,"terminated":[173,1]
,"ctrl-c":[173,1]
,"corresponds":[173,1]
,"kill":[173,4]
,"-sigterm":[173,1]
,"pid":[173,4]
,"-15":[173,1]
,"aborts":[173,1]
,"sigkill":[173,1]
,"signal":[173,1]
,"-sigkill":[173,1]
,"terminateprocess":[173,1]
,"windows":[173,1]
,"dirty":[174,3]
,"debugger":[176,2,177,3,272,2]
,"ehcache-1.x-remote-debugger.jar":[176,1]
,"join":[176,1,177,1]
,"report":[176,1]
,"window":[176,1]
,"identify":[176,1,243,1]
,"packaging":[176,1]
,"executable":[176,1]
,"tested":[176,1,239,1,255,4]
,"rmi-based":[176,1,275,1]
,"-jar":[177,1]
,"ehcache-debugger-1.5.0.jar":[177,1]
,"path_to_ehcache.xml":[177,1]
,"[cachetomonitor]":[177,1]
,"arguments":[177,1,240,1]
,"app\u002Fconfig\u002Fehcache.xml":[177,1]
,"distributedcache1":[177,1]
,"print":[177,1]
,"prints":[177,4]
,"class-path":[177,3]
,"manifest":[177,2]
,"debugger\u0027s":[177,1]
,"leave":[177,1,268,1]
,"blank":[177,1,200,1]
,"(showing":[177,1]
,"classpath)":[177,1]
,"lib\u002Fmy.jar":[177,1]
,"lib\u002Fmyloggerjar":[177,1]
,"output":[177,2]
,"periodically":[177,1,217,1,265,1]
,"produced":[177,1]
,"remotedebuggertest":[177,1]
,"samplecache19":[177,1]
,"samplecache20":[177,1]
,"samplecache26":[177,1]
,"samplecache42":[177,1]
,"samplecache33":[177,1]
,"samplecache51":[177,1]
,"samplecache40":[177,1]
,"samplecache32":[177,1]
,"samplecache18":[177,1]
,"samplecache25":[177,1]
,"samplecache9":[177,1]
,"samplecache15":[177,1]
,"samplecache56":[177,1]
,"samplecache31":[177,1]
,"samplecache7":[177,1]
,"samplecache12":[177,1]
,"samplecache17":[177,1]
,"samplecache45":[177,1]
,"samplecache41":[177,1]
,"samplecache30":[177,1]
,"samplecache13":[177,1]
,"samplecache46":[177,1]
,"samplecache4":[177,1]
,"samplecache36":[177,1]
,"samplecache29":[177,1]
,"samplecache50":[177,1]
,"samplecache37":[177,1]
,"samplecache49":[177,1]
,"samplecache48":[177,1]
,"samplecache38":[177,1]
,"samplecache6":[177,1]
,"samplecache2":[177,1]
,"samplecache55":[177,1]
,"samplecache16":[177,1]
,"samplecache27":[177,1]
,"samplecache11":[177,1]
,"samplecache3":[177,1]
,"samplecache54":[177,1]
,"samplecache28":[177,1]
,"samplecache10":[177,1]
,"samplecache8":[177,1]
,"samplecache47":[177,1]
,"samplecache5":[177,1]
,"samplecache53":[177,1]
,"samplecache39":[177,1]
,"samplecache23":[177,1]
,"samplecache34":[177,1]
,"samplecache22":[177,1]
,"samplecache44":[177,1]
,"samplecache52":[177,1]
,"samplecache24":[177,1]
,"samplecache35":[177,1]
,"samplecache21":[177,1]
,"samplecache43":[177,1]
,"[key":[177,2]
,"=this":[177,2]
,"value=this":[177,2]
,"version=1":[177,1]
,"hitcount=0":[177,2]
,"creationtime":[177,2]
,"=1210656023456":[177,1]
,"lastaccesstime":[177,2]
,"version=1210656025351":[177,1]
,"=1210656024458":[177,1]
,"going":[177,1,181,1,185,1,240,1,263,2,272,2]
,"(log4j)":[177,1,272,1]
,"finest":[177,1,272,1]
,"(jdk)":[177,1,272,1]
,"net.sf.ehcache.distribution":[177,1,240,1,272,1]
,"volume":[177,1,272,1]
,"joined":[177,1,272,1]
,"look":[177,1,183,2,268,1,272,1]
,"peers":[177,1,269,1,272,1]
,"faq":[177,1,217,1,260,1]
,"commonly":[177,1,226,1,239,1,243,1,265,1]
,"solutions":[177,1,203,1]
,"forums":[177,1,179,1]
,"mailing":[177,1,179,1]
,"contact":[177,1,230,1]
,"recipes":[178,1,179,3]
,"concise":[179,1]
,"suggestions":[179,1]
,"ideas":[179,1]
,"lists":[179,1]
,"recipe":[179,1,180,1,182,1,183,1,184,1,185,1,186,1,187,1]
,"grails":[179,2,181,10,250,1,251,5,252,4,253,3]
,"2nd-level":[179,1]
,"properly":[179,1,182,1]
,"beneficial":[179,1]
,"deflect":[179,1,183,1]
,"overload":[179,2,184,2,185,2]
,"simultaneously":[179,1,184,4]
,"thundering":[179,1,184,4]
,"herd":[179,1,184,4]
,"bottleneck":[179,1,185,1]
,"wrapper":[179,1,187,2,244,3]
,"you\u0027d":[180,1,186,1,195,1]
,"entirety":[180,1,195,1]
,"served":[180,1,195,1]
,"modern":[180,1,195,1]
,"hardware":[180,1,195,1]
,"5,000":[180,1,195,1]
,"affording":[180,1,195,1]
,"infrequently":[180,1,195,1]
,"-your":[180,1]
,"filtering":[180,1,196,1]
,"re-deploy":[180,1,196,1]
,"away":[180,1,196,1,274,1]
,"you\u0027ll":[180,2,196,2]
,"(note":[180,1,230,1]
,"installed":[180,1,196,1]
,"application)":[180,1,196,1,231,1]
,"re-start)":[180,1,196,1]
,"setup":[180,1,196,1]
,"-add":[180,1,196,1]
,"<web-app":[180,1,196,1,198,1]
,"xmlns=\u0022":[180,1,196,1,198,1]
,"http:\u002F\u002Fxmlns.jcp.org\u002Fxml\u002Fns\u002Fjavaee":[180,2]
,"xsi:schemalocation=\u0022":[180,1,196,1,198,1]
,"http:\u002F\u002Fxmlns.jcp.org\u002Fxml\u002Fns\u002Fjavaee\u002Fweb-app_2_5.xsd":[180,1]
,"version=\u0022":[180,1,181,1,196,1,198,1,210,1,211,1,234,1,251,1]
,"<filter>":[180,1,196,1,198,3]
,"<filter-name>":[180,2,196,2,198,7]
,"<\u002Ffilter-name>":[180,2,196,2,198,7]
,"<filter-class>":[180,1,196,1,198,3]
,"net.sf.ehcache.constructs.web.filter.simplepagecachingfilter":[180,1,196,1,198,1]
,"<\u002Ffilter-class>":[180,1,196,1,198,3]
,"<\u002Ffilter>":[180,1,196,1,198,3]
,"<!--this":[180,1,196,1,198,1]
,"<filter-mapping>":[180,1,196,1,198,4]
,"<url-pattern>\u002F*<\u002Furl-pattern>":[180,1,196,1]
,"<\u002Ffilter-mapping>":[180,1,196,1,198,4]
,"<\u002Fweb-app>":[180,1,196,1]
,"-configure":[180,1,196,1]
,"reasonable":[180,1,196,1]
,".\u002Fmain\u002Fconfig\u002Fehcache.xsd":[180,1,196,1,198,1]
,"-start":[180,1,196,1]
,"pertaining":[180,1]
,"1.2rc1":[181,2,251,2]
,"ship":[181,1,251,1]
,"datasource.groovy":[181,1,251,1]
,"{cache.use_second_level_cache=true":[181,1,251,1]
,"cache.use_query_cache=true":[181,1,251,1]
,"cache.provider_class=\u0027org.hibernate.cache.ehcacheprovider":[181,1,251,1]
,"overriding":[181,1,193,1,251,1]
,"template":[181,1,230,1,251,1]
,"customize":[181,1,251,1]
,"conf":[181,1,251,1]
,"datasource.groovy)":[181,1,251,1]
,"demo":[181,1,213,2,251,1]
,"starter":[181,1,251,1]
,"1.0":[181,1,210,1,211,1,234,1,251,1]
,"encoding=\u0022":[181,1,210,1,211,1,234,1,251,1]
,"utf-8":[181,1,210,1,211,1,234,1,251,1]
,"org.hibernate.cache.updatetimestampscache":[181,1,212,1,251,1]
,"org.hibernate.cache.standardquerycache":[181,1,212,1,251,1]
,"springcache":[181,3,252,3]
,"bean":[181,2,243,1,252,2]
,"(typically":[181,1,184,1,252,1]
,"methods)":[181,1,252,1]
,"controllers":[181,1,230,2,252,1]
,"controller":[181,1,230,4,252,1]
,"ehcache-web":[181,1,192,1,252,1]
,"clustering":[181,1,253,2,257,2]
,"sessions":[181,2,253,3]
,"blog":[181,1,186,1,219,1,223,1]
,"great":[181,1,219,1]
,"introduction":[181,1,192,1,219,1]
,"tomcat":[181,1,238,1,239,7,240,8,253,1,268,3,269,1]
,"addresses":[182,1,184,1,185,1]
,"sors)":[182,1]
,"weren\u0027t":[182,1]
,"mind":[182,1]
,"don\u0027t":[182,1,217,1,240,1]
,"unadvisable":[182,1]
,"programmer":[182,1]
,"concern":[182,1]
,"data-freshness":[182,1]
,"discusses":[183,1]
,"desirable":[183,1]
,"querying":[183,1]
,"excessively":[183,1]
,"unnecessarily":[183,1]
,"signaling":[183,1]
,"intentional":[183,1]
,"non-existent":[183,1]
,"\u002F\u002Fcache":[183,1]
,"null))":[183,1]
,"{\u002F\u002Fnothing":[183,1]
,"expired)":[183,1]
,"else":[183,2]
,"{\u002F\u002Fthere":[183,1]
,"{\u002F\u002Fa":[183,2]
,"(making":[183,1]
,"some.cache.name":[183,1]
,"coordinate":[184,1]
,"serviced":[184,1]
,"users)":[184,1]
,"story":[184,3]
,"surfaced":[184,1]
,"approximately":[184,4]
,"publication":[184,1]
,"clicked":[184,1]
,"evaluating":[184,1]
,"(line":[184,1]
,"105)":[184,1]
,"contents":[184,1,265,1]
,"reach":[184,1,203,1]
,"conclusion":[184,1]
,"designer":[184,1]
,"spikes":[184,1]
,"activity":[184,1]
,"worse":[184,1,185,1]
,"simultaneous":[184,1,185,1]
,"increases":[184,1]
,"easy":[185,1]
,"understand":[185,1]
,"read-mostly":[185,2]
,"use-cases":[185,1]
,"hundreds":[185,1,262,1]
,"scenarios":[185,1,193,1,200,1,278,1]
,"frequent":[185,1]
,"almost":[185,1,208,1]
,"slows":[185,1]
,"killed":[185,1]
,"heavy":[185,1,216,1]
,"quick":[185,1]
,"ensured":[185,1]
,"saves":[185,1]
,"back-end":[185,2]
,"cache-write":[185,1]
,"database-write":[185,1]
,"finished":[185,1]
,"mean":[185,1,277,1]
,"spread":[185,1]
,"consolidate":[185,1]
,"writemode":[185,1]
,"write_behind":[185,1]
,"email":[185,1,230,1]
,"pulling":[185,1]
,"un-clustered":[185,1]
,"background":[185,2]
,"scaled":[185,1]
,"reasons":[185,1,257,1]
,"jvms":[185,1]
,"loss":[185,1]
,"advanced":[185,1,211,1]
,"nature":[185,1]
,"restrictions":[185,1,257,1]
,"code.google.com":[186,1,224,5]
,"successor":[186,1]
,"spring-modules":[186,1]
,"composite":[186,1,224,1]
,"getdog":[186,4,224,4]
,"fido":[186,7,224,7]
,"generating":[186,1,224,1]
,"returning":[186,1,224,1]
,"spot":[186,2,224,2]
,"repeated":[186,1,224,1]
,"@cacheable":[186,1,222,2,223,3,224,1]
,"(name=\u0022":[186,1,224,1]
,"beans":[186,1,224,1]
,"declaration":[186,1,224,1,263,1]
,"<ehcache:annotation-driven":[186,1,224,1]
,"cache-manager=\u0022":[186,1,224,1]
,"ehcachemanager":[186,1,224,1]
,"tedious":[187,1]
,"value-based":[187,1]
,"(like":[187,1]
,"hashmap)":[187,1]
,"hide":[187,1]
,"here\u0027s":[187,1]
,"cachewrapper":[187,2,244,4]
,"{void":[187,1,244,1]
,"net.sf.ehcache.ehcache":[187,1]
,"net.sf.ehcache.element":[187,1,220,1]
,"ehcachewrapper":[187,2,244,3]
,"{this.cachename":[187,1,244,1]
,"=cachename":[187,1,244,1]
,"this.cachemanager":[187,1,244,1]
,"=cachemanager":[187,1,244,1]
,"{getcache":[187,1,244,1]
,".put":[187,1,244,1]
,"=getcache":[187,1,244,1]
,".get":[187,1,244,1]
,"(v)":[187,1,244,1]
,"2.10.1":[188,1]
,"tables":[188,1,212,1]
,"amazing":[192,1]
,"gzipping":[192,1,193,3,200,1]
,"transmission":[192,1]
,"excellent":[192,1,222,1]
,"candidates":[192,1]
,"largest":[192,1]
,"concepts":[193,1]
,"compressible":[193,1]
,"http":[193,6]
,"responses":[193,4]
,"html":[193,1]
,"json":[193,1]
,"fragments)":[193,1]
,"content":[193,2,200,4,235,1]
,"text":[193,1]
,"text\u002Fhtml":[193,1]
,"uri":[193,1]
,"\u002Fadmin\u002Fsomepage.jsp":[193,1]
,"id=1234&name=beagle":[193,1]
,"technique":[193,1]
,"wide":[193,1]
,"host":[193,1,240,1,269,2]
,"domains":[193,1]
,"software":[193,1]
,"inserted":[193,1,265,1]
,"parse":[193,1]
,"calculatekey":[193,1]
,"(javax.servlet.http.httpservletrequest)":[193,1]
,"init-param":[193,2]
,"sub-classing":[193,1]
,"useless":[193,1]
,"duplicate":[193,1]
,"blockingtimeoutmillis":[193,2]
,"overwhelmed":[193,1]
,"responded":[193,1]
,"net.sf.ehcache.constructs.blocking.locktimeoutexception":[193,1]
,"efficiencies":[193,1]
,"speedups":[193,1]
,"gained":[193,1]
,"gzipped":[193,2,200,3]
,"accept":[193,4]
,"gzip":[193,9,200,2,239,1,257,1]
,"encoding":[193,6,200,1]
,"http1.1":[193,1]
,"advertise":[193,1]
,"header":[193,3,200,2,278,1]
,"browsers":[193,3,200,1]
,"5.2":[193,1]
,"macintosh":[193,1]
,"capable":[193,1]
,"accepting":[193,1]
,"robots":[193,1]
,"advertised":[193,1]
,"acceptance":[193,1]
,"accept-encoding":[193,1]
,"ungzipped":[193,1]
,"ungzipping":[193,1]
,"headers":[193,5]
,"simplecachingheaderspagecachingfilter":[193,1,198,2]
,"etag":[193,1]
,"last-modified":[193,1]
,"conditional":[193,2]
,"ever":[193,1,208,1]
,"natural":[193,1,243,1]
,"defraying":[193,1]
,"init-params":[193,2]
,"varyheader":[193,2]
,"-set":[193,1]
,"vary:accept-encoding":[193,1]
,"proxies":[193,1]
,"<init-param>":[193,1,198,6]
,"<param-name>":[193,1,198,6]
,"<\u002Fparam-name>":[193,1,198,6]
,"<param-value>":[193,1,198,6]
,"<\u002Fparam-value>":[193,1,198,6]
,"<\u002Finit-param>":[193,1,198,6]
,"re-entrance":[193,1]
,"reentered":[193,1,200,1]
,"reentry":[193,1]
,"situation":[193,1]
,"monitored":[193,1]
,"gzips":[193,1]
,"variant":[193,1]
,"applicable":[193,1]
,"time-or":[195,1]
,"user-specific":[195,1]
,"serve":[195,1]
,"web-page":[196,1]
,"(these":[196,1]
,"http:\u002F\u002Fjava.sun.com\u002Fxml\u002Fns\u002Fjavaee":[196,2,198,2]
,"http:\u002F\u002Fjava.sun.com\u002Fxml\u002Fns\u002Fjavaee\u002Fweb-app_2_5.xsd":[196,1]
,"cachepage1cachingfilter":[198,4]
,"suppressstacktrace":[198,3]
,"net.sf.ehcache.constructs.web.filter.simplepagefragmentcachingfilter":[198,1]
,"net.sf.ehcache.constructs.web.filter.simplecachingheaderspagecachingfilter":[198,1]
,"cachedpage2cache":[198,2]
,"<url-pattern>\u002Fcachedpage.jsp":[198,1]
,"<\u002Furl-pattern>":[198,4]
,"<dispatcher>":[198,3]
,"<\u002Fdispatcher>":[198,3]
,"forward":[198,1]
,"<url-pattern>\u002Finclude\u002Ffooter.jsp":[198,1]
,"<url-pattern>\u002Ffragment\u002Fcachedfragment.jsp":[198,1]
,"<url-pattern>\u002Fcachedpage2.jsp":[198,1]
,"auto\u002Fdefault\u002Fpath":[198,1]
,"<!--page":[198,1]
,"simplecachingheaderstimeoutpagecachingfilter":[198,1]
,"filternonreentrantexception":[200,2]
,"filter\u0027s":[200,1]
,"dofilter":[200,1]
,"reentrant":[200,1]
,"unblocked":[200,1]
,"responseheadersnotmodifiableexception":[200,2]
,"alreadygzippedexception":[200,1]
,"triple":[200,1]
,"unreadable":[200,1]
,"httpservletresponse":[200,1]
,"setheader":[200,2]
,"overwrites":[200,1]
,"accelerating":[203,1]
,"reducing":[203,1]
,"reliance":[203,1]
,"fetching":[203,1]
,"powerful":[203,1]
,"maximizing":[203,1]
,"plug-in":[203,1]
,"substantially":[203,1]
,"leverage":[203,1]
,"intelligent":[203,1]
,"high-speed":[203,1]
,"employ":[203,1]
,"integrates":[203,1,246,1]
,"object\u002Frelational":[203,1]
,"gavin":[203,1,217,1]
,"king":[203,1,217,1]
,"maintainer":[203,1]
,"committer":[203,1,217,1]
,"go\u0027s":[203,1,217,1]
,"first-class":[203,1,217,1]
,"install":[203,2,227,7,230,2]
,"provider":[203,2,204,1,206,1,207,3,208,1,216,7,217,4,226,1,230,8,277,1]
,"project\u0027s":[203,2]
,"entity":[203,2]
,"http:\u002F\u002Fwww.hibernate.org\u002F":[203,1]
,"notices":[203,1]
,"-please":[203,1]
,"4.x":[203,2,206,1]
,"2.7.5":[203,1]
,"patch":[203,7]
,"indicated":[203,1]
,"https:\u002F\u002Fhibernate.atlassian.net\u002Fbrowse\u002Fhhh-8732":[203,1]
,"afterwards":[203,1]
,"re-build":[203,1]
,"artifacts":[203,3,205,1]
,"https:\u002F\u002Fgithub.com\u002Fhibernate\u002Fhibernate-orm\u002Fpull\u002F643.patch":[203,1]
,"https:\u002F\u002Fgithub.com\u002Fhibernate\u002Fhibernate-orm\u002Ftree\u002F4.3":[203,1]
,"github":[203,1,259,1]
,"custom-built":[203,1]
,"ehcache-core":[204,1,205,1]
,"http:\u002F\u002Fsourceforge.net\u002Fprojects\u002Fehcache\u002Ffiles\u002Fehcache-core\u002F":[204,1]
,"building":[205,1]
,"intend":[205,1]
,"kits":[205,1]
,"artifact":[205,1]
,"repository":[205,1]
,"(pom.xml)":[205,2]
,"<repository>":[205,1]
,"<id>":[205,1]
,"terracotta-releases":[205,1]
,"<\u002Fid>":[205,1]
,"<url>":[205,1]
,"http:\u002F\u002Fwww.terracotta.org\u002Fdownload\u002Freflector\u002Freleases":[205,1]
,"<\u002Furl>":[205,1]
,"<releases>":[205,1]
,"<enabled>":[205,2]
,"<\u002Fenabled>":[205,2]
,"<\u002Freleases>":[205,1]
,"<snapshots>":[205,1]
,"<\u002Fsnapshots>":[205,1]
,"<\u002Frepository>":[205,1]
,"net.sf.ehcache":[205,1,246,1]
,"<version>${ehcacheversion}":[205,1]
,"hibernate-ehcache":[205,6]
,"integration":[205,2,220,1,222,1,227,1,230,1,239,1,268,1]
,"org.hibernate":[205,2]
,"<version>${hibernateversion}":[205,1]
,"4.0.0":[205,2]
,"hibernate.cfg.xml":[206,2]
,"hibernate.properties":[206,1]
,"format":[206,1,257,1]
,"3.3":[206,1,216,5]
,"<property":[206,4,207,5,216,1,244,14,246,5]
,"hibernate.cache.region.factory_class":[206,4,207,3]
,"<\u002Fproperty>":[206,4,207,5,216,1]
,"net.sf.ehcache.hibernate.singletonehcacheregionfactory":[206,1]
,"org.hibernate.cache.ehcache.ehcacheregionfactory":[206,1,207,2]
,"org.hibernate.cache.ehcache.singletonehcacheregionfactory":[206,1]
,"-\u0027false":[207,1]
,"-by":[207,1]
,"hibernate)":[207,1]
,"hibernate.cache.use_second_level_cache":[207,3]
,"hibernate.cache.use_query_cache":[207,3]
,"configurationresourcename":[207,2]
,"provider\u002Fregion-factory":[207,1]
,"searched":[207,1]
,"tells":[207,1]
,"ehcache-2.xml":[207,1]
,"factories":[207,1,216,1]
,"dedicated":[207,1]
,"net.sf.ehcache.configurationresourcename=\u002Fname_of_ehcache.xml":[207,1]
,"sessionfactory":[207,1]
,"configuration.setproperty":[207,1]
,"together":[207,1,235,2,244,1]
,"<prop":[207,3]
,"key=\u0022":[207,3,222,1]
,"<\u002Fprop>":[207,3]
,"told":[208,1]
,"com.somecompany.someproject.domain.country":[208,3,210,2,211,1]
,"<hibernate-mapping>":[208,2]
,"<class":[208,2]
,"table=\u0022":[208,2]
,"ut_countries":[208,2]
,"dynamic-update=\u0022":[208,2]
,"dynamic-insert=\u0022":[208,2]
,"<\u002Fclass>":[208,2]
,"<\u002Fhibernate-mapping>":[208,2]
,"read-write":[208,3,210,1,211,2,212,1]
,"nonstrict-read-write":[208,2,210,1,211,1,212,1]
,"read-only":[208,2,210,1,211,1,212,1]
,"@cache":[208,2]
,"@entity":[208,1]
,"(usage":[208,1]
,"=cacheconcurrencystrategy.read_write)":[208,1]
,"country":[208,1,211,2,212,2]
,"-caches":[208,3]
,"repeatable":[208,2]
,"compromised":[208,1]
,"gain":[209,1]
,"particularly":[209,1]
,"capping":[209,1]
,"swap":[209,1]
,"bases":[210,1]
,"cacheconcurrencystrategy":[210,1,211,1,212,1]
,"advancedsearchfacilities":[211,2]
,"doclet":[211,1]
,"accessor":[211,1]
,"facilities":[211,1,277,1]
,"*@hibernate.set":[211,1]
,"cascade=\u0022":[211,1]
,"inverse=\u0022":[211,1]
,"*@hibernate.collection-key":[211,1]
,"column=\u0022":[211,1]
,"country_id":[211,1]
,"*@hibernate.collection-one-to-many":[211,1]
,"com.wotif.jaguar.domain.advancedsearchfacility":[211,1]
,"*@hibernate.cache":[211,1]
,"getadvancedsearchfacilities":[211,1]
,"com.somecompany.someproject.domain.country.advancedsearchfacilities":[211,1]
,"450":[211,1]
,"standardquerycache":[212,1]
,"updatetimestampscache":[212,1]
,"tracks":[212,1]
,"timestamps":[212,1]
,"recent":[212,1,269,1]
,"recommend":[212,1,216,1,247,1]
,"querycache":[212,1]
,"query.setcacheregion":[212,3]
,"whatever":[212,1]
,"descriptive":[212,1]
,"query.administrativeareaspercountry":[212,1]
,"86400":[212,1]
,"getstreettypes":[212,1]
,"country)":[212,1]
,"hibernateexception":[212,1]
,"=createsession":[212,1]
,"=session.createquery":[212,1]
,"st.id":[212,1]
,"st.name":[212,2]
,"streettype":[212,1]
,"st.country.id":[212,1]
,"=:countryid":[212,1]
,"st.sortorder":[212,1]
,"desc":[212,1]
,"query.setlong":[212,1]
,"countryid":[212,1]
,"country.getid":[212,1]
,".longvalue":[212,1]
,"query.setcacheable":[212,2]
,"query.streettypes":[212,2]
,"query.list":[212,1]
,"{session.close":[212,1]
,"miller":[212,1]
,"article":[212,1,224,1,233,1,253,1]
,"non-locking":[212,1]
,"tutorial":[213,1]
,"cacheregionfactory":[213,1]
,"http:\u002F\u002Fsvn.terracotta.org\u002Fsvn\u002Fforge\u002Fprojects\u002Fhibernate-tutorial-web\u002Ftrunk":[213,1]
,"tips":[214,1]
,"session.find":[214,3]
,"query.find":[214,2]
,"query.iterate":[214,2]
,"viewing":[215,1]
,"(jmx)":[215,1]
,"ehcachehibernatembean":[215,1]
,"exposes":[215,1]
,"basically":[215,1]
,"interfaces":[215,1]
,"ehcachestats":[215,2]
,"hibernatestats":[215,2]
,"imply":[215,1]
,"hit\u002Fmiss\u002Fput":[215,1]
,"rates":[215,1]
,"maxelementinmemory":[215,1]
,"tti)":[215,1]
,"enable\u002Fdisable":[215,1]
,"3.2":[216,3]
,"deprecated":[216,2]
,"3.5":[216,3]
,"forward-compatible":[216,1]
,"ehcacheprovider":[216,1,262,1]
,"anyone":[216,1]
,"upgrade":[216,2]
,"preparation":[216,1]
,"recognition":[216,1]
,"marked":[216,1]
,"net.sf.ehcache.hibernate.ehcacheprovider":[216,1]
,"leaves":[216,1]
,"avoided":[216,1]
,"unification":[216,1]
,"terracotta\u0027s":[216,1]
,"september":[216,1]
,"2009":[216,1,217,1,233,1]
,"hibernate.cache.provider_class":[216,1]
,"org.terracotta.hibernate.terracottahibernatecacheprovider":[216,1]
,"featured":[216,1]
,"ehcacheregionfactory":[216,1]
,"superset":[216,1]
,"app\u0027s":[217,1]
,"2.1":[217,2]
,"cacheprovider":[217,1]
,"relationship":[217,1]
,"projects":[217,1]
,"cooperated":[217,1]
,"introduced":[217,1]
,"query.executeupdate":[217,1]
,"invalidates":[217,1]
,"regions":[217,1]
,"(those":[217,1]
,"corresponding":[217,1]
,"tables)":[217,1]
,"procedures":[217,1]
,"hhh-2224":[217,1]
,"https:\u002F\u002Fhibernate.atlassian.net\u002Fbrowse\u002Fhhh-2224":[217,1]
,"identifies":[217,1]
,"treat":[217,1]
,"differently":[217,1]
,"fall-through":[217,1]
,"soft-locked":[217,2]
,"evicted)":[217,1]
,"obviously":[217,1]
,"non-fatal":[217,1]
,"rise":[217,1]
,"ships":[219,1]
,"community":[219,1]
,"actively":[219,1]
,"engaged":[219,1]
,"lots":[219,1,240,1]
,"raymond":[219,1]
,"camden\u0027s":[219,1]
,"in-depth":[219,1]
,"analysis":[219,1]
,"days":[219,1]
,"aaron":[219,1]
,"west":[219,1]
,"covering":[219,1]
,"day":[219,1,265,1]
,"lib":[220,1,227,1,231,1]
,"<cfobject":[220,2]
,"<cfset":[220,10]
,"cache=cachemanager.getinstance":[220,1]
,".getcache":[220,1]
,"mybookcache":[220,1]
,"\u0022)>":[220,3]
,"mybookelement=#":[220,1]
,"mybook":[220,9]
,"<cfif":[220,3]
,"isdefined":[220,2]
,"mybookelement":[220,4]
,"<cfoutput>":[220,2]
,"<br":[220,4]
,"<\u002Fcfoutput>":[220,2]
,"isstruct":[220,1]
,"(mybookelement.getobjectvalue":[220,1]
,"())>":[220,1]
,"<strong>":[220,2]
,"<\u002Fstrong>":[220,2]
,"<p\u002F>":[220,1]
,"<!--found":[220,1]
,"mybookelement.getobjectvalue":[220,1]
,"<\u002Fcfif>":[220,3]
,"<cfelse>":[220,1]
,"<!--object":[220,1]
,"ahead":[220,1]
,"=structnew":[220,1]
,"()>":[220,1]
,"=structinsert":[220,4]
,"(mybook":[220,4]
,"cachetime":[220,2]
,"lstimeformat":[220,1]
,"(now":[220,1]
,"\u0027hh:mm:sstt\u0027)":[220,1]
,"1)>":[220,4]
,"title":[220,3]
,"isbn":[220,3,222,2]
,"abcd123456":[220,1]
,"mybookelement.init":[220,1]
,"mybook)>":[220,1]
,"(mybookelement)>":[220,1]
,"3.1":[222,4,223,4]
,"years":[222,1]
,"abstraction":[222,1,230,1]
,"transparently":[222,1]
,"manual":[222,3,262,1]
,"(value=\u0022":[222,1]
,"isbn.id":[222,1]
,"findmanual":[222,1]
,"(isbn":[222,1]
,"checkwarehouse)":[222,1]
,"@cacheevict":[222,2]
,"clears":[222,1]
,"manuals":[222,1]
,"allentries=true)":[222,1]
,"loadmanuals":[222,1]
,"(inputstream":[222,1]
,"led":[223,1]
,"eric":[223,1]
,"dalquist":[223,1]
,"predates":[223,1]
,"findmessage":[223,2]
,"messagecache":[223,2]
,"(cachename":[223,2]
,"(long":[223,1]
,"id)":[223,1,243,1,244,2]
,"@triggersremove":[223,3]
,"invalidation":[223,1]
,"messagescache":[223,1]
,"=when.after_method_invocation":[223,1]
,"=true)":[223,1]
,"addmessage":[223,1]
,"(message":[223,1]
,"message)":[223,1]
,"http:\u002F\u002Fblog.goyello.com\u002F2010\u002F07\u002F29\u002Fquick-start-with-ehcache-annotations-for-spring\u002Ffor":[223,1]
,"explaining":[223,1]
,"links":[223,1]
,"http:\u002F\u002Fcode.google.com\u002Fp\u002Fehcache-spring-annotations":[224,1]
,"http:\u002F\u002Fcode.google.com\u002Fp\u002Fehcache-spring-annotations\u002Fwiki\u002Fusingcacheable":[224,1]
,"http:\u002F\u002Fwww.jeviathon.com\u002F2010\u002F04\u002Fcaching-java-methods-with-spring-3.html":[224,1]
,"jruby":[225,1,226,3,227,3,228,2,229,4,230,7,231,1]
,"rails":[225,1,226,1,227,8,228,2,230,21,231,5,237,2]
,"ruby-ehcache":[226,1]
,"strength":[226,1]
,"jruby-ehcache":[227,4,229,2,230,1,231,1]
,"gem":[227,4,229,1,230,2,231,1]
,"jgem":[227,3]
,"sudo":[227,1]
,"gems":[227,1,229,2,230,1]
,"jruby-ehcache-rails2":[227,2]
,"jruby-ehcache-rails3":[227,2]
,"jruby-ehcache-rails":[227,1]
,"gemfile":[227,1,230,1]
,"bundle":[227,1,230,2,268,1]
,"pull":[227,1]
,"2.4.6":[227,1]
,"bundled":[227,1]
,"ehcache-core.jar":[227,1]
,"jruby)":[227,1]
,"rails)":[227,1]
,"native":[228,1]
,"ruby":[228,2,229,4]
,"reside":[228,1]
,"\u0027ehcache":[229,2,230,1]
,"interpreter":[229,1]
,"-rubygems":[229,1]
,"globally":[229,1,230,1,265,1]
,"rubyopt":[229,1]
,"export":[229,1]
,"rubyopt=rubygems":[229,1]
,"=ehcache":[229,2,230,1]
,":cachemanager.new":[229,2]
,"(call":[229,1]
,"=manager.cache":[229,3]
,"{:ttl":[229,2]
,"120})":[229,2]
,"unlessexist":[229,1]
,"ifabsent":[229,1]
,"putifabsent":[229,1]
,"elementevictiondata":[229,2]
,"element\u2019s":[229,1]
,"expiresin":[229,1]
,"elementattributes":[229,1]
,"simpleehcache":[229,1]
,"{answer.value}":[229,1]
,"question":[229,3]
,"\u0027unknown":[229,1]
,"{question}":[229,1]
,"cachemanager.new":[229,1]
,":ttl":[229,1]
,"ruby\u0027s":[230,1]
,"models":[230,1]
,"everywhere":[230,1]
,"environment.rb":[230,1]
,"lines":[230,2]
,"config\u002Fenvironment.rb":[230,1]
,":cachemanager.new.cache":[230,1]
,"rails-managed":[230,1]
,"underneath":[230,1]
,"memcached":[230,2,235,1]
,"switching":[230,1]
,"development.rb":[230,2]
,"production.rb)":[230,1]
,"config.cache_store":[230,2]
,"=:ehcache_store":[230,3]
,"{:cache_name":[230,1]
,"\u0027rails_cache":[230,1]
,":ehcache_config":[230,3]
,"\u0027ehcache.xml":[230,1]
,"rails.cache":[230,1]
,":cache_name":[230,1]
,"absolute":[230,1]
,"app\u2019s":[230,1]
,"rails.cache.write":[230,2]
,"rails.cache.read":[230,1]
,"agnostic":[230,1]
,"switch":[230,1]
,"production)":[230,1]
,"hash":[230,2]
,"camelcase":[230,1]
,"underscore":[230,1]
,"notation":[230,1]
,"(\u0027key":[230,1]
,"\u0027value":[230,1]
,":time_to_idle":[230,1]
,"60.seconds":[230,2]
,":timetolive":[230,1]
,"600.seconds)":[230,1]
,"caches_action":[230,2]
,":index":[230,2]
,":expires_in":[230,1]
,":unless_exist":[230,1]
,"config.action_controller.perform_caching":[230,2]
,"=true":[230,2]
,"config.action_controller.cache_store":[230,1]
,"jruby.org":[230,1]
,"rails-bigmemory":[230,2]
,"http:\u002F\u002Fjruby.org\u002Frails3.rb":[230,1]
,"scaffold":[230,2]
,"contacts":[230,3]
,"email_address":[230,1]
,"contactscontroller.rb":[230,1]
,":show":[230,1]
,"expire_action":[230,4]
,":action":[230,4]
,"\u0027index":[230,3]
,"\u0027show":[230,1]
,":id":[230,1]
,"params":[230,1]
,"[:id]":[230,1]
,"destroy":[230,1]
,"ehcache-jruby":[230,1]
,"\u0027ehcache-jruby-rails3":[230,1]
,"it.)":[230,1]
,".rb":[230,1]
,"rake":[230,2]
,"db:create":[230,1]
,"db:migrate":[230,1]
,"ready":[230,1]
,"editing":[230,1]
,"deleting":[230,1]
,"http:\u002F\u002Flocalhost:3000\u002Fcontacts":[230,1]
,"ehcache-core-ee.jar":[231,1]
,"overflowtooffheap=\u0022":[231,1]
,"cycles":[231,1]
,"maxdirectmemorysize":[231,2]
,"degradation":[231,1]
,"commands":[231,1]
,"-j-dcom.tc.productkey.path=\u002Fpath\u002Fto\u002Fkey":[231,1]
,"-j-xx:maxdirectmemorysize=2g":[231,1]
,"points":[231,1]
,"license":[231,1]
,"unused":[231,1]
,"uses)":[231,1]
,"(gae)":[233,1]
,"ehcache-googleappengine":[233,1]
,"combines":[233,1]
,"google\u0027s":[233,2]
,"memcache":[233,1]
,"worlds":[233,1]
,"-ehcache":[233,2]
,"microseconds":[233,1]
,"60ms":[233,1]
,"client-server":[233,1]
,"memcacheg":[233,1,235,7]
,"-because":[233,1]
,"cheaper":[233,1]
,"restricts":[233,1]
,"networking":[233,1]
,"threading":[233,1]
,"workarounds":[233,1]
,"june":[233,1]
,"http:\u002F\u002Fgregluck.com\u002Fblog\u002F?":[233,1]
,"s=limitations":[233,1]
,"evidence":[233,1]
,"this)":[233,1]
,"<cachemanagerpeerproviderfactory":[234,1,263,1]
,"class=":[234,2]
,".\u002F>":[234,2]
,"<cachemanagerpeerlistenerfactory":[234,1,246,1,263,1,278,1]
,"omitted":[234,1]
,"strategy=none":[234,1]
,"replicators":[234,1]
,"bootstrapcacheloaderfactory":[234,1]
,"<!--example":[234,1]
,"cache-->":[234,1]
,"hierarchy":[235,1]
,"sits":[235,1]
,"combining":[235,1]
,"elegantly":[235,1]
,"memcachedg":[235,1]
,"memorystore\u0027s":[235,1]
,"acceleration":[235,2]
,"appengine-web.xml":[235,1]
,"<static-files>":[235,1]
,"<include":[235,1]
,"path=\u0022\u002F**.png":[235,1]
,"<exclude":[235,1]
,"path=\u0022\u002Fdata\u002F**.png":[235,1]
,"<\u002Fstatic-files>":[235,1]
,"troubleshooting":[236,1,248,1,257,1,273,1]
,"noclassdeffounderror":[236,1]
,"java.lang.noclassdeffounderror":[236,1]
,"java.rmi.server.uid":[236,1]
,"restricted":[236,1]
,"easiest":[237,1]
,"play":[237,1]
,"increment":[237,1]
,"decrement":[237,1]
,"documents":[239,1]
,"5.5":[239,1,268,1]
,"rejoining":[240,1]
,"reload":[240,1]
,"restart\u002Freload":[240,1]
,"rejoin":[240,1]
,"fine":[240,2,268,1,277,1]
,"peer":[240,2,263,1,269,2,278,2]
,"nested":[240,2,269,2,278,1]
,"java.io.eofexception":[240,1]
,"rmi":[240,4,266,1,269,1]
,"$tomcat_home\u002Fcommon\u002Flib":[240,1]
,"fixes":[240,2]
,"class-loader":[240,1]
,"leak":[240,3]
,"continually":[240,1]
,"redeploy":[240,2]
,"leaks":[240,1]
,"$tomcat\u002Fcommon\u002Flib":[240,1]
,"-problem":[240,1]
,"rmicachepeer":[240,2]
,"java.rmi.unmarshalexception":[240,1]
,"java.net.malformedurlexception":[240,1]
,"files\u002Fapache":[240,1]
,"spaces":[240,2]
,"worked":[240,1]
,"workaround":[240,2]
,"tomcat\u0027s":[240,2]
,"server.xml":[240,2]
,"stops":[240,2]
,"occurring":[240,2,272,1]
,"<host>":[240,2]
,"hosts":[240,2]
,"connector":[240,1]
,"hitting":[240,1]
,"presently":[240,1]
,"unknown":[240,1]
,"tomcat-specific":[240,1]
,"object\u002Fdata":[242,1,243,1]
,"(dao\u002Fdal)":[242,1,243,1]
,"dao\u002Fdal":[243,2]
,"instantiate":[243,3]
,"member":[243,2]
,"dao":[243,4,244,6]
,"identifying":[243,1]
,"kinds":[243,1]
,"tolerate":[243,1]
,"cacheable":[243,1,244,2]
,"getbyid":[243,1,244,1]
,"findxxx":[243,1]
,"guice":[243,3]
,"setter":[243,1]
,"setcache":[243,1,244,1]
,"injection":[243,1]
,"methodology":[243,1,244,1]
,"bootstrap":[243,1]
,"dao-based":[244,1]
,"wiring":[244,1]
,"petdao":[244,4]
,"modeled":[244,1]
,"petclinic":[244,1]
,"genericdao":[244,5]
,"extend":[244,1]
,"simplejdbctemplate":[244,3]
,"job":[244,1]
,"shortly":[244,1]
,"cachewrapper.java":[244,1]
,"get\u002Fput":[244,1]
,"ehcachewrapper.java":[244,1]
,"cacheentryadapter":[244,1]
,"<v>":[244,1]
,"adapter)":[244,1]
,"genericdao.java":[244,1]
,"baseentity>":[244,1]
,"{protected":[244,1]
,"datasource":[244,8]
,"protected":[244,1]
,"jdbctemplate":[244,5]
,"\u002F*here":[244,1]
,"*\u002Fprotected":[244,1]
,"setjdbctemplate":[244,1]
,"jdbctemplate)":[244,1]
,"{this.jdbctemplate":[244,1]
,"=jdbctemplate":[244,1]
,"setdatasource":[244,1]
,"datasource)":[244,1]
,"{this.datasource":[244,1]
,"=datasource":[244,1]
,"\u002F*the":[244,1]
,"((value":[244,1]
,"(id))":[244,1]
,"{value":[244,1]
,"=this.jdbctemplate.queryforobject":[244,1]
,"(findbyid":[244,1]
,"mapper":[244,1]
,"(id":[244,1]
,"\u002F**rest":[244,1]
,"**\u002F\u002F**":[244,3]
,"**\u002F}":[244,2]
,"petdaoimpl.java":[244,1]
,"pet":[244,5]
,"really":[244,1]
,"petdaoimpl":[244,2]
,"<integer":[244,1]
,"pet>":[244,1]
,"{\u002F**":[244,1]
,"application.xml":[244,1]
,"<!--datasource":[244,1]
,"friends":[244,1]
,"<bean":[244,6]
,"id=\u0022":[244,5]
,"org.springframework.jdbc.datasource":[244,1]
,".fasterlazyconnectiondatasourceproxy":[244,1]
,"targetdatasource":[244,1]
,"ref=\u0022":[244,6]
,"datasourcetarget":[244,2]
,"<\u002Fbean>":[244,6]
,"com.mchange.v2.c3p0.combopooleddatasource":[244,1]
,"destroy-method=\u0022":[244,1]
,"value=\u0022${jdbc.username}":[244,1]
,"password":[244,1]
,"value=\u0022${jdbc.password}":[244,1]
,"driverclass":[244,1]
,"value=\u0022${jdbc.driverclassname}":[244,1]
,"jdbcurl":[244,1]
,"value=\u0022${jdbc.url}":[244,1]
,"initialpoolsize":[244,1]
,"value=\u0022":[244,7,246,5]
,"maxpoolsize":[244,1]
,"minpoolsize":[244,1]
,"acquireincrement":[244,1]
,"acquireretryattempts":[244,1]
,"<!--jdbctemplate":[244,1]
,"org.springframework.jdbc.core.simple.simplejdbctemplate":[244,1]
,"<constructor-arg":[244,3]
,"<!--the":[244,3]
,"ehcachemanagerfactorybean":[244,1]
,"configlocation":[244,1]
,"classpath:${ehcache.config}":[244,1]
,"injected":[244,1]
,"petcache":[244,2]
,"pets":[244,1]
,"openjpa":[245,1,246,2,247,1,248,1,249,2]
,"openjpca":[246,1]
,"apache":[246,1,249,1]
,"ehcache-openjpa":[246,2]
,"0.1":[246,1]
,"http:\u002F\u002Fehcache.org\u002Fdownloads\u002Fcatalog":[246,1]
,"persistence.xml":[246,1]
,"openjpa.log":[246,1]
,"sql=trace":[246,1]
,"openjpa.querycache":[246,1]
,"openjpa.datacache":[246,1]
,"openjpa.remotecommitprovider":[246,1]
,"sjvm":[246,1]
,"openjpa.datacachemanager":[246,1]
,"com.terracotta.domain.datatest":[246,1]
,"200":[246,1]
,"2400":[246,2]
,"20000":[246,2]
,"openjpa-querycache":[246,1]
,"org.terracotta.ehcachedx.monitor.probe.probepeerlistenerfactory":[246,1]
,"monitoraddress=localhost":[246,1]
,"monitorport=9889":[246,1]
,"memorymeasurement=true":[246,1]
,"ehcache\u2019s":[247,1]
,"(from":[247,1]
,"0.2)":[247,1]
,"tuned":[247,1]
,"verify":[248,2]
,"view":[248,1]
,"default.)":[248,1]
,"http:\u002F\u002Fopenjpa.apache.org\u002Fbuilds\u002F1.0.2\u002Fapache-openjpa-1.0.2\u002Fdocs\u002Fmanual\u002Fref_guide_caching.html":[249,1]
,"(part":[252,1]
,"project)":[252,1]
,"http:\u002F\u002Fgrails.org\u002Fplugin\u002Fspringcache":[252,1]
,"http:\u002F\u002Fgquick.blogspot.com\u002F2010\u002F03\u002Fclustering-grails-app-with-terracotta.html":[253,1]
,"1.4":[255,1]
,"-1.7":[255,1]
,"deploying":[256,1]
,"area":[256,1]
,"dependent":[256,1]
,"glassfish_home":[256,1]
,"$glassfish_home\u002Fbin":[256,1]
,"domain1":[256,7]
,"ant":[256,2]
,"deploy-default-web-app-glassfish":[256,1]
,"asadmin":[256,3]
,"start-domain":[256,2]
,"stop-domain":[256,1]
,"overwrite":[256,1]
,"9080":[256,1]
,"glassfish-configuration":[256,1]
,"quick-start":[256,1]
,"guides":[256,1]
,"https:\u002F\u002Fglassfish.java.net\u002Fdownloads\u002Fquickstart\u002Findex.html":[256,1]
,"technical":[257,1]
,"breach":[257,1]
,"restriction":[257,1]
,"security":[257,1]
,"domain.xml":[257,1]
,"<jvm-options>-djava.security.manager":[257,1]
,"<\u002Fjvm-options>":[257,1]
,"1.3":[257,2]
,"payloadutil":[257,1]
,"reports":[257,1]
,"ungzip":[257,1]
,"heartbeat":[257,1]
,"multicast":[257,2]
,"(different":[257,1]
,"glassfish)":[257,1]
,"https:\u002F\u002Fgithub.com\u002Fjsr107\u002Fehcache-jcache":[259,1]
,"questions":[261,1,264,1,267,1,270,1,273,1,276,1]
,"svn":[262,1]
,"getinstance":[262,1]
,"remember":[262,1,265,1]
,"coverage":[262,1]
,"(distributed":[262,1]
,"go.)":[262,1]
,"(user":[262,1]
,"provided)":[262,1]
,"net.sf.ehcache.distribution.rmicachemanagerpeerproviderfactory":[263,1]
,"peerdiscovery=automatic":[263,1]
,"multicastgroupaddress=230.0.0.1":[263,1]
,"multicastgroupport=4446":[263,1]
,"net.sf.ehcache.distribution.rmicachemanagerpeerlistenerfactory":[263,1,278,1]
,"net.sf.ehcache.distribution.rmicachereplicatorfactory":[263,2]
,"\u0022\u002F`>":[263,1]
,"sampledistributedcache1":[263,1]
,"cachereplicator":[263,1]
,"listening":[263,1]
,"plumbed":[263,1]
,"peering":[263,1]
,".getcachemanager":[263,1]
,".getcachemanagereventlistenerregistry":[263,1]
,".notifycacheadded":[263,1]
,"maxsize":[265,1]
,"infinite":[265,1]
,"retrieval":[265,1]
,"safer":[265,1]
,"reinsert":[265,1]
,"updatingcacheentryfactory":[265,1]
,"modifying":[265,1]
,"targeted":[265,1]
,"cacheentryfactories":[265,1]
,"selfpopulatingcaches":[265,1]
,"1.2":[265,1]
,"memorystores":[265,1]
,"advised":[265,1]
,"optimize":[265,1,271,1]
,"(tti)":[265,1]
,"eternally":[265,1]
,"multiplied":[265,1]
,"pushed":[265,1]
,"far":[265,1,272,1]
,"tradeoff":[265,1]
,"diskstore\u0027s":[265,1]
,"mount":[265,1]
,"linux":[265,1,269,1]
,"ramfs":[265,1]
,"2gb":[265,1]
,"consume":[266,1]
,"consumed":[266,1,274,2]
,"-xss":[266,1]
,"varies":[266,1]
,"512kb":[266,1]
,"linux)":[266,1]
,"100kb":[266,1]
,"spool":[266,1]
,"jdk1.5":[266,2]
,"registries":[266,1]
,"practical":[266,1]
,"telltale":[266,1]
,"java.rmi.server.exportexception":[266,1]
,"objid":[266,1]
,"indeed":[266,1]
,"interoperability":[267,1]
,"interact":[268,3]
,"standardquerycaches":[268,1]
,"blockingcachemanager":[268,1]
,"selfpopulatingcachemanager":[268,1]
,"cachemanagertest":[268,1,271,1]
,"cachetest":[268,1]
,"selfpopulatingcachetest":[268,1]
,"replicating":[268,1,275,1]
,"http:\u002F\u002Fopensource.atlassian.com\u002Fprojects\u002Fhibernate\u002Fbrowse\u002Fhhh-3392":[268,1]
,"3.3.0.cr2":[268,1]
,"july":[268,1]
,"2008":[268,1,269,1]
,"osgi":[268,2]
,"seeusing":[268,1]
,"activemq":[268,4]
,"retaining":[268,1]
,"destinatons":[268,1]
,"5.1":[268,1]
,"standing":[268,1]
,"thought":[268,1]
,"http:\u002F\u002Fissues.apache.org\u002Factivemq\u002Fbrowse\u002Famq-1255":[268,1]
,"jmscacheloader":[268,2]
,"reply":[268,1]
,"active":[268,1,271,1]
,"readily":[268,1]
,"ubuntu":[269,1]
,"debian":[269,1]
,"[replication":[269,1]
,"thread]":[269,1]
,"rmiasynchronouscachereplicator.flushreplicationqueue":[269,1]
,"(324)":[269,1]
,"send":[269,1]
,"refused":[269,4]
,"127.0.0.1":[269,3]
,"java.net.connectexception":[269,2]
,"java.rmi.connectexception":[269,1]
,"ubuntu\u002Fdebian":[269,1]
,"inetaddress.getlocalhost":[269,1]
,"loopback":[269,3]
,"distros":[269,1]
,"$hostname":[269,1]
,"mapped":[269,1]
,"device":[269,1]
,"assign":[269,1]
,"seeing":[269,1]
,"crack":[269,1]
,"hostname":[269,1]
,"permit":[269,1]
,"checks":[269,1]
,"vendor":[269,1]
,"cache.getquiet":[271,1]
,"net.sf.ehcache.disabled=true":[271,1]
,"achieve":[271,1]
,"test2":[271,1]
,"cache.getkeys":[271,1]
,"oldcachename":[271,1]
,"finish":[271,1]
,"stopped":[271,1]
,"exit":[271,1]
,"brand":[271,1]
,"confirms":[271,1]
,"testcreateshutdowncreate":[271,1]
,"counters":[271,1]
,"gathering":[271,2]
,"statistics=\u0022":[271,1]
,"experience":[271,1]
,"tool":[272,1]
,"remotedebugger":[272,1]
,"improved":[272,1]
,"status_uninitialised":[274,1]
,"testdiskonly":[274,1]
,"(mycache)":[274,1]
,"concurrenthashmap":[274,3]
,"ourselves":[274,1]
,"arraylist":[274,2]
,"http:\u002F\u002Fwww.codeinstructions.com\u002F2008\u002F09\u002Finstance-pools-with-weakhashmap.html":[274,1]
,"map.put":[274,1]
,"(pool.replace":[274,1]
,"keyarray.set":[274,1]
,"(index":[274,1]
,"pool.replace":[274,1]
,"producing":[274,1]
,"handing":[274,1]
,"introduce":[274,1]
,"iteration":[274,1]
,"keyarray":[274,1]
,"bringing":[274,1]
,"pre":[274,2]
,"1.7":[274,1]
,"considerably":[274,1]
,"crashed":[274,1]
,"intact":[274,1]
,"swapping":[274,1]
,"crash-resilient":[274,1]
,"persistencestrategy=\u0022":[274,1]
,"(whether":[274,1]
,"softreferences":[275,5]
,"interrupted":[275,1]
,"collected":[275,1]
,"softreference":[275,1]
,"reclaimed":[275,4]
,"sending":[275,1]
,"cachepeer":[275,1]
,"fix":[275,1,277,1]
,"-xms":[275,2]
,"warming":[275,1]
,"interruption":[275,1]
,"dangerously":[275,1]
,"java.lang.verifyerror":[277,1]
,"backport":[277,1]
,"backport-concurrent":[277,1]
,"java.util.concurrency":[277,1]
,"-java":[277,1]
,"4-6":[277,1]
,"javax.servlet.servletexception":[277,1]
,"application\u0027s":[277,1]
,"diskstorepath":[277,1]
,"c:\u005Ctemp\u005Ctempcache":[277,1]
,"trying":[277,1]
,"resolving":[277,1]
,"eliminate":[277,1]
,"i.e":[277,1]
,"net.sf.ehcache.hibernate.singletonehcacheprovider":[277,1]
,"cachemanager.add":[277,1]
,"remotecacheexception":[278,1]
,"net.sf.ehcache.distribution.remotecacheexception":[278,1]
,"unmarshaling":[278,1]
,"java.net.sockettimeoutexception":[278,1]
,"timed":[278,1]
,"sockettimeoutmillis":[278,2]
,"sender":[278,1]
,"cachemanagerpeerlistenerfactory":[278,1]
,"120000":[278,1]
,"hostname=fully_qualified_hostname_or_ip":[278,1]
,"port=40001":[278,1]
,"sockettimeoutmillis=120000":[278,1]
}
}
;Search.control.advance(info);
